((proc
  (main mainenv1011084 mainargs1011085)
  (let ((ae997872 (make-closure clo1011082)))
    (let ((ae997873 (make-closure clo1011080)))
      (let ((ae997874 (make-closure clo1010718)))
        (let ((args1010707$ae997872$0 '()))
          (let ((args1010707$ae997872$1
                 (prim cons ae997874 args1010707$ae997872$0)))
            (let ((args1010707$ae997872$2
                   (prim cons ae997873 args1010707$ae997872$1)))
              (clo-app ae997872 args1010707$ae997872$2))))))))
 (proc
  (clo1011082 env1011083 arglist1009943)
  (let ((k997864 (prim car arglist1009943)))
    (let ((arglist1009944 (prim cdr arglist1009943)))
      (let ((yu997336 (prim car arglist1009944)))
        (let ((args1009946$yu997336$0 '()))
          (let ((args1009946$yu997336$1
                 (prim cons yu997336 args1009946$yu997336$0)))
            (let ((args1009946$yu997336$2
                   (prim cons k997864 args1009946$yu997336$1)))
              (clo-app yu997336 args1009946$yu997336$2))))))))
 (proc
  (clo1011080 env1011081 arglist1009947)
  (let ((unusedk997654 (prim car arglist1009947)))
    (let ((arglist1009948 (prim cdr arglist1009947)))
      (let ((Ycmb997335 (prim car arglist1009948)))
        (let ((ae997930 (make-closure clo1011078 Ycmb997335)))
          (let ((ae997931 (make-closure clo1010726)))
            (let ((args1010686$Ycmb997335$0 '()))
              (let ((args1010686$Ycmb997335$1
                     (prim cons ae997931 args1010686$Ycmb997335$0)))
                (let ((args1010686$Ycmb997335$2
                       (prim cons ae997930 args1010686$Ycmb997335$1)))
                  (clo-app Ycmb997335 args1010686$Ycmb997335$2))))))))))
 (proc
  (clo1010718 env1010719 arglist1010687)
  (let ((k997865 (prim car arglist1010687)))
    (let ((arglist1010688 (prim cdr arglist1010687)))
      (let ((y997337 (prim car arglist1010688)))
        (let ((ae997876 (make-closure clo1010716)))
          (let ((ae997877 (make-closure clo1010714 y997337)))
            (let ((args1010706$k997865$0 '()))
              (let ((args1010706$k997865$1
                     (prim cons ae997877 args1010706$k997865$0)))
                (let ((args1010706$k997865$2
                       (prim cons ae997876 args1010706$k997865$1)))
                  (clo-app k997865 args1010706$k997865$2))))))))))
 (proc
  (clo1010716 env1010717 arglist1010690)
  (let ((_un (prim car arglist1010690)))
    (let ((arglist1010691 (prim cdr arglist1010690)))
      (let ((_used (prim car arglist1010691)))
        (let ((args1010693$_un$0 '()))
          (let ((args1010693$_un$1 (prim cons _used args1010693$_un$0)))
            (let ((args1010693$_un$2 (prim cons _used args1010693$_un$1)))
              (clo-app _un args1010693$_un$2))))))))
 (proc
  (clo1010714 env1010715 arglist1010694)
  (let ((y997337 (env-ref env1010715 0)))
    (let ((k997866 (prim car arglist1010694)))
      (let ((arglist1010695 (prim cdr arglist1010694)))
        (let ((f997338 (prim car arglist1010695)))
          (let ((ae997880 (make-closure clo1010712 y997337 f997338)))
            (let ((args1010705$f997338$0 '()))
              (let ((args1010705$f997338$1
                     (prim cons ae997880 args1010705$f997338$0)))
                (let ((args1010705$f997338$2
                       (prim cons k997866 args1010705$f997338$1)))
                  (clo-app f997338 args1010705$f997338$2))))))))))
 (proc
  (clo1010712 env1010713 k-and-args997868)
  (let ((y997337 (env-ref env1010713 0)))
    (let ((f997338 (env-ref env1010713 1)))
      (let ((k997867 (prim car k-and-args997868)))
        (let ((args997339 (prim cdr k-and-args997868)))
          (let ((ae997884
                 (make-closure clo1010710 k997867 args997339 f997338)))
            (let ((args1010704$y997337$0 '()))
              (let ((args1010704$y997337$1
                     (prim cons y997337 args1010704$y997337$0)))
                (let ((args1010704$y997337$2
                       (prim cons ae997884 args1010704$y997337$1)))
                  (clo-app y997337 args1010704$y997337$2))))))))))
 (proc
  (clo1010710 env1010711 arglist1010697)
  (let ((k997867 (env-ref env1010711 0)))
    (let ((args997339 (env-ref env1010711 1)))
      (let ((f997338 (env-ref env1010711 2)))
        (let ((unusedk997869 (prim car arglist1010697)))
          (let ((arglist1010698 (prim cdr arglist1010697)))
            (let ((anf-bind997515 (prim car arglist1010698)))
              (let ((ae997887 (make-closure clo1010708 k997867 args997339)))
                (let ((args1010703$anf-bind997515$0 '()))
                  (let ((args1010703$anf-bind997515$1
                         (prim cons f997338 args1010703$anf-bind997515$0)))
                    (let ((args1010703$anf-bind997515$2
                           (prim cons ae997887 args1010703$anf-bind997515$1)))
                      (clo-app
                       anf-bind997515
                       args1010703$anf-bind997515$2))))))))))))
 (proc
  (clo1010708 env1010709 arglist1010700)
  (let ((k997867 (env-ref env1010709 0)))
    (let ((args997339 (env-ref env1010709 1)))
      (let ((unusedk997870 (prim car arglist1010700)))
        (let ((arglist1010701 (prim cdr arglist1010700)))
          (let ((anf-bind997516 (prim car arglist1010701)))
            (let ((applyarg997871 (prim cons k997867 args997339)))
              (clo-app anf-bind997516 applyarg997871))))))))
 (proc
  (clo1011078 env1011079 arglist1009950)
  (let ((Ycmb997335 (env-ref env1011079 0)))
    (let ((unusedk997655 (prim car arglist1009950)))
      (let ((arglist1009951 (prim cdr arglist1009950)))
        (let ((%foldr1997340 (prim car arglist1009951)))
          (let ((ae997985 (make-closure clo1011076 %foldr1997340 Ycmb997335)))
            (let ((ae997986 (make-closure clo1010736)))
              (let ((args1010666$Ycmb997335$0 '()))
                (let ((args1010666$Ycmb997335$1
                       (prim cons ae997986 args1010666$Ycmb997335$0)))
                  (let ((args1010666$Ycmb997335$2
                         (prim cons ae997985 args1010666$Ycmb997335$1)))
                    (clo-app Ycmb997335 args1010666$Ycmb997335$2)))))))))))
 (proc
  (clo1010726 env1010727 arglist1010667)
  (let ((k997861 (prim car arglist1010667)))
    (let ((arglist1010668 (prim cdr arglist1010667)))
      (let ((%foldr1997341 (prim car arglist1010668)))
        (let ((ae997933 (make-closure clo1010724)))
          (let ((ae997934 (make-closure clo1010722 %foldr1997341)))
            (let ((args1010685$k997861$0 '()))
              (let ((args1010685$k997861$1
                     (prim cons ae997934 args1010685$k997861$0)))
                (let ((args1010685$k997861$2
                       (prim cons ae997933 args1010685$k997861$1)))
                  (clo-app k997861 args1010685$k997861$2))))))))))
 (proc
  (clo1010724 env1010725 arglist1010670)
  (let ((_un (prim car arglist1010670)))
    (let ((arglist1010671 (prim cdr arglist1010670)))
      (let ((_used (prim car arglist1010671)))
        (let ((args1010673$_un$0 '()))
          (let ((args1010673$_un$1 (prim cons _used args1010673$_un$0)))
            (let ((args1010673$_un$2 (prim cons _used args1010673$_un$1)))
              (clo-app _un args1010673$_un$2))))))))
 (proc
  (clo1010722 env1010723 arglist1010674)
  (let ((%foldr1997341 (env-ref env1010723 0)))
    (let ((k997862 (prim car arglist1010674)))
      (let ((arglist1010675 (prim cdr arglist1010674)))
        (let ((f997342 (prim car arglist1010675)))
          (let ((arglist1010676 (prim cdr arglist1010675)))
            (let ((acc997343 (prim car arglist1010676)))
              (let ((arglist1010677 (prim cdr arglist1010676)))
                (let ((lst997344 (prim car arglist1010677)))
                  (let ((anf-bind997517 (prim null? lst997344)))
                    (if anf-bind997517
                      (let ((args1010679$k997862$0 '()))
                        (let ((args1010679$k997862$1
                               (prim cons acc997343 args1010679$k997862$0)))
                          (let ((args1010679$k997862$2
                                 (prim cons acc997343 args1010679$k997862$1)))
                            (clo-app k997862 args1010679$k997862$2))))
                      (let ((anf-bind997518 (prim car lst997344)))
                        (let ((anf-bind997519 (prim cdr lst997344)))
                          (let ((ae997943
                                 (make-closure
                                  clo1010720
                                  anf-bind997518
                                  f997342
                                  k997862)))
                            (let ((args1010684$%foldr1997341$0 '()))
                              (let ((args1010684$%foldr1997341$1
                                     (prim
                                      cons
                                      anf-bind997519
                                      args1010684$%foldr1997341$0)))
                                (let ((args1010684$%foldr1997341$2
                                       (prim
                                        cons
                                        acc997343
                                        args1010684$%foldr1997341$1)))
                                  (let ((args1010684$%foldr1997341$3
                                         (prim
                                          cons
                                          f997342
                                          args1010684$%foldr1997341$2)))
                                    (let ((args1010684$%foldr1997341$4
                                           (prim
                                            cons
                                            ae997943
                                            args1010684$%foldr1997341$3)))
                                      (clo-app
                                       %foldr1997341
                                       args1010684$%foldr1997341$4))))))))))))))))))))
 (proc
  (clo1010720 env1010721 arglist1010680)
  (let ((anf-bind997518 (env-ref env1010721 0)))
    (let ((f997342 (env-ref env1010721 1)))
      (let ((k997862 (env-ref env1010721 2)))
        (let ((unusedk997863 (prim car arglist1010680)))
          (let ((arglist1010681 (prim cdr arglist1010680)))
            (let ((anf-bind997520 (prim car arglist1010681)))
              (let ((args1010683$f997342$0 '()))
                (let ((args1010683$f997342$1
                       (prim cons anf-bind997520 args1010683$f997342$0)))
                  (let ((args1010683$f997342$2
                         (prim cons anf-bind997518 args1010683$f997342$1)))
                    (let ((args1010683$f997342$3
                           (prim cons k997862 args1010683$f997342$2)))
                      (clo-app f997342 args1010683$f997342$3))))))))))))
 (proc
  (clo1011076 env1011077 arglist1009953)
  (let ((%foldr1997340 (env-ref env1011077 0)))
    (let ((Ycmb997335 (env-ref env1011077 1)))
      (let ((unusedk997656 (prim car arglist1009953)))
        (let ((arglist1009954 (prim cdr arglist1009953)))
          (let ((%map1997345 (prim car arglist1009954)))
            (let ((ae998054
                   (make-closure
                    clo1011074
                    %foldr1997340
                    Ycmb997335
                    %map1997345)))
              (let ((ae998055 (make-closure clo1010744)))
                (let ((args1010643$Ycmb997335$0 '()))
                  (let ((args1010643$Ycmb997335$1
                         (prim cons ae998055 args1010643$Ycmb997335$0)))
                    (let ((args1010643$Ycmb997335$2
                           (prim cons ae998054 args1010643$Ycmb997335$1)))
                      (clo-app Ycmb997335 args1010643$Ycmb997335$2))))))))))))
 (proc
  (clo1010736 env1010737 arglist1010644)
  (let ((k997856 (prim car arglist1010644)))
    (let ((arglist1010645 (prim cdr arglist1010644)))
      (let ((%map997346 (prim car arglist1010645)))
        (let ((ae997988 (make-closure clo1010734)))
          (let ((ae997989 (make-closure clo1010732 %map997346)))
            (let ((args1010665$k997856$0 '()))
              (let ((args1010665$k997856$1
                     (prim cons ae997989 args1010665$k997856$0)))
                (let ((args1010665$k997856$2
                       (prim cons ae997988 args1010665$k997856$1)))
                  (clo-app k997856 args1010665$k997856$2))))))))))
 (proc
  (clo1010734 env1010735 arglist1010647)
  (let ((_un (prim car arglist1010647)))
    (let ((arglist1010648 (prim cdr arglist1010647)))
      (let ((_used (prim car arglist1010648)))
        (let ((args1010650$_un$0 '()))
          (let ((args1010650$_un$1 (prim cons _used args1010650$_un$0)))
            (let ((args1010650$_un$2 (prim cons _used args1010650$_un$1)))
              (clo-app _un args1010650$_un$2))))))))
 (proc
  (clo1010732 env1010733 arglist1010651)
  (let ((%map997346 (env-ref env1010733 0)))
    (let ((k997857 (prim car arglist1010651)))
      (let ((arglist1010652 (prim cdr arglist1010651)))
        (let ((f997347 (prim car arglist1010652)))
          (let ((arglist1010653 (prim cdr arglist1010652)))
            (let ((lst997348 (prim car arglist1010653)))
              (let ((anf-bind997521 (prim null? lst997348)))
                (if anf-bind997521
                  (let ((ae997993 '()))
                    (let ((ae997994 '()))
                      (let ((args1010655$k997857$0 '()))
                        (let ((args1010655$k997857$1
                               (prim cons ae997994 args1010655$k997857$0)))
                          (let ((args1010655$k997857$2
                                 (prim cons ae997993 args1010655$k997857$1)))
                            (clo-app k997857 args1010655$k997857$2))))))
                  (let ((anf-bind997522 (prim car lst997348)))
                    (let ((ae998003
                           (make-closure
                            clo1010730
                            lst997348
                            k997857
                            f997347
                            %map997346)))
                      (let ((args1010664$f997347$0 '()))
                        (let ((args1010664$f997347$1
                               (prim
                                cons
                                anf-bind997522
                                args1010664$f997347$0)))
                          (let ((args1010664$f997347$2
                                 (prim cons ae998003 args1010664$f997347$1)))
                            (clo-app
                             f997347
                             args1010664$f997347$2)))))))))))))))
 (proc
  (clo1010730 env1010731 arglist1010656)
  (let ((lst997348 (env-ref env1010731 0)))
    (let ((k997857 (env-ref env1010731 1)))
      (let ((f997347 (env-ref env1010731 2)))
        (let ((%map997346 (env-ref env1010731 3)))
          (let ((unusedk997858 (prim car arglist1010656)))
            (let ((arglist1010657 (prim cdr arglist1010656)))
              (let ((anf-bind997523 (prim car arglist1010657)))
                (let ((anf-bind997524 (prim cdr lst997348)))
                  (let ((ae998007
                         (make-closure clo1010728 anf-bind997523 k997857)))
                    (let ((args1010663$%map997346$0 '()))
                      (let ((args1010663$%map997346$1
                             (prim
                              cons
                              anf-bind997524
                              args1010663$%map997346$0)))
                        (let ((args1010663$%map997346$2
                               (prim cons f997347 args1010663$%map997346$1)))
                          (let ((args1010663$%map997346$3
                                 (prim
                                  cons
                                  ae998007
                                  args1010663$%map997346$2)))
                            (clo-app
                             %map997346
                             args1010663$%map997346$3)))))))))))))))
 (proc
  (clo1010728 env1010729 arglist1010659)
  (let ((anf-bind997523 (env-ref env1010729 0)))
    (let ((k997857 (env-ref env1010729 1)))
      (let ((unusedk997859 (prim car arglist1010659)))
        (let ((arglist1010660 (prim cdr arglist1010659)))
          (let ((anf-bind997525 (prim car arglist1010660)))
            (let ((prim-ret997860 (prim cons anf-bind997523 anf-bind997525)))
              (let ((args1010662$k997857$0 '()))
                (let ((args1010662$k997857$1
                       (prim cons prim-ret997860 args1010662$k997857$0)))
                  (let ((args1010662$k997857$2
                         (prim cons prim-ret997860 args1010662$k997857$1)))
                    (clo-app k997857 args1010662$k997857$2)))))))))))
 (proc
  (clo1011074 env1011075 arglist1009956)
  (let ((%foldr1997340 (env-ref env1011075 0)))
    (let ((Ycmb997335 (env-ref env1011075 1)))
      (let ((%map1997345 (env-ref env1011075 2)))
        (let ((unusedk997657 (prim car arglist1009956)))
          (let ((arglist1009957 (prim cdr arglist1009956)))
            (let ((%take997349 (prim car arglist1009957)))
              (let ((ae998171
                     (make-closure
                      clo1011072
                      %take997349
                      %foldr1997340
                      Ycmb997335
                      %map1997345)))
                (let ((ae998172 (make-closure clo1010752)))
                  (let ((args1010623$Ycmb997335$0 '()))
                    (let ((args1010623$Ycmb997335$1
                           (prim cons ae998172 args1010623$Ycmb997335$0)))
                      (let ((args1010623$Ycmb997335$2
                             (prim cons ae998171 args1010623$Ycmb997335$1)))
                        (clo-app
                         Ycmb997335
                         args1010623$Ycmb997335$2)))))))))))))
 (proc
  (clo1010744 env1010745 arglist1010624)
  (let ((k997852 (prim car arglist1010624)))
    (let ((arglist1010625 (prim cdr arglist1010624)))
      (let ((%take997350 (prim car arglist1010625)))
        (let ((ae998057 (make-closure clo1010742)))
          (let ((ae998058 (make-closure clo1010740 %take997350)))
            (let ((args1010642$k997852$0 '()))
              (let ((args1010642$k997852$1
                     (prim cons ae998058 args1010642$k997852$0)))
                (let ((args1010642$k997852$2
                       (prim cons ae998057 args1010642$k997852$1)))
                  (clo-app k997852 args1010642$k997852$2))))))))))
 (proc
  (clo1010742 env1010743 arglist1010627)
  (let ((_un (prim car arglist1010627)))
    (let ((arglist1010628 (prim cdr arglist1010627)))
      (let ((_used (prim car arglist1010628)))
        (let ((args1010630$_un$0 '()))
          (let ((args1010630$_un$1 (prim cons _used args1010630$_un$0)))
            (let ((args1010630$_un$2 (prim cons _used args1010630$_un$1)))
              (clo-app _un args1010630$_un$2))))))))
 (proc
  (clo1010740 env1010741 arglist1010631)
  (let ((%take997350 (env-ref env1010741 0)))
    (let ((k997853 (prim car arglist1010631)))
      (let ((arglist1010632 (prim cdr arglist1010631)))
        (let ((lst997351 (prim car arglist1010632)))
          (let ((arglist1010633 (prim cdr arglist1010632)))
            (let ((n997352 (prim car arglist1010633)))
              (let ((ae998060 '0))
                (let ((anf-bind997526 (prim = n997352 ae998060)))
                  (if anf-bind997526
                    (let ((ae998063 '()))
                      (let ((ae998064 '()))
                        (let ((args1010635$k997853$0 '()))
                          (let ((args1010635$k997853$1
                                 (prim cons ae998064 args1010635$k997853$0)))
                            (let ((args1010635$k997853$2
                                   (prim cons ae998063 args1010635$k997853$1)))
                              (clo-app k997853 args1010635$k997853$2))))))
                    (let ((anf-bind997527 (prim null? lst997351)))
                      (if anf-bind997527
                        (let ((ae998074 '()))
                          (let ((ae998075 '()))
                            (let ((args1010636$k997853$0 '()))
                              (let ((args1010636$k997853$1
                                     (prim
                                      cons
                                      ae998075
                                      args1010636$k997853$0)))
                                (let ((args1010636$k997853$2
                                       (prim
                                        cons
                                        ae998074
                                        args1010636$k997853$1)))
                                  (clo-app k997853 args1010636$k997853$2))))))
                        (let ((anf-bind997528 (prim car lst997351)))
                          (let ((anf-bind997529 (prim cdr lst997351)))
                            (let ((ae998085 '1))
                              (let ((anf-bind997530 (prim - n997352 ae998085)))
                                (let ((ae998087
                                       (make-closure
                                        clo1010738
                                        anf-bind997528
                                        k997853)))
                                  (let ((args1010641$%take997350$0 '()))
                                    (let ((args1010641$%take997350$1
                                           (prim
                                            cons
                                            anf-bind997530
                                            args1010641$%take997350$0)))
                                      (let ((args1010641$%take997350$2
                                             (prim
                                              cons
                                              anf-bind997529
                                              args1010641$%take997350$1)))
                                        (let ((args1010641$%take997350$3
                                               (prim
                                                cons
                                                ae998087
                                                args1010641$%take997350$2)))
                                          (clo-app
                                           %take997350
                                           args1010641$%take997350$3))))))))))))))))))))))
 (proc
  (clo1010738 env1010739 arglist1010637)
  (let ((anf-bind997528 (env-ref env1010739 0)))
    (let ((k997853 (env-ref env1010739 1)))
      (let ((unusedk997854 (prim car arglist1010637)))
        (let ((arglist1010638 (prim cdr arglist1010637)))
          (let ((anf-bind997531 (prim car arglist1010638)))
            (let ((prim-ret997855 (prim cons anf-bind997528 anf-bind997531)))
              (let ((args1010640$k997853$0 '()))
                (let ((args1010640$k997853$1
                       (prim cons prim-ret997855 args1010640$k997853$0)))
                  (let ((args1010640$k997853$2
                         (prim cons prim-ret997855 args1010640$k997853$1)))
                    (clo-app k997853 args1010640$k997853$2)))))))))))
 (proc
  (clo1011072 env1011073 arglist1009959)
  (let ((%take997349 (env-ref env1011073 0)))
    (let ((%foldr1997340 (env-ref env1011073 1)))
      (let ((Ycmb997335 (env-ref env1011073 2)))
        (let ((%map1997345 (env-ref env1011073 3)))
          (let ((unusedk997658 (prim car arglist1009959)))
            (let ((arglist1009960 (prim cdr arglist1009959)))
              (let ((%length997353 (prim car arglist1009960)))
                (let ((ae998231
                       (make-closure
                        clo1011070
                        %take997349
                        %foldr1997340
                        %length997353
                        Ycmb997335
                        %map1997345)))
                  (let ((ae998232 (make-closure clo1010760)))
                    (let ((args1010605$Ycmb997335$0 '()))
                      (let ((args1010605$Ycmb997335$1
                             (prim cons ae998232 args1010605$Ycmb997335$0)))
                        (let ((args1010605$Ycmb997335$2
                               (prim cons ae998231 args1010605$Ycmb997335$1)))
                          (clo-app
                           Ycmb997335
                           args1010605$Ycmb997335$2))))))))))))))
 (proc
  (clo1010752 env1010753 arglist1010606)
  (let ((k997848 (prim car arglist1010606)))
    (let ((arglist1010607 (prim cdr arglist1010606)))
      (let ((%length997354 (prim car arglist1010607)))
        (let ((ae998174 (make-closure clo1010750)))
          (let ((ae998175 (make-closure clo1010748 %length997354)))
            (let ((args1010622$k997848$0 '()))
              (let ((args1010622$k997848$1
                     (prim cons ae998175 args1010622$k997848$0)))
                (let ((args1010622$k997848$2
                       (prim cons ae998174 args1010622$k997848$1)))
                  (clo-app k997848 args1010622$k997848$2))))))))))
 (proc
  (clo1010750 env1010751 arglist1010609)
  (let ((_un (prim car arglist1010609)))
    (let ((arglist1010610 (prim cdr arglist1010609)))
      (let ((_used (prim car arglist1010610)))
        (let ((args1010612$_un$0 '()))
          (let ((args1010612$_un$1 (prim cons _used args1010612$_un$0)))
            (let ((args1010612$_un$2 (prim cons _used args1010612$_un$1)))
              (clo-app _un args1010612$_un$2))))))))
 (proc
  (clo1010748 env1010749 arglist1010613)
  (let ((%length997354 (env-ref env1010749 0)))
    (let ((k997849 (prim car arglist1010613)))
      (let ((arglist1010614 (prim cdr arglist1010613)))
        (let ((lst997355 (prim car arglist1010614)))
          (let ((anf-bind997532 (prim null? lst997355)))
            (if anf-bind997532
              (let ((ae998179 '0))
                (let ((ae998180 '0))
                  (let ((args1010616$k997849$0 '()))
                    (let ((args1010616$k997849$1
                           (prim cons ae998180 args1010616$k997849$0)))
                      (let ((args1010616$k997849$2
                             (prim cons ae998179 args1010616$k997849$1)))
                        (clo-app k997849 args1010616$k997849$2))))))
              (let ((anf-bind997533 (prim cdr lst997355)))
                (let ((ae998189 (make-closure clo1010746 k997849)))
                  (let ((args1010621$%length997354$0 '()))
                    (let ((args1010621$%length997354$1
                           (prim
                            cons
                            anf-bind997533
                            args1010621$%length997354$0)))
                      (let ((args1010621$%length997354$2
                             (prim cons ae998189 args1010621$%length997354$1)))
                        (clo-app
                         %length997354
                         args1010621$%length997354$2)))))))))))))
 (proc
  (clo1010746 env1010747 arglist1010617)
  (let ((k997849 (env-ref env1010747 0)))
    (let ((unusedk997850 (prim car arglist1010617)))
      (let ((arglist1010618 (prim cdr arglist1010617)))
        (let ((anf-bind997534 (prim car arglist1010618)))
          (let ((ae998191 '1))
            (let ((prim-ret997851 (prim + ae998191 anf-bind997534)))
              (let ((args1010620$k997849$0 '()))
                (let ((args1010620$k997849$1
                       (prim cons prim-ret997851 args1010620$k997849$0)))
                  (let ((args1010620$k997849$2
                         (prim cons prim-ret997851 args1010620$k997849$1)))
                    (clo-app k997849 args1010620$k997849$2)))))))))))
 (proc
  (clo1011070 env1011071 arglist1009962)
  (let ((%take997349 (env-ref env1011071 0)))
    (let ((%foldr1997340 (env-ref env1011071 1)))
      (let ((%length997353 (env-ref env1011071 2)))
        (let ((Ycmb997335 (env-ref env1011071 3)))
          (let ((%map1997345 (env-ref env1011071 4)))
            (let ((unusedk997659 (prim car arglist1009962)))
              (let ((arglist1009963 (prim cdr arglist1009962)))
                (let ((%foldl1997356 (prim car arglist1009963)))
                  (let ((%last997361 (make-closure clo1011068 %foldl1997356)))
                    (let ((%drop-right997365
                           (make-closure
                            clo1011064
                            %take997349
                            %length997353)))
                      (let ((ae998315
                             (make-closure
                              clo1011060
                              %foldr1997340
                              %drop-right997365
                              %length997353
                              Ycmb997335
                              %last997361
                              %foldl1997356)))
                        (let ((ae998316
                               (make-closure
                                clo1010788
                                %foldr1997340
                                %map1997345)))
                          (let ((args1010585$Ycmb997335$0 '()))
                            (let ((args1010585$Ycmb997335$1
                                   (prim
                                    cons
                                    ae998316
                                    args1010585$Ycmb997335$0)))
                              (let ((args1010585$Ycmb997335$2
                                     (prim
                                      cons
                                      ae998315
                                      args1010585$Ycmb997335$1)))
                                (clo-app
                                 Ycmb997335
                                 args1010585$Ycmb997335$2)))))))))))))))))
 (proc
  (clo1010760 env1010761 arglist1010586)
  (let ((k997845 (prim car arglist1010586)))
    (let ((arglist1010587 (prim cdr arglist1010586)))
      (let ((%foldl1997357 (prim car arglist1010587)))
        (let ((ae998234 (make-closure clo1010758)))
          (let ((ae998235 (make-closure clo1010756 %foldl1997357)))
            (let ((args1010604$k997845$0 '()))
              (let ((args1010604$k997845$1
                     (prim cons ae998235 args1010604$k997845$0)))
                (let ((args1010604$k997845$2
                       (prim cons ae998234 args1010604$k997845$1)))
                  (clo-app k997845 args1010604$k997845$2))))))))))
 (proc
  (clo1010758 env1010759 arglist1010589)
  (let ((_un (prim car arglist1010589)))
    (let ((arglist1010590 (prim cdr arglist1010589)))
      (let ((_used (prim car arglist1010590)))
        (let ((args1010592$_un$0 '()))
          (let ((args1010592$_un$1 (prim cons _used args1010592$_un$0)))
            (let ((args1010592$_un$2 (prim cons _used args1010592$_un$1)))
              (clo-app _un args1010592$_un$2))))))))
 (proc
  (clo1010756 env1010757 arglist1010593)
  (let ((%foldl1997357 (env-ref env1010757 0)))
    (let ((k997846 (prim car arglist1010593)))
      (let ((arglist1010594 (prim cdr arglist1010593)))
        (let ((f997358 (prim car arglist1010594)))
          (let ((arglist1010595 (prim cdr arglist1010594)))
            (let ((acc997359 (prim car arglist1010595)))
              (let ((arglist1010596 (prim cdr arglist1010595)))
                (let ((lst997360 (prim car arglist1010596)))
                  (let ((anf-bind997535 (prim null? lst997360)))
                    (if anf-bind997535
                      (let ((args1010598$k997846$0 '()))
                        (let ((args1010598$k997846$1
                               (prim cons acc997359 args1010598$k997846$0)))
                          (let ((args1010598$k997846$2
                                 (prim cons acc997359 args1010598$k997846$1)))
                            (clo-app k997846 args1010598$k997846$2))))
                      (let ((anf-bind997536 (prim car lst997360)))
                        (let ((ae998243
                               (make-closure
                                clo1010754
                                f997358
                                %foldl1997357
                                lst997360
                                k997846)))
                          (let ((args1010603$f997358$0 '()))
                            (let ((args1010603$f997358$1
                                   (prim
                                    cons
                                    acc997359
                                    args1010603$f997358$0)))
                              (let ((args1010603$f997358$2
                                     (prim
                                      cons
                                      anf-bind997536
                                      args1010603$f997358$1)))
                                (let ((args1010603$f997358$3
                                       (prim
                                        cons
                                        ae998243
                                        args1010603$f997358$2)))
                                  (clo-app
                                   f997358
                                   args1010603$f997358$3))))))))))))))))))
 (proc
  (clo1010754 env1010755 arglist1010599)
  (let ((f997358 (env-ref env1010755 0)))
    (let ((%foldl1997357 (env-ref env1010755 1)))
      (let ((lst997360 (env-ref env1010755 2)))
        (let ((k997846 (env-ref env1010755 3)))
          (let ((unusedk997847 (prim car arglist1010599)))
            (let ((arglist1010600 (prim cdr arglist1010599)))
              (let ((anf-bind997537 (prim car arglist1010600)))
                (let ((anf-bind997538 (prim cdr lst997360)))
                  (let ((args1010602$%foldl1997357$0 '()))
                    (let ((args1010602$%foldl1997357$1
                           (prim
                            cons
                            anf-bind997538
                            args1010602$%foldl1997357$0)))
                      (let ((args1010602$%foldl1997357$2
                             (prim
                              cons
                              anf-bind997537
                              args1010602$%foldl1997357$1)))
                        (let ((args1010602$%foldl1997357$3
                               (prim
                                cons
                                f997358
                                args1010602$%foldl1997357$2)))
                          (let ((args1010602$%foldl1997357$4
                                 (prim
                                  cons
                                  k997846
                                  args1010602$%foldl1997357$3)))
                            (clo-app
                             %foldl1997357
                             args1010602$%foldl1997357$4)))))))))))))))
 (proc
  (clo1011068 env1011069 arglist1009965)
  (let ((%foldl1997356 (env-ref env1011069 0)))
    (let ((k997660 (prim car arglist1009965)))
      (let ((arglist1009966 (prim cdr arglist1009965)))
        (let ((lst997362 (prim car arglist1009966)))
          (let ((ae998286 (make-closure clo1011066)))
            (let ((ae998287 '()))
              (let ((args1009973$%foldl1997356$0 '()))
                (let ((args1009973$%foldl1997356$1
                       (prim cons lst997362 args1009973$%foldl1997356$0)))
                  (let ((args1009973$%foldl1997356$2
                         (prim cons ae998287 args1009973$%foldl1997356$1)))
                    (let ((args1009973$%foldl1997356$3
                           (prim cons ae998286 args1009973$%foldl1997356$2)))
                      (let ((args1009973$%foldl1997356$4
                             (prim cons k997660 args1009973$%foldl1997356$3)))
                        (clo-app
                         %foldl1997356
                         args1009973$%foldl1997356$4)))))))))))))
 (proc
  (clo1011064 env1011065 arglist1009974)
  (let ((%take997349 (env-ref env1011065 0)))
    (let ((%length997353 (env-ref env1011065 1)))
      (let ((k997662 (prim car arglist1009974)))
        (let ((arglist1009975 (prim cdr arglist1009974)))
          (let ((lst997366 (prim car arglist1009975)))
            (let ((arglist1009976 (prim cdr arglist1009975)))
              (let ((n997367 (prim car arglist1009976)))
                (let ((ae998303
                       (make-closure
                        clo1011062
                        n997367
                        %take997349
                        lst997366
                        k997662)))
                  (let ((args1009982$%length997353$0 '()))
                    (let ((args1009982$%length997353$1
                           (prim cons lst997366 args1009982$%length997353$0)))
                      (let ((args1009982$%length997353$2
                             (prim cons ae998303 args1009982$%length997353$1)))
                        (clo-app
                         %length997353
                         args1009982$%length997353$2)))))))))))))
 (proc
  (clo1011060 env1011061 arglist1009983)
  (let ((%foldr1997340 (env-ref env1011061 0)))
    (let ((%drop-right997365 (env-ref env1011061 1)))
      (let ((%length997353 (env-ref env1011061 2)))
        (let ((Ycmb997335 (env-ref env1011061 3)))
          (let ((%last997361 (env-ref env1011061 4)))
            (let ((%foldl1997356 (env-ref env1011061 5)))
              (let ((unusedk997664 (prim car arglist1009983)))
                (let ((arglist1009984 (prim cdr arglist1009983)))
                  (let ((%foldr997368 (prim car arglist1009984)))
                    (let ((%map1997382
                           (make-closure clo1011058 %foldr1997340)))
                      (let ((%map997387
                             (make-closure
                              clo1011052
                              %drop-right997365
                              %foldr997368
                              %last997361)))
                        (let ((ae998664
                               (make-closure
                                clo1011042
                                %length997353
                                %foldl1997356)))
                          (let ((ae998665
                                 (make-closure
                                  clo1010816
                                  %foldr1997340
                                  %foldr997368
                                  %map1997382)))
                            (let ((args1010529$Ycmb997335$0 '()))
                              (let ((args1010529$Ycmb997335$1
                                     (prim
                                      cons
                                      ae998665
                                      args1010529$Ycmb997335$0)))
                                (let ((args1010529$Ycmb997335$2
                                       (prim
                                        cons
                                        ae998664
                                        args1010529$Ycmb997335$1)))
                                  (clo-app
                                   Ycmb997335
                                   args1010529$Ycmb997335$2))))))))))))))))))
 (proc
  (clo1010788 env1010789 arglist1010530)
  (let ((%foldr1997340 (env-ref env1010789 0)))
    (let ((%map1997345 (env-ref env1010789 1)))
      (let ((k997823 (prim car arglist1010530)))
        (let ((arglist1010531 (prim cdr arglist1010530)))
          (let ((%foldr997369 (prim car arglist1010531)))
            (let ((ae998318 (make-closure clo1010786)))
              (let ((ae998319
                     (make-closure
                      clo1010784
                      %foldr997369
                      %foldr1997340
                      %map1997345)))
                (let ((args1010584$k997823$0 '()))
                  (let ((args1010584$k997823$1
                         (prim cons ae998319 args1010584$k997823$0)))
                    (let ((args1010584$k997823$2
                           (prim cons ae998318 args1010584$k997823$1)))
                      (clo-app k997823 args1010584$k997823$2))))))))))))
 (proc
  (clo1010786 env1010787 arglist1010533)
  (let ((_un (prim car arglist1010533)))
    (let ((arglist1010534 (prim cdr arglist1010533)))
      (let ((_used (prim car arglist1010534)))
        (let ((args1010536$_un$0 '()))
          (let ((args1010536$_un$1 (prim cons _used args1010536$_un$0)))
            (let ((args1010536$_un$2 (prim cons _used args1010536$_un$1)))
              (clo-app _un args1010536$_un$2))))))))
 (proc
  (clo1010784 env1010785 k-and-args997825)
  (let ((%foldr997369 (env-ref env1010785 0)))
    (let ((%foldr1997340 (env-ref env1010785 1)))
      (let ((%map1997345 (env-ref env1010785 2)))
        (let ((k997824 (prim car k-and-args997825)))
          (let ((args997370 (prim cdr k-and-args997825)))
            (let ((f997371 (prim car args997370)))
              (let ((anf-bind997541 (prim cdr args997370)))
                (let ((prim-ret997844 (prim car anf-bind997541)))
                  (let ((ae998325
                         (make-closure
                          clo1010782
                          %foldr997369
                          %foldr1997340
                          f997371
                          k997824
                          args997370
                          %map1997345)))
                    (let ((args1010583$ae998325$0 '()))
                      (let ((args1010583$ae998325$1
                             (prim
                              cons
                              prim-ret997844
                              args1010583$ae998325$0)))
                        (let ((args1010583$ae998325$2
                               (prim
                                cons
                                prim-ret997844
                                args1010583$ae998325$1)))
                          (clo-app
                           ae998325
                           args1010583$ae998325$2))))))))))))))
 (proc
  (clo1010782 env1010783 arglist1010537)
  (let ((%foldr997369 (env-ref env1010783 0)))
    (let ((%foldr1997340 (env-ref env1010783 1)))
      (let ((f997371 (env-ref env1010783 2)))
        (let ((k997824 (env-ref env1010783 3)))
          (let ((args997370 (env-ref env1010783 4)))
            (let ((%map1997345 (env-ref env1010783 5)))
              (let ((unusedk997826 (prim car arglist1010537)))
                (let ((arglist1010538 (prim cdr arglist1010537)))
                  (let ((acc997372 (prim car arglist1010538)))
                    (let ((anf-bind997542 (prim cdr args997370)))
                      (let ((prim-ret997843 (prim cdr anf-bind997542)))
                        (let ((ae998330
                               (make-closure
                                clo1010780
                                %foldr997369
                                %foldr1997340
                                acc997372
                                f997371
                                k997824
                                %map1997345)))
                          (let ((args1010582$ae998330$0 '()))
                            (let ((args1010582$ae998330$1
                                   (prim
                                    cons
                                    prim-ret997843
                                    args1010582$ae998330$0)))
                              (let ((args1010582$ae998330$2
                                     (prim
                                      cons
                                      prim-ret997843
                                      args1010582$ae998330$1)))
                                (clo-app
                                 ae998330
                                 args1010582$ae998330$2)))))))))))))))))
 (proc
  (clo1010780 env1010781 arglist1010540)
  (let ((%foldr997369 (env-ref env1010781 0)))
    (let ((%foldr1997340 (env-ref env1010781 1)))
      (let ((acc997372 (env-ref env1010781 2)))
        (let ((f997371 (env-ref env1010781 3)))
          (let ((k997824 (env-ref env1010781 4)))
            (let ((%map1997345 (env-ref env1010781 5)))
              (let ((unusedk997827 (prim car arglist1010540)))
                (let ((arglist1010541 (prim cdr arglist1010540)))
                  (let ((lsts997373 (prim car arglist1010541)))
                    (let ((ae998334
                           (make-closure
                            clo1010778
                            %foldr997369
                            %foldr1997340
                            acc997372
                            f997371
                            k997824
                            lsts997373
                            %map1997345)))
                      (let ((ae998335 (make-closure clo1010762)))
                        (let ((ae998336 '#f))
                          (let ((args1010581$%foldr1997340$0 '()))
                            (let ((args1010581$%foldr1997340$1
                                   (prim
                                    cons
                                    lsts997373
                                    args1010581$%foldr1997340$0)))
                              (let ((args1010581$%foldr1997340$2
                                     (prim
                                      cons
                                      ae998336
                                      args1010581$%foldr1997340$1)))
                                (let ((args1010581$%foldr1997340$3
                                       (prim
                                        cons
                                        ae998335
                                        args1010581$%foldr1997340$2)))
                                  (let ((args1010581$%foldr1997340$4
                                         (prim
                                          cons
                                          ae998334
                                          args1010581$%foldr1997340$3)))
                                    (clo-app
                                     %foldr1997340
                                     args1010581$%foldr1997340$4)))))))))))))))))))
 (proc
  (clo1010778 env1010779 arglist1010543)
  (let ((%foldr997369 (env-ref env1010779 0)))
    (let ((%foldr1997340 (env-ref env1010779 1)))
      (let ((acc997372 (env-ref env1010779 2)))
        (let ((f997371 (env-ref env1010779 3)))
          (let ((k997824 (env-ref env1010779 4)))
            (let ((lsts997373 (env-ref env1010779 5)))
              (let ((%map1997345 (env-ref env1010779 6)))
                (let ((unusedk997828 (prim car arglist1010543)))
                  (let ((arglist1010544 (prim cdr arglist1010543)))
                    (let ((anf-bind997543 (prim car arglist1010544)))
                      (if anf-bind997543
                        (let ((args1010546$k997824$0 '()))
                          (let ((args1010546$k997824$1
                                 (prim cons acc997372 args1010546$k997824$0)))
                            (let ((args1010546$k997824$2
                                   (prim
                                    cons
                                    acc997372
                                    args1010546$k997824$1)))
                              (clo-app k997824 args1010546$k997824$2))))
                        (let ((ae998361
                               (make-closure
                                clo1010776
                                %foldr997369
                                %foldr1997340
                                acc997372
                                f997371
                                k997824
                                lsts997373
                                %map1997345)))
                          (let ((ae998362 (make-closure clo1010764)))
                            (let ((args1010574$%map1997345$0 '()))
                              (let ((args1010574$%map1997345$1
                                     (prim
                                      cons
                                      lsts997373
                                      args1010574$%map1997345$0)))
                                (let ((args1010574$%map1997345$2
                                       (prim
                                        cons
                                        ae998362
                                        args1010574$%map1997345$1)))
                                  (let ((args1010574$%map1997345$3
                                         (prim
                                          cons
                                          ae998361
                                          args1010574$%map1997345$2)))
                                    (clo-app
                                     %map1997345
                                     args1010574$%map1997345$3)))))))))))))))))))
 (proc
  (clo1010762 env1010763 arglist1010575)
  (let ((k997841 (prim car arglist1010575)))
    (let ((arglist1010576 (prim cdr arglist1010575)))
      (let ((lst997374 (prim car arglist1010576)))
        (let ((arglist1010577 (prim cdr arglist1010576)))
          (let ((b997375 (prim car arglist1010577)))
            (if b997375
              (let ((args1010579$k997841$0 '()))
                (let ((args1010579$k997841$1
                       (prim cons b997375 args1010579$k997841$0)))
                  (let ((args1010579$k997841$2
                         (prim cons b997375 args1010579$k997841$1)))
                    (clo-app k997841 args1010579$k997841$2))))
              (let ((prim-ret997842 (prim null? lst997374)))
                (let ((args1010580$k997841$0 '()))
                  (let ((args1010580$k997841$1
                         (prim cons prim-ret997842 args1010580$k997841$0)))
                    (let ((args1010580$k997841$2
                           (prim cons prim-ret997842 args1010580$k997841$1)))
                      (clo-app k997841 args1010580$k997841$2))))))))))))
 (proc
  (clo1010776 env1010777 arglist1010547)
  (let ((%foldr997369 (env-ref env1010777 0)))
    (let ((%foldr1997340 (env-ref env1010777 1)))
      (let ((acc997372 (env-ref env1010777 2)))
        (let ((f997371 (env-ref env1010777 3)))
          (let ((k997824 (env-ref env1010777 4)))
            (let ((lsts997373 (env-ref env1010777 5)))
              (let ((%map1997345 (env-ref env1010777 6)))
                (let ((unusedk997829 (prim car arglist1010547)))
                  (let ((arglist1010548 (prim cdr arglist1010547)))
                    (let ((lsts+997376 (prim car arglist1010548)))
                      (let ((ae998373
                             (make-closure
                              clo1010774
                              %foldr997369
                              %foldr1997340
                              lsts+997376
                              acc997372
                              f997371
                              k997824)))
                        (let ((ae998374 (make-closure clo1010766)))
                          (let ((args1010569$%map1997345$0 '()))
                            (let ((args1010569$%map1997345$1
                                   (prim
                                    cons
                                    lsts997373
                                    args1010569$%map1997345$0)))
                              (let ((args1010569$%map1997345$2
                                     (prim
                                      cons
                                      ae998374
                                      args1010569$%map1997345$1)))
                                (let ((args1010569$%map1997345$3
                                       (prim
                                        cons
                                        ae998373
                                        args1010569$%map1997345$2)))
                                  (clo-app
                                   %map1997345
                                   args1010569$%map1997345$3))))))))))))))))))
 (proc
  (clo1010764 env1010765 arglist1010570)
  (let ((k997839 (prim car arglist1010570)))
    (let ((arglist1010571 (prim cdr arglist1010570)))
      (let ((x997377 (prim car arglist1010571)))
        (let ((prim-ret997840 (prim cdr x997377)))
          (let ((args1010573$k997839$0 '()))
            (let ((args1010573$k997839$1
                   (prim cons prim-ret997840 args1010573$k997839$0)))
              (let ((args1010573$k997839$2
                     (prim cons prim-ret997840 args1010573$k997839$1)))
                (clo-app k997839 args1010573$k997839$2)))))))))
 (proc
  (clo1010774 env1010775 arglist1010550)
  (let ((%foldr997369 (env-ref env1010775 0)))
    (let ((%foldr1997340 (env-ref env1010775 1)))
      (let ((lsts+997376 (env-ref env1010775 2)))
        (let ((acc997372 (env-ref env1010775 3)))
          (let ((f997371 (env-ref env1010775 4)))
            (let ((k997824 (env-ref env1010775 5)))
              (let ((unusedk997830 (prim car arglist1010550)))
                (let ((arglist1010551 (prim cdr arglist1010550)))
                  (let ((vs997378 (prim car arglist1010551)))
                    (let ((anf-bind997544 (prim cons acc997372 lsts+997376)))
                      (let ((anf-bind997545
                             (prim cons f997371 anf-bind997544)))
                        (let ((ae998388
                               (make-closure
                                clo1010772
                                %foldr1997340
                                f997371
                                vs997378
                                k997824)))
                          (let ((applyarg997836
                                 (prim cons ae998388 anf-bind997545)))
                            (clo-app %foldr997369 applyarg997836)))))))))))))))
 (proc
  (clo1010766 env1010767 arglist1010565)
  (let ((k997837 (prim car arglist1010565)))
    (let ((arglist1010566 (prim cdr arglist1010565)))
      (let ((x997379 (prim car arglist1010566)))
        (let ((prim-ret997838 (prim car x997379)))
          (let ((args1010568$k997837$0 '()))
            (let ((args1010568$k997837$1
                   (prim cons prim-ret997838 args1010568$k997837$0)))
              (let ((args1010568$k997837$2
                     (prim cons prim-ret997838 args1010568$k997837$1)))
                (clo-app k997837 args1010568$k997837$2)))))))))
 (proc
  (clo1010772 env1010773 arglist1010553)
  (let ((%foldr1997340 (env-ref env1010773 0)))
    (let ((f997371 (env-ref env1010773 1)))
      (let ((vs997378 (env-ref env1010773 2)))
        (let ((k997824 (env-ref env1010773 3)))
          (let ((unusedk997831 (prim car arglist1010553)))
            (let ((arglist1010554 (prim cdr arglist1010553)))
              (let ((anf-bind997546 (prim car arglist1010554)))
                (let ((ae998393 '()))
                  (let ((anf-bind997547 (prim cons anf-bind997546 ae998393)))
                    (let ((ae998395 (make-closure clo1010770 f997371 k997824)))
                      (let ((ae998396 (make-closure clo1010768)))
                        (let ((args1010564$%foldr1997340$0 '()))
                          (let ((args1010564$%foldr1997340$1
                                 (prim
                                  cons
                                  vs997378
                                  args1010564$%foldr1997340$0)))
                            (let ((args1010564$%foldr1997340$2
                                   (prim
                                    cons
                                    anf-bind997547
                                    args1010564$%foldr1997340$1)))
                              (let ((args1010564$%foldr1997340$3
                                     (prim
                                      cons
                                      ae998396
                                      args1010564$%foldr1997340$2)))
                                (let ((args1010564$%foldr1997340$4
                                       (prim
                                        cons
                                        ae998395
                                        args1010564$%foldr1997340$3)))
                                  (clo-app
                                   %foldr1997340
                                   args1010564$%foldr1997340$4))))))))))))))))))
 (proc
  (clo1010770 env1010771 arglist1010556)
  (let ((f997371 (env-ref env1010771 0)))
    (let ((k997824 (env-ref env1010771 1)))
      (let ((unusedk997832 (prim car arglist1010556)))
        (let ((arglist1010557 (prim cdr arglist1010556)))
          (let ((anf-bind997548 (prim car arglist1010557)))
            (let ((applyarg997833 (prim cons k997824 anf-bind997548)))
              (clo-app f997371 applyarg997833))))))))
 (proc
  (clo1010768 env1010769 arglist1010559)
  (let ((k997834 (prim car arglist1010559)))
    (let ((arglist1010560 (prim cdr arglist1010559)))
      (let ((a997380 (prim car arglist1010560)))
        (let ((arglist1010561 (prim cdr arglist1010560)))
          (let ((b997381 (prim car arglist1010561)))
            (let ((prim-ret997835 (prim cons a997380 b997381)))
              (let ((args1010563$k997834$0 '()))
                (let ((args1010563$k997834$1
                       (prim cons prim-ret997835 args1010563$k997834$0)))
                  (let ((args1010563$k997834$2
                         (prim cons prim-ret997835 args1010563$k997834$1)))
                    (clo-app k997834 args1010563$k997834$2)))))))))))
 (proc
  (clo1011058 env1011059 arglist1009986)
  (let ((%foldr1997340 (env-ref env1011059 0)))
    (let ((k997665 (prim car arglist1009986)))
      (let ((arglist1009987 (prim cdr arglist1009986)))
        (let ((f997383 (prim car arglist1009987)))
          (let ((arglist1009988 (prim cdr arglist1009987)))
            (let ((lst997384 (prim car arglist1009988)))
              (let ((ae998562 (make-closure clo1011056 f997383)))
                (let ((ae998563 '()))
                  (let ((args1009999$%foldr1997340$0 '()))
                    (let ((args1009999$%foldr1997340$1
                           (prim cons lst997384 args1009999$%foldr1997340$0)))
                      (let ((args1009999$%foldr1997340$2
                             (prim cons ae998563 args1009999$%foldr1997340$1)))
                        (let ((args1009999$%foldr1997340$3
                               (prim
                                cons
                                ae998562
                                args1009999$%foldr1997340$2)))
                          (let ((args1009999$%foldr1997340$4
                                 (prim
                                  cons
                                  k997665
                                  args1009999$%foldr1997340$3)))
                            (clo-app
                             %foldr1997340
                             args1009999$%foldr1997340$4)))))))))))))))
 (proc
  (clo1011052 env1011053 k-and-args997670)
  (let ((%drop-right997365 (env-ref env1011053 0)))
    (let ((%foldr997368 (env-ref env1011053 1)))
      (let ((%last997361 (env-ref env1011053 2)))
        (let ((k997669 (prim car k-and-args997670)))
          (let ((args997388 (prim cdr k-and-args997670)))
            (let ((f997389 (prim car args997388)))
              (let ((lsts997390 (prim cdr args997388)))
                (let ((ae998590 '()))
                  (let ((anf-bind997553 (prim cons ae998590 lsts997390)))
                    (let ((ae998592
                           (make-closure
                            clo1011050
                            %drop-right997365
                            %last997361
                            f997389)))
                      (let ((anf-bind997554
                             (prim cons ae998592 anf-bind997553)))
                        (let ((applyarg997678
                               (prim cons k997669 anf-bind997554)))
                          (clo-app %foldr997368 applyarg997678))))))))))))))
 (proc
  (clo1011042 env1011043 arglist1010012)
  (let ((%length997353 (env-ref env1011043 0)))
    (let ((%foldl1997356 (env-ref env1011043 1)))
      (let ((unusedk997679 (prim car arglist1010012)))
        (let ((arglist1010013 (prim cdr arglist1010012)))
          (let ((%foldl997392 (prim car arglist1010013)))
            (let ((%>997407 (make-closure clo1011040)))
              (let ((%>=997410 (make-closure clo1011038)))
                (let ((ae998929 '1))
                  (let ((ae998930 '()))
                    (let ((%append997414 (prim make-vector ae998929 ae998930)))
                      (let ((ae998932 '0))
                        (let ((ae998933
                               (make-closure clo1011036 %append997414)))
                          (let ((_0997415
                                 (prim
                                  vector-set!
                                  %append997414
                                  ae998932
                                  ae998933)))
                            (let ((ae998935 '0))
                              (let ((prim-ret997800
                                     (prim vector-ref %append997414 ae998935)))
                                (let ((ae998936
                                       (make-closure
                                        clo1011032
                                        %>997407
                                        %length997353
                                        %foldl1997356)))
                                  (let ((args1010473$ae998936$0 '()))
                                    (let ((args1010473$ae998936$1
                                           (prim
                                            cons
                                            prim-ret997800
                                            args1010473$ae998936$0)))
                                      (let ((args1010473$ae998936$2
                                             (prim
                                              cons
                                              prim-ret997800
                                              args1010473$ae998936$1)))
                                        (clo-app
                                         ae998936
                                         args1010473$ae998936$2)))))))))))))))))))))
 (proc
  (clo1010816 env1010817 arglist1010474)
  (let ((%foldr1997340 (env-ref env1010817 0)))
    (let ((%foldr997368 (env-ref env1010817 1)))
      (let ((%map1997382 (env-ref env1010817 2)))
        (let ((k997801 (prim car arglist1010474)))
          (let ((arglist1010475 (prim cdr arglist1010474)))
            (let ((%foldl997393 (prim car arglist1010475)))
              (let ((ae998667 (make-closure clo1010814)))
                (let ((ae998668
                       (make-closure
                        clo1010812
                        %foldr1997340
                        %foldr997368
                        %map1997382
                        %foldl997393)))
                  (let ((args1010528$k997801$0 '()))
                    (let ((args1010528$k997801$1
                           (prim cons ae998668 args1010528$k997801$0)))
                      (let ((args1010528$k997801$2
                             (prim cons ae998667 args1010528$k997801$1)))
                        (clo-app k997801 args1010528$k997801$2)))))))))))))
 (proc
  (clo1010814 env1010815 arglist1010477)
  (let ((_un (prim car arglist1010477)))
    (let ((arglist1010478 (prim cdr arglist1010477)))
      (let ((_used (prim car arglist1010478)))
        (let ((args1010480$_un$0 '()))
          (let ((args1010480$_un$1 (prim cons _used args1010480$_un$0)))
            (let ((args1010480$_un$2 (prim cons _used args1010480$_un$1)))
              (clo-app _un args1010480$_un$2))))))))
 (proc
  (clo1010812 env1010813 k-and-args997803)
  (let ((%foldr1997340 (env-ref env1010813 0)))
    (let ((%foldr997368 (env-ref env1010813 1)))
      (let ((%map1997382 (env-ref env1010813 2)))
        (let ((%foldl997393 (env-ref env1010813 3)))
          (let ((k997802 (prim car k-and-args997803)))
            (let ((args997394 (prim cdr k-and-args997803)))
              (let ((f997395 (prim car args997394)))
                (let ((anf-bind997555 (prim cdr args997394)))
                  (let ((prim-ret997822 (prim car anf-bind997555)))
                    (let ((ae998674
                           (make-closure
                            clo1010810
                            args997394
                            %foldr1997340
                            %foldr997368
                            k997802
                            %map1997382
                            %foldl997393
                            f997395)))
                      (let ((args1010527$ae998674$0 '()))
                        (let ((args1010527$ae998674$1
                               (prim
                                cons
                                prim-ret997822
                                args1010527$ae998674$0)))
                          (let ((args1010527$ae998674$2
                                 (prim
                                  cons
                                  prim-ret997822
                                  args1010527$ae998674$1)))
                            (clo-app
                             ae998674
                             args1010527$ae998674$2)))))))))))))))
 (proc
  (clo1010810 env1010811 arglist1010481)
  (let ((args997394 (env-ref env1010811 0)))
    (let ((%foldr1997340 (env-ref env1010811 1)))
      (let ((%foldr997368 (env-ref env1010811 2)))
        (let ((k997802 (env-ref env1010811 3)))
          (let ((%map1997382 (env-ref env1010811 4)))
            (let ((%foldl997393 (env-ref env1010811 5)))
              (let ((f997395 (env-ref env1010811 6)))
                (let ((unusedk997804 (prim car arglist1010481)))
                  (let ((arglist1010482 (prim cdr arglist1010481)))
                    (let ((acc997396 (prim car arglist1010482)))
                      (let ((anf-bind997556 (prim cdr args997394)))
                        (let ((prim-ret997821 (prim cdr anf-bind997556)))
                          (let ((ae998679
                                 (make-closure
                                  clo1010808
                                  %foldr1997340
                                  %foldr997368
                                  k997802
                                  %map1997382
                                  acc997396
                                  %foldl997393
                                  f997395)))
                            (let ((args1010526$ae998679$0 '()))
                              (let ((args1010526$ae998679$1
                                     (prim
                                      cons
                                      prim-ret997821
                                      args1010526$ae998679$0)))
                                (let ((args1010526$ae998679$2
                                       (prim
                                        cons
                                        prim-ret997821
                                        args1010526$ae998679$1)))
                                  (clo-app
                                   ae998679
                                   args1010526$ae998679$2))))))))))))))))))
 (proc
  (clo1010808 env1010809 arglist1010484)
  (let ((%foldr1997340 (env-ref env1010809 0)))
    (let ((%foldr997368 (env-ref env1010809 1)))
      (let ((k997802 (env-ref env1010809 2)))
        (let ((%map1997382 (env-ref env1010809 3)))
          (let ((acc997396 (env-ref env1010809 4)))
            (let ((%foldl997393 (env-ref env1010809 5)))
              (let ((f997395 (env-ref env1010809 6)))
                (let ((unusedk997805 (prim car arglist1010484)))
                  (let ((arglist1010485 (prim cdr arglist1010484)))
                    (let ((lsts997397 (prim car arglist1010485)))
                      (let ((ae998683
                             (make-closure
                              clo1010806
                              lsts997397
                              %foldr997368
                              k997802
                              %map1997382
                              acc997396
                              %foldl997393
                              f997395)))
                        (let ((ae998684 (make-closure clo1010790)))
                          (let ((ae998685 '#f))
                            (let ((args1010525$%foldr1997340$0 '()))
                              (let ((args1010525$%foldr1997340$1
                                     (prim
                                      cons
                                      lsts997397
                                      args1010525$%foldr1997340$0)))
                                (let ((args1010525$%foldr1997340$2
                                       (prim
                                        cons
                                        ae998685
                                        args1010525$%foldr1997340$1)))
                                  (let ((args1010525$%foldr1997340$3
                                         (prim
                                          cons
                                          ae998684
                                          args1010525$%foldr1997340$2)))
                                    (let ((args1010525$%foldr1997340$4
                                           (prim
                                            cons
                                            ae998683
                                            args1010525$%foldr1997340$3)))
                                      (clo-app
                                       %foldr1997340
                                       args1010525$%foldr1997340$4))))))))))))))))))))
 (proc
  (clo1010806 env1010807 arglist1010487)
  (let ((lsts997397 (env-ref env1010807 0)))
    (let ((%foldr997368 (env-ref env1010807 1)))
      (let ((k997802 (env-ref env1010807 2)))
        (let ((%map1997382 (env-ref env1010807 3)))
          (let ((acc997396 (env-ref env1010807 4)))
            (let ((%foldl997393 (env-ref env1010807 5)))
              (let ((f997395 (env-ref env1010807 6)))
                (let ((unusedk997806 (prim car arglist1010487)))
                  (let ((arglist1010488 (prim cdr arglist1010487)))
                    (let ((anf-bind997557 (prim car arglist1010488)))
                      (if anf-bind997557
                        (let ((args1010490$k997802$0 '()))
                          (let ((args1010490$k997802$1
                                 (prim cons acc997396 args1010490$k997802$0)))
                            (let ((args1010490$k997802$2
                                   (prim
                                    cons
                                    acc997396
                                    args1010490$k997802$1)))
                              (clo-app k997802 args1010490$k997802$2))))
                        (let ((ae998710
                               (make-closure
                                clo1010804
                                lsts997397
                                %foldr997368
                                k997802
                                %map1997382
                                acc997396
                                %foldl997393
                                f997395)))
                          (let ((ae998711 (make-closure clo1010792)))
                            (let ((args1010518$%map1997382$0 '()))
                              (let ((args1010518$%map1997382$1
                                     (prim
                                      cons
                                      lsts997397
                                      args1010518$%map1997382$0)))
                                (let ((args1010518$%map1997382$2
                                       (prim
                                        cons
                                        ae998711
                                        args1010518$%map1997382$1)))
                                  (let ((args1010518$%map1997382$3
                                         (prim
                                          cons
                                          ae998710
                                          args1010518$%map1997382$2)))
                                    (clo-app
                                     %map1997382
                                     args1010518$%map1997382$3)))))))))))))))))))
 (proc
  (clo1010790 env1010791 arglist1010519)
  (let ((k997819 (prim car arglist1010519)))
    (let ((arglist1010520 (prim cdr arglist1010519)))
      (let ((lst997398 (prim car arglist1010520)))
        (let ((arglist1010521 (prim cdr arglist1010520)))
          (let ((b997399 (prim car arglist1010521)))
            (if b997399
              (let ((args1010523$k997819$0 '()))
                (let ((args1010523$k997819$1
                       (prim cons b997399 args1010523$k997819$0)))
                  (let ((args1010523$k997819$2
                         (prim cons b997399 args1010523$k997819$1)))
                    (clo-app k997819 args1010523$k997819$2))))
              (let ((prim-ret997820 (prim null? lst997398)))
                (let ((args1010524$k997819$0 '()))
                  (let ((args1010524$k997819$1
                         (prim cons prim-ret997820 args1010524$k997819$0)))
                    (let ((args1010524$k997819$2
                           (prim cons prim-ret997820 args1010524$k997819$1)))
                      (clo-app k997819 args1010524$k997819$2))))))))))))
 (proc
  (clo1010804 env1010805 arglist1010491)
  (let ((lsts997397 (env-ref env1010805 0)))
    (let ((%foldr997368 (env-ref env1010805 1)))
      (let ((k997802 (env-ref env1010805 2)))
        (let ((%map1997382 (env-ref env1010805 3)))
          (let ((acc997396 (env-ref env1010805 4)))
            (let ((%foldl997393 (env-ref env1010805 5)))
              (let ((f997395 (env-ref env1010805 6)))
                (let ((unusedk997807 (prim car arglist1010491)))
                  (let ((arglist1010492 (prim cdr arglist1010491)))
                    (let ((lsts+997400 (prim car arglist1010492)))
                      (let ((ae998722
                             (make-closure
                              clo1010802
                              %foldr997368
                              k997802
                              lsts+997400
                              acc997396
                              %foldl997393
                              f997395)))
                        (let ((ae998723 (make-closure clo1010794)))
                          (let ((args1010513$%map1997382$0 '()))
                            (let ((args1010513$%map1997382$1
                                   (prim
                                    cons
                                    lsts997397
                                    args1010513$%map1997382$0)))
                              (let ((args1010513$%map1997382$2
                                     (prim
                                      cons
                                      ae998723
                                      args1010513$%map1997382$1)))
                                (let ((args1010513$%map1997382$3
                                       (prim
                                        cons
                                        ae998722
                                        args1010513$%map1997382$2)))
                                  (clo-app
                                   %map1997382
                                   args1010513$%map1997382$3))))))))))))))))))
 (proc
  (clo1010792 env1010793 arglist1010514)
  (let ((k997817 (prim car arglist1010514)))
    (let ((arglist1010515 (prim cdr arglist1010514)))
      (let ((x997401 (prim car arglist1010515)))
        (let ((prim-ret997818 (prim cdr x997401)))
          (let ((args1010517$k997817$0 '()))
            (let ((args1010517$k997817$1
                   (prim cons prim-ret997818 args1010517$k997817$0)))
              (let ((args1010517$k997817$2
                     (prim cons prim-ret997818 args1010517$k997817$1)))
                (clo-app k997817 args1010517$k997817$2)))))))))
 (proc
  (clo1010802 env1010803 arglist1010494)
  (let ((%foldr997368 (env-ref env1010803 0)))
    (let ((k997802 (env-ref env1010803 1)))
      (let ((lsts+997400 (env-ref env1010803 2)))
        (let ((acc997396 (env-ref env1010803 3)))
          (let ((%foldl997393 (env-ref env1010803 4)))
            (let ((f997395 (env-ref env1010803 5)))
              (let ((unusedk997808 (prim car arglist1010494)))
                (let ((arglist1010495 (prim cdr arglist1010494)))
                  (let ((vs997402 (prim car arglist1010495)))
                    (let ((ae998734 '()))
                      (let ((anf-bind997558 (prim cons acc997396 ae998734)))
                        (let ((ae998736
                               (make-closure
                                clo1010800
                                k997802
                                lsts+997400
                                %foldl997393
                                f997395)))
                          (let ((ae998737 (make-closure clo1010796)))
                            (let ((args1010508$%foldr997368$0 '()))
                              (let ((args1010508$%foldr997368$1
                                     (prim
                                      cons
                                      vs997402
                                      args1010508$%foldr997368$0)))
                                (let ((args1010508$%foldr997368$2
                                       (prim
                                        cons
                                        anf-bind997558
                                        args1010508$%foldr997368$1)))
                                  (let ((args1010508$%foldr997368$3
                                         (prim
                                          cons
                                          ae998737
                                          args1010508$%foldr997368$2)))
                                    (let ((args1010508$%foldr997368$4
                                           (prim
                                            cons
                                            ae998736
                                            args1010508$%foldr997368$3)))
                                      (clo-app
                                       %foldr997368
                                       args1010508$%foldr997368$4))))))))))))))))))))
 (proc
  (clo1010794 env1010795 arglist1010509)
  (let ((k997815 (prim car arglist1010509)))
    (let ((arglist1010510 (prim cdr arglist1010509)))
      (let ((x997403 (prim car arglist1010510)))
        (let ((prim-ret997816 (prim car x997403)))
          (let ((args1010512$k997815$0 '()))
            (let ((args1010512$k997815$1
                   (prim cons prim-ret997816 args1010512$k997815$0)))
              (let ((args1010512$k997815$2
                     (prim cons prim-ret997816 args1010512$k997815$1)))
                (clo-app k997815 args1010512$k997815$2)))))))))
 (proc
  (clo1010800 env1010801 arglist1010497)
  (let ((k997802 (env-ref env1010801 0)))
    (let ((lsts+997400 (env-ref env1010801 1)))
      (let ((%foldl997393 (env-ref env1010801 2)))
        (let ((f997395 (env-ref env1010801 3)))
          (let ((unusedk997811 (prim car arglist1010497)))
            (let ((arglist1010498 (prim cdr arglist1010497)))
              (let ((anf-bind997559 (prim car arglist1010498)))
                (let ((ae998750
                       (make-closure
                        clo1010798
                        k997802
                        lsts+997400
                        %foldl997393
                        f997395)))
                  (let ((applyarg997812 (prim cons ae998750 anf-bind997559)))
                    (clo-app f997395 applyarg997812)))))))))))
 (proc
  (clo1010796 env1010797 arglist1010503)
  (let ((k997813 (prim car arglist1010503)))
    (let ((arglist1010504 (prim cdr arglist1010503)))
      (let ((a997405 (prim car arglist1010504)))
        (let ((arglist1010505 (prim cdr arglist1010504)))
          (let ((b997406 (prim car arglist1010505)))
            (let ((prim-ret997814 (prim cons a997405 b997406)))
              (let ((args1010507$k997813$0 '()))
                (let ((args1010507$k997813$1
                       (prim cons prim-ret997814 args1010507$k997813$0)))
                  (let ((args1010507$k997813$2
                         (prim cons prim-ret997814 args1010507$k997813$1)))
                    (clo-app k997813 args1010507$k997813$2)))))))))))
 (proc
  (clo1010798 env1010799 arglist1010500)
  (let ((k997802 (env-ref env1010799 0)))
    (let ((lsts+997400 (env-ref env1010799 1)))
      (let ((%foldl997393 (env-ref env1010799 2)))
        (let ((f997395 (env-ref env1010799 3)))
          (let ((unusedk997809 (prim car arglist1010500)))
            (let ((arglist1010501 (prim cdr arglist1010500)))
              (let ((acc+997404 (prim car arglist1010501)))
                (let ((anf-bind997560 (prim cons acc+997404 lsts+997400)))
                  (let ((anf-bind997561 (prim cons f997395 anf-bind997560)))
                    (let ((applyarg997810 (prim cons k997802 anf-bind997561)))
                      (clo-app %foldl997393 applyarg997810))))))))))))
 (proc
  (clo1011040 env1011041 arglist1010015)
  (let ((k997680 (prim car arglist1010015)))
    (let ((arglist1010016 (prim cdr arglist1010015)))
      (let ((a997408 (prim car arglist1010016)))
        (let ((arglist1010017 (prim cdr arglist1010016)))
          (let ((b997409 (prim car arglist1010017)))
            (let ((anf-bind997562 (prim <= a997408 b997409)))
              (let ((prim-ret997681 (prim not anf-bind997562)))
                (let ((args1010019$k997680$0 '()))
                  (let ((args1010019$k997680$1
                         (prim cons prim-ret997681 args1010019$k997680$0)))
                    (let ((args1010019$k997680$2
                           (prim cons prim-ret997681 args1010019$k997680$1)))
                      (clo-app k997680 args1010019$k997680$2))))))))))))
 (proc
  (clo1011038 env1011039 arglist1010020)
  (let ((k997682 (prim car arglist1010020)))
    (let ((arglist1010021 (prim cdr arglist1010020)))
      (let ((a997411 (prim car arglist1010021)))
        (let ((arglist1010022 (prim cdr arglist1010021)))
          (let ((b997412 (prim car arglist1010022)))
            (let ((anf-bind997563 (prim < a997411 b997412)))
              (let ((prim-ret997683 (prim not anf-bind997563)))
                (let ((args1010024$k997682$0 '()))
                  (let ((args1010024$k997682$1
                         (prim cons prim-ret997683 args1010024$k997682$0)))
                    (let ((args1010024$k997682$2
                           (prim cons prim-ret997683 args1010024$k997682$1)))
                      (clo-app k997682 args1010024$k997682$2))))))))))))
 (proc
  (clo1011036 env1011037 arglist1010025)
  (let ((%append997414 (env-ref env1011037 0)))
    (let ((k997797 (prim car arglist1010025)))
      (let ((arglist1010026 (prim cdr arglist1010025)))
        (let ((ls0997416 (prim car arglist1010026)))
          (let ((arglist1010027 (prim cdr arglist1010026)))
            (let ((ls1997417 (prim car arglist1010027)))
              (let ((anf-bind997564 (prim null? ls0997416)))
                (if anf-bind997564
                  (let ((args1010029$k997797$0 '()))
                    (let ((args1010029$k997797$1
                           (prim cons ls1997417 args1010029$k997797$0)))
                      (let ((args1010029$k997797$2
                             (prim cons ls1997417 args1010029$k997797$1)))
                        (clo-app k997797 args1010029$k997797$2))))
                  (let ((anf-bind997565 (prim car ls0997416)))
                    (let ((ae1005471 '0))
                      (let ((anf-bind997566
                             (prim vector-ref %append997414 ae1005471)))
                        (let ((anf-bind997567 (prim cdr ls0997416)))
                          (let ((ae1005474
                                 (make-closure
                                  clo1011034
                                  anf-bind997565
                                  k997797)))
                            (let ((args1010034$anf-bind997566$0 '()))
                              (let ((args1010034$anf-bind997566$1
                                     (prim
                                      cons
                                      ls1997417
                                      args1010034$anf-bind997566$0)))
                                (let ((args1010034$anf-bind997566$2
                                       (prim
                                        cons
                                        anf-bind997567
                                        args1010034$anf-bind997566$1)))
                                  (let ((args1010034$anf-bind997566$3
                                         (prim
                                          cons
                                          ae1005474
                                          args1010034$anf-bind997566$2)))
                                    (clo-app
                                     anf-bind997566
                                     args1010034$anf-bind997566$3)))))))))))))))))))
 (proc
  (clo1011032 env1011033 arglist1010035)
  (let ((%>997407 (env-ref env1011033 0)))
    (let ((%length997353 (env-ref env1011033 1)))
      (let ((%foldl1997356 (env-ref env1011033 2)))
        (let ((unusedk997684 (prim car arglist1010035)))
          (let ((arglist1010036 (prim cdr arglist1010035)))
            (let ((%append997413 (prim car arglist1010036)))
              (let ((%list?997418 (make-closure clo1011030)))
                (let ((%drop997425 (make-closure clo1011014)))
                  (let ((%memv997434 (make-closure clo1010998)))
                    (let ((%/997441 (make-closure clo1010986 %foldl1997356)))
                      (let ((%first997445 (make-closure clo1010982)))
                        (let ((%second997447 (make-closure clo1010980)))
                          (let ((%third997449 (make-closure clo1010978)))
                            (let ((%fourth997451 (make-closure clo1010976)))
                              (let (($promise?997453
                                     (make-closure clo1010974)))
                                (let ((ae1000561 '1))
                                  (let ((ae1000562 (make-closure clo1010972)))
                                    (let (($%raise-handler997455
                                           (prim
                                            make-vector
                                            ae1000561
                                            ae1000562)))
                                      (let (($%common-tail997460
                                             (make-closure
                                              clo1010970
                                              %drop997425
                                              %>997407
                                              %length997353)))
                                        (let ((ae1001076
                                               (make-closure clo1010938)))
                                          (let ((ae1001077
                                                 (make-closure
                                                  clo1010936
                                                  $%raise-handler997455
                                                  $%common-tail997460
                                                  %/997441)))
                                            (let ((args1010472$ae1001076$0
                                                   '()))
                                              (let ((args1010472$ae1001076$1
                                                     (prim
                                                      cons
                                                      ae1001077
                                                      args1010472$ae1001076$0)))
                                                (clo-app
                                                 ae1001076
                                                 args1010472$ae1001076$1)))))))))))))))))))))))))
 (proc
  (clo1011030 env1011031 arglist1010038)
  (let ((k997685 (prim car arglist1010038)))
    (let ((arglist1010039 (prim cdr arglist1010038)))
      (let ((a997419 (prim car arglist1010039)))
        (let ((ae998939 '1))
          (let ((a997420 (prim make-vector ae998939 a997419)))
            (let ((ae998941 (make-closure clo1011028)))
              (let ((ae998942 (make-closure clo1011026 a997420 k997685)))
                (let ((ae998943 (make-closure clo1011020 a997420 k997685)))
                  (let ((args1010073$ae998941$0 '()))
                    (let ((args1010073$ae998941$1
                           (prim cons ae998943 args1010073$ae998941$0)))
                      (let ((args1010073$ae998941$2
                             (prim cons ae998942 args1010073$ae998941$1)))
                        (clo-app ae998941 args1010073$ae998941$2)))))))))))))
 (proc
  (clo1011014 env1011015 arglist1010074)
  (let ((k997692 (prim car arglist1010074)))
    (let ((arglist1010075 (prim cdr arglist1010074)))
      (let ((lst997426 (prim car arglist1010075)))
        (let ((arglist1010076 (prim cdr arglist1010075)))
          (let ((n997427 (prim car arglist1010076)))
            (let ((ae999416 '1))
              (let ((lst997428 (prim make-vector ae999416 lst997426)))
                (let ((ae999418 '1))
                  (let ((n997429 (prim make-vector ae999418 n997427)))
                    (let ((ae999420 (make-closure clo1011012)))
                      (let ((ae999421
                             (make-closure
                              clo1011010
                              n997429
                              k997692
                              lst997428)))
                        (let ((ae999422
                               (make-closure
                                clo1011004
                                n997429
                                k997692
                                lst997428)))
                          (let ((args1010108$ae999420$0 '()))
                            (let ((args1010108$ae999420$1
                                   (prim
                                    cons
                                    ae999422
                                    args1010108$ae999420$0)))
                              (let ((args1010108$ae999420$2
                                     (prim
                                      cons
                                      ae999421
                                      args1010108$ae999420$1)))
                                (clo-app
                                 ae999420
                                 args1010108$ae999420$2)))))))))))))))))
 (proc
  (clo1010998 env1010999 arglist1010109)
  (let ((k997700 (prim car arglist1010109)))
    (let ((arglist1010110 (prim cdr arglist1010109)))
      (let ((v997435 (prim car arglist1010110)))
        (let ((arglist1010111 (prim cdr arglist1010110)))
          (let ((lst997436 (prim car arglist1010111)))
            (let ((ae1000035 '1))
              (let ((lst997437 (prim make-vector ae1000035 lst997436)))
                (let ((ae1000037 (make-closure clo1010996)))
                  (let ((ae1000038
                         (make-closure clo1010994 lst997437 k997700 v997435)))
                    (let ((ae1000039
                           (make-closure
                            clo1010990
                            lst997437
                            k997700
                            v997435)))
                      (let ((args1010137$ae1000037$0 '()))
                        (let ((args1010137$ae1000037$1
                               (prim cons ae1000039 args1010137$ae1000037$0)))
                          (let ((args1010137$ae1000037$2
                                 (prim
                                  cons
                                  ae1000038
                                  args1010137$ae1000037$1)))
                            (clo-app
                             ae1000037
                             args1010137$ae1000037$2)))))))))))))))
 (proc
  (clo1010986 env1010987 k-and-args997707)
  (let ((%foldl1997356 (env-ref env1010987 0)))
    (let ((k997706 (prim car k-and-args997707)))
      (let ((args997442 (prim cdr k-and-args997707)))
        (let ((anf-bind997589 (prim null? args997442)))
          (if anf-bind997589
            (let ((ae1000451 '1))
              (let ((ae1000452 '1))
                (let ((args1010138$k997706$0 '()))
                  (let ((args1010138$k997706$1
                         (prim cons ae1000452 args1010138$k997706$0)))
                    (let ((args1010138$k997706$2
                           (prim cons ae1000451 args1010138$k997706$1)))
                      (clo-app k997706 args1010138$k997706$2))))))
            (let ((anf-bind997590 (prim cdr args997442)))
              (let ((anf-bind997591 (prim null? anf-bind997590)))
                (if anf-bind997591
                  (let ((prim-ret997708 (prim car args997442)))
                    (let ((args1010139$k997706$0 '()))
                      (let ((args1010139$k997706$1
                             (prim cons prim-ret997708 args1010139$k997706$0)))
                        (let ((args1010139$k997706$2
                               (prim
                                cons
                                prim-ret997708
                                args1010139$k997706$1)))
                          (clo-app k997706 args1010139$k997706$2)))))
                  (let ((anf-bind997592 (prim car args997442)))
                    (let ((anf-bind997593 (prim cdr args997442)))
                      (let ((ae1000470 (make-closure clo1010984)))
                        (let ((args1010145$%foldl1997356$0 '()))
                          (let ((args1010145$%foldl1997356$1
                                 (prim
                                  cons
                                  anf-bind997593
                                  args1010145$%foldl1997356$0)))
                            (let ((args1010145$%foldl1997356$2
                                   (prim
                                    cons
                                    anf-bind997592
                                    args1010145$%foldl1997356$1)))
                              (let ((args1010145$%foldl1997356$3
                                     (prim
                                      cons
                                      ae1000470
                                      args1010145$%foldl1997356$2)))
                                (let ((args1010145$%foldl1997356$4
                                       (prim
                                        cons
                                        k997706
                                        args1010145$%foldl1997356$3)))
                                  (clo-app
                                   %foldl1997356
                                   args1010145$%foldl1997356$4))))))))))))))))))
 (proc
  (clo1010982 env1010983 arglist1010146)
  (let ((k997711 (prim car arglist1010146)))
    (let ((arglist1010147 (prim cdr arglist1010146)))
      (let ((x997446 (prim car arglist1010147)))
        (let ((prim-ret997712 (prim car x997446)))
          (let ((args1010149$k997711$0 '()))
            (let ((args1010149$k997711$1
                   (prim cons prim-ret997712 args1010149$k997711$0)))
              (let ((args1010149$k997711$2
                     (prim cons prim-ret997712 args1010149$k997711$1)))
                (clo-app k997711 args1010149$k997711$2)))))))))
 (proc
  (clo1010980 env1010981 arglist1010150)
  (let ((k997713 (prim car arglist1010150)))
    (let ((arglist1010151 (prim cdr arglist1010150)))
      (let ((x997448 (prim car arglist1010151)))
        (let ((anf-bind997594 (prim cdr x997448)))
          (let ((prim-ret997714 (prim car anf-bind997594)))
            (let ((args1010153$k997713$0 '()))
              (let ((args1010153$k997713$1
                     (prim cons prim-ret997714 args1010153$k997713$0)))
                (let ((args1010153$k997713$2
                       (prim cons prim-ret997714 args1010153$k997713$1)))
                  (clo-app k997713 args1010153$k997713$2))))))))))
 (proc
  (clo1010978 env1010979 arglist1010154)
  (let ((k997715 (prim car arglist1010154)))
    (let ((arglist1010155 (prim cdr arglist1010154)))
      (let ((x997450 (prim car arglist1010155)))
        (let ((anf-bind997595 (prim cdr x997450)))
          (let ((anf-bind997596 (prim cdr anf-bind997595)))
            (let ((prim-ret997716 (prim car anf-bind997596)))
              (let ((args1010157$k997715$0 '()))
                (let ((args1010157$k997715$1
                       (prim cons prim-ret997716 args1010157$k997715$0)))
                  (let ((args1010157$k997715$2
                         (prim cons prim-ret997716 args1010157$k997715$1)))
                    (clo-app k997715 args1010157$k997715$2)))))))))))
 (proc
  (clo1010976 env1010977 arglist1010158)
  (let ((k997717 (prim car arglist1010158)))
    (let ((arglist1010159 (prim cdr arglist1010158)))
      (let ((x997452 (prim car arglist1010159)))
        (let ((anf-bind997597 (prim cdr x997452)))
          (let ((anf-bind997598 (prim cdr anf-bind997597)))
            (let ((anf-bind997599 (prim cdr anf-bind997598)))
              (let ((prim-ret997718 (prim car anf-bind997599)))
                (let ((args1010161$k997717$0 '()))
                  (let ((args1010161$k997717$1
                         (prim cons prim-ret997718 args1010161$k997717$0)))
                    (let ((args1010161$k997717$2
                           (prim cons prim-ret997718 args1010161$k997717$1)))
                      (clo-app k997717 args1010161$k997717$2))))))))))))
 (proc
  (clo1010974 env1010975 arglist1010162)
  (let ((k997719 (prim car arglist1010162)))
    (let ((arglist1010163 (prim cdr arglist1010162)))
      (let (($p?997454 (prim car arglist1010163)))
        (let ((anf-bind997600 (prim vector? $p?997454)))
          (if anf-bind997600
            (let ((anf-bind997601 (prim vector-length $p?997454)))
              (let ((ae1000509 '3))
                (let ((anf-bind997602 (prim equal? anf-bind997601 ae1000509)))
                  (if anf-bind997602
                    (let ((ae1000512 '0))
                      (let ((anf-bind997603
                             (prim vector-ref $p?997454 ae1000512)))
                        (let ((ae1000514 '%%promise))
                          (let ((prim-ret997720
                                 (prim equal? anf-bind997603 ae1000514)))
                            (let ((args1010165$k997719$0 '()))
                              (let ((args1010165$k997719$1
                                     (prim
                                      cons
                                      prim-ret997720
                                      args1010165$k997719$0)))
                                (let ((args1010165$k997719$2
                                       (prim
                                        cons
                                        prim-ret997720
                                        args1010165$k997719$1)))
                                  (clo-app
                                   k997719
                                   args1010165$k997719$2))))))))
                    (let ((ae1000531 '#f))
                      (let ((ae1000532 '#f))
                        (let ((args1010166$k997719$0 '()))
                          (let ((args1010166$k997719$1
                                 (prim cons ae1000532 args1010166$k997719$0)))
                            (let ((args1010166$k997719$2
                                   (prim
                                    cons
                                    ae1000531
                                    args1010166$k997719$1)))
                              (clo-app k997719 args1010166$k997719$2))))))))))
            (let ((ae1000553 '#f))
              (let ((ae1000554 '#f))
                (let ((args1010167$k997719$0 '()))
                  (let ((args1010167$k997719$1
                         (prim cons ae1000554 args1010167$k997719$0)))
                    (let ((args1010167$k997719$2
                           (prim cons ae1000553 args1010167$k997719$1)))
                      (clo-app k997719 args1010167$k997719$2))))))))))))
 (proc
  (clo1010972 env1010973 arglist1010168)
  (let ((k997721 (prim car arglist1010168)))
    (let ((arglist1010169 (prim cdr arglist1010168)))
      (let (($%%uncaught-raise-arg997456 (prim car arglist1010169)))
        (let ((ae1003834 'Uncaught Exception: ))
          (let (($%%_997306997457 (prim print ae1003834)))
            (let (($%%_997307997458 (prim print $%%uncaught-raise-arg997456)))
              (let ((ae1003836 '
))              (let (($%%_997308997459 (prim print ae1003836)))
                  (let ((anf-bind997604 (prim void)))
                    (let ((prim-ret997722 (prim halt anf-bind997604)))
                      (let ((args1010171$k997721$0 '()))
                        (let ((args1010171$k997721$1
                               (prim
                                cons
                                prim-ret997722
                                args1010171$k997721$0)))
                          (let ((args1010171$k997721$2
                                 (prim
                                  cons
                                  prim-ret997722
                                  args1010171$k997721$1)))
                            (clo-app
                             k997721
                             args1010171$k997721$2)))))))))))))))
 (proc
  (clo1010970 env1010971 arglist1010172)
  (let ((%drop997425 (env-ref env1010971 0)))
    (let ((%>997407 (env-ref env1010971 1)))
      (let ((%length997353 (env-ref env1010971 2)))
        (let ((k997723 (prim car arglist1010172)))
          (let ((arglist1010173 (prim cdr arglist1010172)))
            (let (($xs997461 (prim car arglist1010173)))
              (let ((arglist1010174 (prim cdr arglist1010173)))
                (let (($ys997462 (prim car arglist1010174)))
                  (let ((ae1000564
                         (make-closure
                          clo1010968
                          k997723
                          %drop997425
                          %>997407
                          $ys997462
                          %length997353
                          $xs997461)))
                    (let ((args1010238$%length997353$0 '()))
                      (let ((args1010238$%length997353$1
                             (prim
                              cons
                              $xs997461
                              args1010238$%length997353$0)))
                        (let ((args1010238$%length997353$2
                               (prim
                                cons
                                ae1000564
                                args1010238$%length997353$1)))
                          (clo-app
                           %length997353
                           args1010238$%length997353$2))))))))))))))
 (proc
  (clo1010938 env1010939 k-and-args997796)
  (let ((k997795 (prim car k-and-args997796)))
    (let ((lst997471 (prim cdr k-and-args997796)))
      (let ((args1010239$k997795$0 '()))
        (let ((args1010239$k997795$1
               (prim cons lst997471 args1010239$k997795$0)))
          (let ((args1010239$k997795$2
                 (prim cons lst997471 args1010239$k997795$1)))
            (clo-app k997795 args1010239$k997795$2)))))))
 (proc
  (clo1010936 env1010937 arglist1010240)
  (let (($%raise-handler997455 (env-ref env1010937 0)))
    (let (($%common-tail997460 (env-ref env1010937 1)))
      (let ((%/997441 (env-ref env1010937 2)))
        (let ((unusedk997793 (prim car arglist1010240)))
          (let ((arglist1010241 (prim cdr arglist1010240)))
            (let ((anf-bind997617 (prim car arglist1010241)))
              (let ((ae1001078 '1))
                (let ((prim-ret997794
                       (prim make-vector ae1001078 anf-bind997617)))
                  (let ((ae1001080
                         (make-closure
                          clo1010934
                          $%raise-handler997455
                          $%common-tail997460
                          %/997441)))
                    (let ((args1010471$ae1001080$0 '()))
                      (let ((args1010471$ae1001080$1
                             (prim
                              cons
                              prim-ret997794
                              args1010471$ae1001080$0)))
                        (let ((args1010471$ae1001080$2
                               (prim
                                cons
                                prim-ret997794
                                args1010471$ae1001080$1)))
                          (clo-app
                           ae1001080
                           args1010471$ae1001080$2))))))))))))))
 (proc
  (clo1010934 env1010935 arglist1010243)
  (let (($%raise-handler997455 (env-ref env1010935 0)))
    (let (($%common-tail997460 (env-ref env1010935 1)))
      (let ((%/997441 (env-ref env1010935 2)))
        (let ((unusedk997736 (prim car arglist1010243)))
          (let ((arglist1010244 (prim cdr arglist1010243)))
            (let (($%wind-stack997470 (prim car arglist1010244)))
              (let (($%do-wind997472
                     (make-closure
                      clo1010932
                      $%common-tail997460
                      $%wind-stack997470)))
                (let (($dynamic-wind997488
                       (make-closure clo1010902 $%wind-stack997470)))
                  (let ((ae1002065 '0))
                    (let (($%%old-handler997321997497
                           (prim vector-ref $%raise-handler997455 ae1002065)))
                      (let ((ae1002066
                             (make-closure
                              clo1010890
                              $%do-wind997472
                              $%wind-stack997470)))
                        (let ((ae1002067
                               (make-closure
                                clo1010876
                                $%raise-handler997455
                                %/997441
                                $%%old-handler997321997497
                                $%wind-stack997470)))
                          (let ((ae1002068
                                 (make-closure
                                  clo1010846
                                  $%raise-handler997455
                                  %/997441
                                  $%%old-handler997321997497
                                  $%wind-stack997470)))
                            (let ((args1010470$ae1002066$0 '()))
                              (let ((args1010470$ae1002066$1
                                     (prim
                                      cons
                                      ae1002068
                                      args1010470$ae1002066$0)))
                                (let ((args1010470$ae1002066$2
                                       (prim
                                        cons
                                        ae1002067
                                        args1010470$ae1002066$1)))
                                  (clo-app
                                   ae1002066
                                   args1010470$ae1002066$2))))))))))))))))))
 (proc
  (clo1010932 env1010933 arglist1010246)
  (let (($%common-tail997460 (env-ref env1010933 0)))
    (let (($%wind-stack997470 (env-ref env1010933 1)))
      (let ((k997737 (prim car arglist1010246)))
        (let ((arglist1010247 (prim cdr arglist1010246)))
          (let (($new-stack997473 (prim car arglist1010247)))
            (let ((ae1001084 '0))
              (let ((anf-bind997618
                     (prim vector-ref $%wind-stack997470 ae1001084)))
                (let ((anf-bind997619
                       (prim eq? $new-stack997473 anf-bind997618)))
                  (if anf-bind997619
                    (let ((prim-ret997738 (prim void)))
                      (let ((args1010249$k997737$0 '()))
                        (let ((args1010249$k997737$1
                               (prim
                                cons
                                prim-ret997738
                                args1010249$k997737$0)))
                          (let ((args1010249$k997737$2
                                 (prim
                                  cons
                                  prim-ret997738
                                  args1010249$k997737$1)))
                            (clo-app k997737 args1010249$k997737$2)))))
                    (let ((ae1001092 '0))
                      (let ((anf-bind997620
                             (prim vector-ref $%wind-stack997470 ae1001092)))
                        (let ((ae1001094
                               (make-closure
                                clo1010930
                                $new-stack997473
                                k997737
                                $%wind-stack997470)))
                          (let ((args1010302$$%common-tail997460$0 '()))
                            (let ((args1010302$$%common-tail997460$1
                                   (prim
                                    cons
                                    anf-bind997620
                                    args1010302$$%common-tail997460$0)))
                              (let ((args1010302$$%common-tail997460$2
                                     (prim
                                      cons
                                      $new-stack997473
                                      args1010302$$%common-tail997460$1)))
                                (let ((args1010302$$%common-tail997460$3
                                       (prim
                                        cons
                                        ae1001094
                                        args1010302$$%common-tail997460$2)))
                                  (clo-app
                                   $%common-tail997460
                                   args1010302$$%common-tail997460$3))))))))))))))))))
 (proc
  (clo1010902 env1010903 arglist1010303)
  (let (($%wind-stack997470 (env-ref env1010903 0)))
    (let ((k997761 (prim car arglist1010303)))
      (let ((arglist1010304 (prim cdr arglist1010303)))
        (let (($pre997489 (prim car arglist1010304)))
          (let ((arglist1010305 (prim cdr arglist1010304)))
            (let (($body997490 (prim car arglist1010305)))
              (let ((arglist1010306 (prim cdr arglist1010305)))
                (let (($post997491 (prim car arglist1010306)))
                  (let ((ae1001950
                         (make-closure
                          clo1010900
                          $post997491
                          $body997490
                          $pre997489
                          k997761
                          $%wind-stack997470)))
                    (let ((args1010328$$pre997489$0 '()))
                      (let ((args1010328$$pre997489$1
                             (prim cons ae1001950 args1010328$$pre997489$0)))
                        (clo-app
                         $pre997489
                         args1010328$$pre997489$1)))))))))))))
 (proc
  (clo1010890 env1010891 arglist1010329)
  (let (($%do-wind997472 (env-ref env1010891 0)))
    (let (($%wind-stack997470 (env-ref env1010891 1)))
      (let ((k997787 (prim car arglist1010329)))
        (let ((arglist1010330 (prim cdr arglist1010329)))
          (let (($%%k997323997499 (prim car arglist1010330)))
            (let ((ae1002666 '0))
              (let (($%%oldstack997324997501
                     (prim vector-ref $%wind-stack997470 ae1002666)))
                (let ((ae1002667 (make-closure clo1010888 k997787)))
                  (let ((ae1002668 (make-closure clo1010884)))
                    (let ((ae1002669
                           (make-closure
                            clo1010882
                            $%%oldstack997324997501
                            $%%k997323997499
                            $%do-wind997472
                            $%wind-stack997470)))
                      (let ((args1010357$ae1002667$0 '()))
                        (let ((args1010357$ae1002667$1
                               (prim cons ae1002669 args1010357$ae1002667$0)))
                          (let ((args1010357$ae1002667$2
                                 (prim
                                  cons
                                  ae1002668
                                  args1010357$ae1002667$1)))
                            (clo-app
                             ae1002667
                             args1010357$ae1002667$2)))))))))))))))
 (proc
  (clo1010876 env1010877 arglist1010358)
  (let (($%raise-handler997455 (env-ref env1010877 0)))
    (let ((%/997441 (env-ref env1010877 1)))
      (let (($%%old-handler997321997497 (env-ref env1010877 2)))
        (let (($%wind-stack997470 (env-ref env1010877 3)))
          (let ((unusedk997769 (prim car arglist1010358)))
            (let ((arglist1010359 (prim cdr arglist1010358)))
              (let (($%%cc997322997498 (prim car arglist1010359)))
                (let ((anf-bind997645 (prim procedure? $%%cc997322997498)))
                  (if anf-bind997645
                    (let (($%%pre997327997504
                           (make-closure
                            clo1010870
                            $%raise-handler997455
                            $%%cc997322997498)))
                      (let (($%%body997328997507
                             (make-closure clo1010862 %/997441)))
                        (let (($%%post997329997508
                               (make-closure
                                clo1010860
                                $%raise-handler997455
                                $%%old-handler997321997497)))
                          (let ((ae1002423
                                 (make-closure
                                  clo1010858
                                  $%%post997329997508
                                  $%%body997328997507
                                  $%%pre997327997504
                                  $%wind-stack997470)))
                            (let ((args1010403$$%%pre997327997504$0 '()))
                              (let ((args1010403$$%%pre997327997504$1
                                     (prim
                                      cons
                                      ae1002423
                                      args1010403$$%%pre997327997504$0)))
                                (clo-app
                                 $%%pre997327997504
                                 args1010403$$%%pre997327997504$1)))))))
                    (let ((anf-bind997653 (prim cons? $%%cc997322997498)))
                      (if anf-bind997653
                        (let (($x997514 (prim car $%%cc997322997498)))
                          (let ((ae1002558 (make-closure clo1010872)))
                            (let ((ae1002559 'GOOD))
                              (let ((ae1002560 'GOOD))
                                (let ((args1010408$ae1002558$0 '()))
                                  (let ((args1010408$ae1002558$1
                                         (prim
                                          cons
                                          ae1002560
                                          args1010408$ae1002558$0)))
                                    (let ((args1010408$ae1002558$2
                                           (prim
                                            cons
                                            ae1002559
                                            args1010408$ae1002558$1)))
                                      (clo-app
                                       ae1002558
                                       args1010408$ae1002558$2))))))))
                        (let ((prim-ret997786 (prim void)))
                          (let ((ae1002573 (make-closure clo1010874)))
                            (let ((args1010413$ae1002573$0 '()))
                              (let ((args1010413$ae1002573$1
                                     (prim
                                      cons
                                      prim-ret997786
                                      args1010413$ae1002573$0)))
                                (let ((args1010413$ae1002573$2
                                       (prim
                                        cons
                                        prim-ret997786
                                        args1010413$ae1002573$1)))
                                  (clo-app
                                   ae1002573
                                   args1010413$ae1002573$2))))))))))))))))))
 (proc
  (clo1010846 env1010847 arglist1010414)
  (let (($%raise-handler997455 (env-ref env1010847 0)))
    (let ((%/997441 (env-ref env1010847 1)))
      (let (($%%old-handler997321997497 (env-ref env1010847 2)))
        (let (($%wind-stack997470 (env-ref env1010847 3)))
          (let ((unusedk997769 (prim car arglist1010414)))
            (let ((arglist1010415 (prim cdr arglist1010414)))
              (let (($%%cc997322997498 (prim car arglist1010415)))
                (let ((anf-bind997645 (prim procedure? $%%cc997322997498)))
                  (if anf-bind997645
                    (let (($%%pre997327997504
                           (make-closure
                            clo1010840
                            $%raise-handler997455
                            $%%cc997322997498)))
                      (let (($%%body997328997507
                             (make-closure clo1010832 %/997441)))
                        (let (($%%post997329997508
                               (make-closure
                                clo1010830
                                $%raise-handler997455
                                $%%old-handler997321997497)))
                          (let ((ae1002165
                                 (make-closure
                                  clo1010828
                                  $%%post997329997508
                                  $%%body997328997507
                                  $%%pre997327997504
                                  $%wind-stack997470)))
                            (let ((args1010459$$%%pre997327997504$0 '()))
                              (let ((args1010459$$%%pre997327997504$1
                                     (prim
                                      cons
                                      ae1002165
                                      args1010459$$%%pre997327997504$0)))
                                (clo-app
                                 $%%pre997327997504
                                 args1010459$$%%pre997327997504$1)))))))
                    (let ((anf-bind997653 (prim cons? $%%cc997322997498)))
                      (if anf-bind997653
                        (let (($x997514 (prim car $%%cc997322997498)))
                          (let ((ae1002300 (make-closure clo1010842)))
                            (let ((ae1002301 'GOOD))
                              (let ((ae1002302 'GOOD))
                                (let ((args1010464$ae1002300$0 '()))
                                  (let ((args1010464$ae1002300$1
                                         (prim
                                          cons
                                          ae1002302
                                          args1010464$ae1002300$0)))
                                    (let ((args1010464$ae1002300$2
                                           (prim
                                            cons
                                            ae1002301
                                            args1010464$ae1002300$1)))
                                      (clo-app
                                       ae1002300
                                       args1010464$ae1002300$2))))))))
                        (let ((prim-ret997786 (prim void)))
                          (let ((ae1002315 (make-closure clo1010844)))
                            (let ((args1010469$ae1002315$0 '()))
                              (let ((args1010469$ae1002315$1
                                     (prim
                                      cons
                                      prim-ret997786
                                      args1010469$ae1002315$0)))
                                (let ((args1010469$ae1002315$2
                                       (prim
                                        cons
                                        prim-ret997786
                                        args1010469$ae1002315$1)))
                                  (clo-app
                                   ae1002315
                                   args1010469$ae1002315$2))))))))))))))))))
 (proc
  (clo1010840 env1010841 arglist1010417)
  (let (($%raise-handler997455 (env-ref env1010841 0)))
    (let (($%%cc997322997498 (env-ref env1010841 1)))
      (let ((k997770 (prim car arglist1010417)))
        (let ((ae1002072 '0))
          (let ((ae1002073 (make-closure clo1010838 $%%cc997322997498)))
            (let ((prim-ret997771
                   (prim
                    vector-set!
                    $%raise-handler997455
                    ae1002072
                    ae1002073)))
              (let ((args1010428$k997770$0 '()))
                (let ((args1010428$k997770$1
                       (prim cons prim-ret997771 args1010428$k997770$0)))
                  (let ((args1010428$k997770$2
                         (prim cons prim-ret997771 args1010428$k997770$1)))
                    (clo-app k997770 args1010428$k997770$2)))))))))))
 (proc
  (clo1010832 env1010833 arglist1010429)
  (let ((%/997441 (env-ref env1010833 0)))
    (let ((k997776 (prim car arglist1010429)))
      (let ((ae1002124 '1))
        (let ((ae1002125 '2))
          (let ((ae1002126 '3))
            (let ((ae1002127 '0))
              (let ((args1010431$%/997441$0 '()))
                (let ((args1010431$%/997441$1
                       (prim cons ae1002127 args1010431$%/997441$0)))
                  (let ((args1010431$%/997441$2
                         (prim cons ae1002126 args1010431$%/997441$1)))
                    (let ((args1010431$%/997441$3
                           (prim cons ae1002125 args1010431$%/997441$2)))
                      (let ((args1010431$%/997441$4
                             (prim cons ae1002124 args1010431$%/997441$3)))
                        (let ((args1010431$%/997441$5
                               (prim cons k997776 args1010431$%/997441$4)))
                          (clo-app
                           %/997441
                           args1010431$%/997441$5))))))))))))))
 (proc
  (clo1010830 env1010831 arglist1010432)
  (let (($%raise-handler997455 (env-ref env1010831 0)))
    (let (($%%old-handler997321997497 (env-ref env1010831 1)))
      (let ((k997777 (prim car arglist1010432)))
        (let ((ae1002153 '0))
          (let ((prim-ret997778
                 (prim
                  vector-set!
                  $%raise-handler997455
                  ae1002153
                  $%%old-handler997321997497)))
            (let ((args1010434$k997777$0 '()))
              (let ((args1010434$k997777$1
                     (prim cons prim-ret997778 args1010434$k997777$0)))
                (let ((args1010434$k997777$2
                       (prim cons prim-ret997778 args1010434$k997777$1)))
                  (clo-app k997777 args1010434$k997777$2))))))))))
 (proc
  (clo1010828 env1010829 arglist1010435)
  (let (($%%post997329997508 (env-ref env1010829 0)))
    (let (($%%body997328997507 (env-ref env1010829 1)))
      (let (($%%pre997327997504 (env-ref env1010829 2)))
        (let (($%wind-stack997470 (env-ref env1010829 3)))
          (let ((unusedk997779 (prim car arglist1010435)))
            (let ((arglist1010436 (prim cdr arglist1010435)))
              (let (($%%_997331997509 (prim car arglist1010436)))
                (let ((anf-bind997648
                       (prim cons $%%pre997327997504 $%%post997329997508)))
                  (let ((ae1002169 '0))
                    (let ((anf-bind997649
                           (prim vector-ref $%wind-stack997470 ae1002169)))
                      (let ((anf-bind997650
                             (prim cons anf-bind997648 anf-bind997649)))
                        (let ((ae1002173 '0))
                          (let ((prim-ret997785
                                 (prim
                                  vector-set!
                                  $%wind-stack997470
                                  ae1002173
                                  anf-bind997650)))
                            (let ((ae1002175
                                   (make-closure
                                    clo1010826
                                    $%%post997329997508
                                    $%%body997328997507
                                    $%wind-stack997470)))
                              (let ((args1010458$ae1002175$0 '()))
                                (let ((args1010458$ae1002175$1
                                       (prim
                                        cons
                                        prim-ret997785
                                        args1010458$ae1002175$0)))
                                  (let ((args1010458$ae1002175$2
                                         (prim
                                          cons
                                          prim-ret997785
                                          args1010458$ae1002175$1)))
                                    (clo-app
                                     ae1002175
                                     args1010458$ae1002175$2)))))))))))))))))))
 (proc
  (clo1010826 env1010827 arglist1010438)
  (let (($%%post997329997508 (env-ref env1010827 0)))
    (let (($%%body997328997507 (env-ref env1010827 1)))
      (let (($%wind-stack997470 (env-ref env1010827 2)))
        (let ((unusedk997780 (prim car arglist1010438)))
          (let ((arglist1010439 (prim cdr arglist1010438)))
            (let (($%%_997332997510 (prim car arglist1010439)))
              (let ((ae1002179
                     (make-closure
                      clo1010824
                      $%%post997329997508
                      $%wind-stack997470)))
                (let ((args1010457$$%%body997328997507$0 '()))
                  (let ((args1010457$$%%body997328997507$1
                         (prim
                          cons
                          ae1002179
                          args1010457$$%%body997328997507$0)))
                    (clo-app
                     $%%body997328997507
                     args1010457$$%%body997328997507$1)))))))))))
 (proc
  (clo1010824 env1010825 arglist1010441)
  (let (($%%post997329997508 (env-ref env1010825 0)))
    (let (($%wind-stack997470 (env-ref env1010825 1)))
      (let ((unusedk997781 (prim car arglist1010441)))
        (let ((arglist1010442 (prim cdr arglist1010441)))
          (let (($%%val997330997511 (prim car arglist1010442)))
            (let ((ae1002181 '0))
              (let ((anf-bind997651
                     (prim vector-ref $%wind-stack997470 ae1002181)))
                (let ((anf-bind997652 (prim cdr anf-bind997651)))
                  (let ((ae1002184 '0))
                    (let ((prim-ret997784
                           (prim
                            vector-set!
                            $%wind-stack997470
                            ae1002184
                            anf-bind997652)))
                      (let ((ae1002186
                             (make-closure
                              clo1010822
                              $%%post997329997508
                              $%%val997330997511)))
                        (let ((args1010456$ae1002186$0 '()))
                          (let ((args1010456$ae1002186$1
                                 (prim
                                  cons
                                  prim-ret997784
                                  args1010456$ae1002186$0)))
                            (let ((args1010456$ae1002186$2
                                   (prim
                                    cons
                                    prim-ret997784
                                    args1010456$ae1002186$1)))
                              (clo-app
                               ae1002186
                               args1010456$ae1002186$2))))))))))))))))
 (proc
  (clo1010822 env1010823 arglist1010444)
  (let (($%%post997329997508 (env-ref env1010823 0)))
    (let (($%%val997330997511 (env-ref env1010823 1)))
      (let ((unusedk997782 (prim car arglist1010444)))
        (let ((arglist1010445 (prim cdr arglist1010444)))
          (let (($%%_997333997512 (prim car arglist1010445)))
            (let ((ae1002190 (make-closure clo1010820 $%%val997330997511)))
              (let ((args1010455$$%%post997329997508$0 '()))
                (let ((args1010455$$%%post997329997508$1
                       (prim
                        cons
                        ae1002190
                        args1010455$$%%post997329997508$0)))
                  (clo-app
                   $%%post997329997508
                   args1010455$$%%post997329997508$1))))))))))
 (proc
  (clo1010820 env1010821 arglist1010447)
  (let (($%%val997330997511 (env-ref env1010821 0)))
    (let ((unusedk997783 (prim car arglist1010447)))
      (let ((arglist1010448 (prim cdr arglist1010447)))
        (let (($%%_997334997513 (prim car arglist1010448)))
          (let ((ae1002191 (make-closure clo1010818)))
            (let ((args1010454$ae1002191$0 '()))
              (let ((args1010454$ae1002191$1
                     (prim cons $%%val997330997511 args1010454$ae1002191$0)))
                (let ((args1010454$ae1002191$2
                       (prim cons $%%val997330997511 args1010454$ae1002191$1)))
                  (clo-app ae1002191 args1010454$ae1002191$2))))))))))
 (proc
  (clo1010818 env1010819 arglist1010450)
  (let ((k (prim car arglist1010450)))
    (let ((arglist1010451 (prim cdr arglist1010450)))
      (let ((x (prim car arglist1010451)))
        (let ((_1 (prim halt x)))
          (let ((args1010453$k$0 '()))
            (let ((args1010453$k$1 (prim cons x args1010453$k$0)))
              (clo-app k args1010453$k$1))))))))
 (proc
  (clo1010838 env1010839 arglist1010419)
  (let (($%%cc997322997498 (env-ref env1010839 0)))
    (let ((k997772 (prim car arglist1010419)))
      (let ((arglist1010420 (prim cdr arglist1010419)))
        (let (($x997505 (prim car arglist1010420)))
          (let ((ae1002077 (make-closure clo1010836)))
            (let ((ae1002078
                   (make-closure
                    clo1010834
                    $x997505
                    k997772
                    $%%cc997322997498)))
              (let ((args1010427$ae1002077$0 '()))
                (let ((args1010427$ae1002077$1
                       (prim cons ae1002078 args1010427$ae1002077$0)))
                  (clo-app ae1002077 args1010427$ae1002077$1))))))))))
 (proc
  (clo1010836 env1010837 k-and-args997775)
  (let ((k997774 (prim car k-and-args997775)))
    (let ((lst997506 (prim cdr k-and-args997775)))
      (let ((args1010422$k997774$0 '()))
        (let ((args1010422$k997774$1
               (prim cons lst997506 args1010422$k997774$0)))
          (let ((args1010422$k997774$2
                 (prim cons lst997506 args1010422$k997774$1)))
            (clo-app k997774 args1010422$k997774$2)))))))
 (proc
  (clo1010834 env1010835 arglist1010423)
  (let (($x997505 (env-ref env1010835 0)))
    (let ((k997772 (env-ref env1010835 1)))
      (let (($%%cc997322997498 (env-ref env1010835 2)))
        (let ((unusedk997773 (prim car arglist1010423)))
          (let ((arglist1010424 (prim cdr arglist1010423)))
            (let ((anf-bind997646 (prim car arglist1010424)))
              (let ((anf-bind997647 (prim cons $x997505 anf-bind997646)))
                (let ((args1010426$$%%cc997322997498$0 '()))
                  (let ((args1010426$$%%cc997322997498$1
                         (prim
                          cons
                          anf-bind997647
                          args1010426$$%%cc997322997498$0)))
                    (let ((args1010426$$%%cc997322997498$2
                           (prim
                            cons
                            k997772
                            args1010426$$%%cc997322997498$1)))
                      (clo-app
                       $%%cc997322997498
                       args1010426$$%%cc997322997498$2))))))))))))
 (proc
  (clo1010842 env1010843 arglist1010460)
  (let ((k (prim car arglist1010460)))
    (let ((arglist1010461 (prim cdr arglist1010460)))
      (let ((x (prim car arglist1010461)))
        (let ((_1 (prim halt x)))
          (let ((args1010463$k$0 '()))
            (let ((args1010463$k$1 (prim cons x args1010463$k$0)))
              (clo-app k args1010463$k$1))))))))
 (proc
  (clo1010844 env1010845 arglist1010465)
  (let ((k (prim car arglist1010465)))
    (let ((arglist1010466 (prim cdr arglist1010465)))
      (let ((x (prim car arglist1010466)))
        (let ((_1 (prim halt x)))
          (let ((args1010468$k$0 '()))
            (let ((args1010468$k$1 (prim cons x args1010468$k$0)))
              (clo-app k args1010468$k$1))))))))
 (proc
  (clo1010870 env1010871 arglist1010361)
  (let (($%raise-handler997455 (env-ref env1010871 0)))
    (let (($%%cc997322997498 (env-ref env1010871 1)))
      (let ((k997770 (prim car arglist1010361)))
        (let ((ae1002330 '0))
          (let ((ae1002331 (make-closure clo1010868 $%%cc997322997498)))
            (let ((prim-ret997771
                   (prim
                    vector-set!
                    $%raise-handler997455
                    ae1002330
                    ae1002331)))
              (let ((args1010372$k997770$0 '()))
                (let ((args1010372$k997770$1
                       (prim cons prim-ret997771 args1010372$k997770$0)))
                  (let ((args1010372$k997770$2
                         (prim cons prim-ret997771 args1010372$k997770$1)))
                    (clo-app k997770 args1010372$k997770$2)))))))))))
 (proc
  (clo1010862 env1010863 arglist1010373)
  (let ((%/997441 (env-ref env1010863 0)))
    (let ((k997776 (prim car arglist1010373)))
      (let ((ae1002382 '1))
        (let ((ae1002383 '2))
          (let ((ae1002384 '3))
            (let ((ae1002385 '0))
              (let ((args1010375$%/997441$0 '()))
                (let ((args1010375$%/997441$1
                       (prim cons ae1002385 args1010375$%/997441$0)))
                  (let ((args1010375$%/997441$2
                         (prim cons ae1002384 args1010375$%/997441$1)))
                    (let ((args1010375$%/997441$3
                           (prim cons ae1002383 args1010375$%/997441$2)))
                      (let ((args1010375$%/997441$4
                             (prim cons ae1002382 args1010375$%/997441$3)))
                        (let ((args1010375$%/997441$5
                               (prim cons k997776 args1010375$%/997441$4)))
                          (clo-app
                           %/997441
                           args1010375$%/997441$5))))))))))))))
 (proc
  (clo1010860 env1010861 arglist1010376)
  (let (($%raise-handler997455 (env-ref env1010861 0)))
    (let (($%%old-handler997321997497 (env-ref env1010861 1)))
      (let ((k997777 (prim car arglist1010376)))
        (let ((ae1002411 '0))
          (let ((prim-ret997778
                 (prim
                  vector-set!
                  $%raise-handler997455
                  ae1002411
                  $%%old-handler997321997497)))
            (let ((args1010378$k997777$0 '()))
              (let ((args1010378$k997777$1
                     (prim cons prim-ret997778 args1010378$k997777$0)))
                (let ((args1010378$k997777$2
                       (prim cons prim-ret997778 args1010378$k997777$1)))
                  (clo-app k997777 args1010378$k997777$2))))))))))
 (proc
  (clo1010858 env1010859 arglist1010379)
  (let (($%%post997329997508 (env-ref env1010859 0)))
    (let (($%%body997328997507 (env-ref env1010859 1)))
      (let (($%%pre997327997504 (env-ref env1010859 2)))
        (let (($%wind-stack997470 (env-ref env1010859 3)))
          (let ((unusedk997779 (prim car arglist1010379)))
            (let ((arglist1010380 (prim cdr arglist1010379)))
              (let (($%%_997331997509 (prim car arglist1010380)))
                (let ((anf-bind997648
                       (prim cons $%%pre997327997504 $%%post997329997508)))
                  (let ((ae1002427 '0))
                    (let ((anf-bind997649
                           (prim vector-ref $%wind-stack997470 ae1002427)))
                      (let ((anf-bind997650
                             (prim cons anf-bind997648 anf-bind997649)))
                        (let ((ae1002431 '0))
                          (let ((prim-ret997785
                                 (prim
                                  vector-set!
                                  $%wind-stack997470
                                  ae1002431
                                  anf-bind997650)))
                            (let ((ae1002433
                                   (make-closure
                                    clo1010856
                                    $%%post997329997508
                                    $%%body997328997507
                                    $%wind-stack997470)))
                              (let ((args1010402$ae1002433$0 '()))
                                (let ((args1010402$ae1002433$1
                                       (prim
                                        cons
                                        prim-ret997785
                                        args1010402$ae1002433$0)))
                                  (let ((args1010402$ae1002433$2
                                         (prim
                                          cons
                                          prim-ret997785
                                          args1010402$ae1002433$1)))
                                    (clo-app
                                     ae1002433
                                     args1010402$ae1002433$2)))))))))))))))))))
 (proc
  (clo1010856 env1010857 arglist1010382)
  (let (($%%post997329997508 (env-ref env1010857 0)))
    (let (($%%body997328997507 (env-ref env1010857 1)))
      (let (($%wind-stack997470 (env-ref env1010857 2)))
        (let ((unusedk997780 (prim car arglist1010382)))
          (let ((arglist1010383 (prim cdr arglist1010382)))
            (let (($%%_997332997510 (prim car arglist1010383)))
              (let ((ae1002437
                     (make-closure
                      clo1010854
                      $%%post997329997508
                      $%wind-stack997470)))
                (let ((args1010401$$%%body997328997507$0 '()))
                  (let ((args1010401$$%%body997328997507$1
                         (prim
                          cons
                          ae1002437
                          args1010401$$%%body997328997507$0)))
                    (clo-app
                     $%%body997328997507
                     args1010401$$%%body997328997507$1)))))))))))
 (proc
  (clo1010854 env1010855 arglist1010385)
  (let (($%%post997329997508 (env-ref env1010855 0)))
    (let (($%wind-stack997470 (env-ref env1010855 1)))
      (let ((unusedk997781 (prim car arglist1010385)))
        (let ((arglist1010386 (prim cdr arglist1010385)))
          (let (($%%val997330997511 (prim car arglist1010386)))
            (let ((ae1002439 '0))
              (let ((anf-bind997651
                     (prim vector-ref $%wind-stack997470 ae1002439)))
                (let ((anf-bind997652 (prim cdr anf-bind997651)))
                  (let ((ae1002442 '0))
                    (let ((prim-ret997784
                           (prim
                            vector-set!
                            $%wind-stack997470
                            ae1002442
                            anf-bind997652)))
                      (let ((ae1002444
                             (make-closure
                              clo1010852
                              $%%post997329997508
                              $%%val997330997511)))
                        (let ((args1010400$ae1002444$0 '()))
                          (let ((args1010400$ae1002444$1
                                 (prim
                                  cons
                                  prim-ret997784
                                  args1010400$ae1002444$0)))
                            (let ((args1010400$ae1002444$2
                                   (prim
                                    cons
                                    prim-ret997784
                                    args1010400$ae1002444$1)))
                              (clo-app
                               ae1002444
                               args1010400$ae1002444$2))))))))))))))))
 (proc
  (clo1010852 env1010853 arglist1010388)
  (let (($%%post997329997508 (env-ref env1010853 0)))
    (let (($%%val997330997511 (env-ref env1010853 1)))
      (let ((unusedk997782 (prim car arglist1010388)))
        (let ((arglist1010389 (prim cdr arglist1010388)))
          (let (($%%_997333997512 (prim car arglist1010389)))
            (let ((ae1002448 (make-closure clo1010850 $%%val997330997511)))
              (let ((args1010399$$%%post997329997508$0 '()))
                (let ((args1010399$$%%post997329997508$1
                       (prim
                        cons
                        ae1002448
                        args1010399$$%%post997329997508$0)))
                  (clo-app
                   $%%post997329997508
                   args1010399$$%%post997329997508$1))))))))))
 (proc
  (clo1010850 env1010851 arglist1010391)
  (let (($%%val997330997511 (env-ref env1010851 0)))
    (let ((unusedk997783 (prim car arglist1010391)))
      (let ((arglist1010392 (prim cdr arglist1010391)))
        (let (($%%_997334997513 (prim car arglist1010392)))
          (let ((ae1002449 (make-closure clo1010848)))
            (let ((args1010398$ae1002449$0 '()))
              (let ((args1010398$ae1002449$1
                     (prim cons $%%val997330997511 args1010398$ae1002449$0)))
                (let ((args1010398$ae1002449$2
                       (prim cons $%%val997330997511 args1010398$ae1002449$1)))
                  (clo-app ae1002449 args1010398$ae1002449$2))))))))))
 (proc
  (clo1010848 env1010849 arglist1010394)
  (let ((k (prim car arglist1010394)))
    (let ((arglist1010395 (prim cdr arglist1010394)))
      (let ((x (prim car arglist1010395)))
        (let ((_1 (prim halt x)))
          (let ((args1010397$k$0 '()))
            (let ((args1010397$k$1 (prim cons x args1010397$k$0)))
              (clo-app k args1010397$k$1))))))))
 (proc
  (clo1010868 env1010869 arglist1010363)
  (let (($%%cc997322997498 (env-ref env1010869 0)))
    (let ((k997772 (prim car arglist1010363)))
      (let ((arglist1010364 (prim cdr arglist1010363)))
        (let (($x997505 (prim car arglist1010364)))
          (let ((ae1002335 (make-closure clo1010866)))
            (let ((ae1002336
                   (make-closure
                    clo1010864
                    $x997505
                    k997772
                    $%%cc997322997498)))
              (let ((args1010371$ae1002335$0 '()))
                (let ((args1010371$ae1002335$1
                       (prim cons ae1002336 args1010371$ae1002335$0)))
                  (clo-app ae1002335 args1010371$ae1002335$1))))))))))
 (proc
  (clo1010866 env1010867 k-and-args997775)
  (let ((k997774 (prim car k-and-args997775)))
    (let ((lst997506 (prim cdr k-and-args997775)))
      (let ((args1010366$k997774$0 '()))
        (let ((args1010366$k997774$1
               (prim cons lst997506 args1010366$k997774$0)))
          (let ((args1010366$k997774$2
                 (prim cons lst997506 args1010366$k997774$1)))
            (clo-app k997774 args1010366$k997774$2)))))))
 (proc
  (clo1010864 env1010865 arglist1010367)
  (let (($x997505 (env-ref env1010865 0)))
    (let ((k997772 (env-ref env1010865 1)))
      (let (($%%cc997322997498 (env-ref env1010865 2)))
        (let ((unusedk997773 (prim car arglist1010367)))
          (let ((arglist1010368 (prim cdr arglist1010367)))
            (let ((anf-bind997646 (prim car arglist1010368)))
              (let ((anf-bind997647 (prim cons $x997505 anf-bind997646)))
                (let ((args1010370$$%%cc997322997498$0 '()))
                  (let ((args1010370$$%%cc997322997498$1
                         (prim
                          cons
                          anf-bind997647
                          args1010370$$%%cc997322997498$0)))
                    (let ((args1010370$$%%cc997322997498$2
                           (prim
                            cons
                            k997772
                            args1010370$$%%cc997322997498$1)))
                      (clo-app
                       $%%cc997322997498
                       args1010370$$%%cc997322997498$2))))))))))))
 (proc
  (clo1010872 env1010873 arglist1010404)
  (let ((k (prim car arglist1010404)))
    (let ((arglist1010405 (prim cdr arglist1010404)))
      (let ((x (prim car arglist1010405)))
        (let ((_1 (prim halt x)))
          (let ((args1010407$k$0 '()))
            (let ((args1010407$k$1 (prim cons x args1010407$k$0)))
              (clo-app k args1010407$k$1))))))))
 (proc
  (clo1010874 env1010875 arglist1010409)
  (let ((k (prim car arglist1010409)))
    (let ((arglist1010410 (prim cdr arglist1010409)))
      (let ((x (prim car arglist1010410)))
        (let ((_1 (prim halt x)))
          (let ((args1010412$k$0 '()))
            (let ((args1010412$k$1 (prim cons x args1010412$k$0)))
              (clo-app k args1010412$k$1))))))))
 (proc
  (clo1010888 env1010889 arglist1010332)
  (let ((k997787 (env-ref env1010889 0)))
    (let ((unusedk997788 (prim car arglist1010332)))
      (let ((arglist1010333 (prim cdr arglist1010332)))
        (let ((anf-bind997644 (prim car arglist1010333)))
          (let ((ae1002736 (make-closure clo1010886)))
            (let ((args1010339$ae1002736$0 '()))
              (let ((args1010339$ae1002736$1
                     (prim cons anf-bind997644 args1010339$ae1002736$0)))
                (let ((args1010339$ae1002736$2
                       (prim cons k997787 args1010339$ae1002736$1)))
                  (clo-app ae1002736 args1010339$ae1002736$2))))))))))
 (proc
  (clo1010884 env1010885 arglist1010340)
  (let ((_un (prim car arglist1010340)))
    (let ((arglist1010341 (prim cdr arglist1010340)))
      (let ((_used (prim car arglist1010341)))
        (let ((args1010343$_un$0 '()))
          (let ((args1010343$_un$1 (prim cons _used args1010343$_un$0)))
            (let ((args1010343$_un$2 (prim cons _used args1010343$_un$1)))
              (clo-app _un args1010343$_un$2))))))))
 (proc
  (clo1010882 env1010883 arglist1010344)
  (let (($%%oldstack997324997501 (env-ref env1010883 0)))
    (let (($%%k997323997499 (env-ref env1010883 1)))
      (let (($%do-wind997472 (env-ref env1010883 2)))
        (let (($%wind-stack997470 (env-ref env1010883 3)))
          (let ((k997790 (prim car arglist1010344)))
            (let ((arglist1010345 (prim cdr arglist1010344)))
              (let (($%%x997325997502 (prim car arglist1010345)))
                (let ((ae1002671 '0))
                  (let ((anf-bind997642
                         (prim vector-ref $%wind-stack997470 ae1002671)))
                    (let ((anf-bind997643
                           (prim eq? $%%oldstack997324997501 anf-bind997642)))
                      (if anf-bind997643
                        (let ((prim-ret997792 (prim void)))
                          (let ((ae1002675
                                 (make-closure
                                  clo1010878
                                  k997790
                                  $%%k997323997499
                                  $%%x997325997502)))
                            (let ((args1010351$ae1002675$0 '()))
                              (let ((args1010351$ae1002675$1
                                     (prim
                                      cons
                                      prim-ret997792
                                      args1010351$ae1002675$0)))
                                (let ((args1010351$ae1002675$2
                                       (prim
                                        cons
                                        prim-ret997792
                                        args1010351$ae1002675$1)))
                                  (clo-app
                                   ae1002675
                                   args1010351$ae1002675$2))))))
                        (let ((ae1002685
                               (make-closure
                                clo1010880
                                k997790
                                $%%k997323997499
                                $%%x997325997502)))
                          (let ((args1010356$$%do-wind997472$0 '()))
                            (let ((args1010356$$%do-wind997472$1
                                   (prim
                                    cons
                                    $%%oldstack997324997501
                                    args1010356$$%do-wind997472$0)))
                              (let ((args1010356$$%do-wind997472$2
                                     (prim
                                      cons
                                      ae1002685
                                      args1010356$$%do-wind997472$1)))
                                (clo-app
                                 $%do-wind997472
                                 args1010356$$%do-wind997472$2)))))))))))))))))
 (proc
  (clo1010878 env1010879 arglist1010347)
  (let ((k997790 (env-ref env1010879 0)))
    (let (($%%k997323997499 (env-ref env1010879 1)))
      (let (($%%x997325997502 (env-ref env1010879 2)))
        (let ((unusedk997791 (prim car arglist1010347)))
          (let ((arglist1010348 (prim cdr arglist1010347)))
            (let (($%%_997326997503 (prim car arglist1010348)))
              (let ((args1010350$$%%k997323997499$0 '()))
                (let ((args1010350$$%%k997323997499$1
                       (prim
                        cons
                        $%%x997325997502
                        args1010350$$%%k997323997499$0)))
                  (let ((args1010350$$%%k997323997499$2
                         (prim cons k997790 args1010350$$%%k997323997499$1)))
                    (clo-app
                     $%%k997323997499
                     args1010350$$%%k997323997499$2)))))))))))
 (proc
  (clo1010880 env1010881 arglist1010352)
  (let ((k997790 (env-ref env1010881 0)))
    (let (($%%k997323997499 (env-ref env1010881 1)))
      (let (($%%x997325997502 (env-ref env1010881 2)))
        (let ((unusedk997791 (prim car arglist1010352)))
          (let ((arglist1010353 (prim cdr arglist1010352)))
            (let (($%%_997326997503 (prim car arglist1010353)))
              (let ((args1010355$$%%k997323997499$0 '()))
                (let ((args1010355$$%%k997323997499$1
                       (prim
                        cons
                        $%%x997325997502
                        args1010355$$%%k997323997499$0)))
                  (let ((args1010355$$%%k997323997499$2
                         (prim cons k997790 args1010355$$%%k997323997499$1)))
                    (clo-app
                     $%%k997323997499
                     args1010355$$%%k997323997499$2)))))))))))
 (proc
  (clo1010886 env1010887 arglist1010335)
  (let ((k997789 (prim car arglist1010335)))
    (let ((arglist1010336 (prim cdr arglist1010335)))
      (let (($k997500 (prim car arglist1010336)))
        (let ((args1010338$k997789$0 '()))
          (let ((args1010338$k997789$1
                 (prim cons $k997500 args1010338$k997789$0)))
            (let ((args1010338$k997789$2
                   (prim cons $k997500 args1010338$k997789$1)))
              (clo-app k997789 args1010338$k997789$2))))))))
 (proc
  (clo1010900 env1010901 arglist1010308)
  (let (($post997491 (env-ref env1010901 0)))
    (let (($body997490 (env-ref env1010901 1)))
      (let (($pre997489 (env-ref env1010901 2)))
        (let ((k997761 (env-ref env1010901 3)))
          (let (($%wind-stack997470 (env-ref env1010901 4)))
            (let ((unusedk997762 (prim car arglist1010308)))
              (let ((arglist1010309 (prim cdr arglist1010308)))
                (let (($%%_997317997492 (prim car arglist1010309)))
                  (let ((anf-bind997637 (prim cons $pre997489 $post997491)))
                    (let ((ae1001954 '0))
                      (let ((anf-bind997638
                             (prim vector-ref $%wind-stack997470 ae1001954)))
                        (let ((anf-bind997639
                               (prim cons anf-bind997637 anf-bind997638)))
                          (let ((ae1001958 '0))
                            (let ((prim-ret997768
                                   (prim
                                    vector-set!
                                    $%wind-stack997470
                                    ae1001958
                                    anf-bind997639)))
                              (let ((ae1001960
                                     (make-closure
                                      clo1010898
                                      $post997491
                                      $body997490
                                      k997761
                                      $%wind-stack997470)))
                                (let ((args1010327$ae1001960$0 '()))
                                  (let ((args1010327$ae1001960$1
                                         (prim
                                          cons
                                          prim-ret997768
                                          args1010327$ae1001960$0)))
                                    (let ((args1010327$ae1001960$2
                                           (prim
                                            cons
                                            prim-ret997768
                                            args1010327$ae1001960$1)))
                                      (clo-app
                                       ae1001960
                                       args1010327$ae1001960$2))))))))))))))))))))
 (proc
  (clo1010898 env1010899 arglist1010311)
  (let (($post997491 (env-ref env1010899 0)))
    (let (($body997490 (env-ref env1010899 1)))
      (let ((k997761 (env-ref env1010899 2)))
        (let (($%wind-stack997470 (env-ref env1010899 3)))
          (let ((unusedk997763 (prim car arglist1010311)))
            (let ((arglist1010312 (prim cdr arglist1010311)))
              (let (($%%_997318997493 (prim car arglist1010312)))
                (let ((ae1001964
                       (make-closure
                        clo1010896
                        $post997491
                        k997761
                        $%wind-stack997470)))
                  (let ((args1010326$$body997490$0 '()))
                    (let ((args1010326$$body997490$1
                           (prim cons ae1001964 args1010326$$body997490$0)))
                      (clo-app
                       $body997490
                       args1010326$$body997490$1))))))))))))
 (proc
  (clo1010896 env1010897 arglist1010314)
  (let (($post997491 (env-ref env1010897 0)))
    (let ((k997761 (env-ref env1010897 1)))
      (let (($%wind-stack997470 (env-ref env1010897 2)))
        (let ((unusedk997764 (prim car arglist1010314)))
          (let ((arglist1010315 (prim cdr arglist1010314)))
            (let (($val997494 (prim car arglist1010315)))
              (let ((ae1001966 '0))
                (let ((anf-bind997640
                       (prim vector-ref $%wind-stack997470 ae1001966)))
                  (let ((anf-bind997641 (prim cdr anf-bind997640)))
                    (let ((ae1001969 '0))
                      (let ((prim-ret997767
                             (prim
                              vector-set!
                              $%wind-stack997470
                              ae1001969
                              anf-bind997641)))
                        (let ((ae1001971
                               (make-closure
                                clo1010894
                                $post997491
                                $val997494
                                k997761)))
                          (let ((args1010325$ae1001971$0 '()))
                            (let ((args1010325$ae1001971$1
                                   (prim
                                    cons
                                    prim-ret997767
                                    args1010325$ae1001971$0)))
                              (let ((args1010325$ae1001971$2
                                     (prim
                                      cons
                                      prim-ret997767
                                      args1010325$ae1001971$1)))
                                (clo-app
                                 ae1001971
                                 args1010325$ae1001971$2)))))))))))))))))
 (proc
  (clo1010894 env1010895 arglist1010317)
  (let (($post997491 (env-ref env1010895 0)))
    (let (($val997494 (env-ref env1010895 1)))
      (let ((k997761 (env-ref env1010895 2)))
        (let ((unusedk997765 (prim car arglist1010317)))
          (let ((arglist1010318 (prim cdr arglist1010317)))
            (let (($%%_997319997495 (prim car arglist1010318)))
              (let ((ae1001975 (make-closure clo1010892 $val997494 k997761)))
                (let ((args1010324$$post997491$0 '()))
                  (let ((args1010324$$post997491$1
                         (prim cons ae1001975 args1010324$$post997491$0)))
                    (clo-app $post997491 args1010324$$post997491$1)))))))))))
 (proc
  (clo1010892 env1010893 arglist1010320)
  (let (($val997494 (env-ref env1010893 0)))
    (let ((k997761 (env-ref env1010893 1)))
      (let ((unusedk997766 (prim car arglist1010320)))
        (let ((arglist1010321 (prim cdr arglist1010320)))
          (let (($%%_997320997496 (prim car arglist1010321)))
            (let ((args1010323$k997761$0 '()))
              (let ((args1010323$k997761$1
                     (prim cons $val997494 args1010323$k997761$0)))
                (let ((args1010323$k997761$2
                       (prim cons $val997494 args1010323$k997761$1)))
                  (clo-app k997761 args1010323$k997761$2))))))))))
 (proc
  (clo1010930 env1010931 arglist1010250)
  (let (($new-stack997473 (env-ref env1010931 0)))
    (let ((k997737 (env-ref env1010931 1)))
      (let (($%wind-stack997470 (env-ref env1010931 2)))
        (let ((unusedk997739 (prim car arglist1010250)))
          (let ((arglist1010251 (prim cdr arglist1010250)))
            (let (($tail997474 (prim car arglist1010251)))
              (let ((ae1001097 (make-closure clo1010928)))
                (let ((ae1001098
                       (make-closure
                        clo1010926
                        $tail997474
                        $new-stack997473
                        k997737
                        $%wind-stack997470)))
                  (let ((args1010301$ae1001097$0 '()))
                    (let ((args1010301$ae1001097$1
                           (prim cons ae1001098 args1010301$ae1001097$0)))
                      (clo-app ae1001097 args1010301$ae1001097$1))))))))))))
 (proc
  (clo1010928 env1010929 k-and-args997760)
  (let ((k997759 (prim car k-and-args997760)))
    (let ((lst997477 (prim cdr k-and-args997760)))
      (let ((args1010253$k997759$0 '()))
        (let ((args1010253$k997759$1
               (prim cons lst997477 args1010253$k997759$0)))
          (let ((args1010253$k997759$2
                 (prim cons lst997477 args1010253$k997759$1)))
            (clo-app k997759 args1010253$k997759$2)))))))
 (proc
  (clo1010926 env1010927 arglist1010254)
  (let (($tail997474 (env-ref env1010927 0)))
    (let (($new-stack997473 (env-ref env1010927 1)))
      (let ((k997737 (env-ref env1010927 2)))
        (let (($%wind-stack997470 (env-ref env1010927 3)))
          (let ((unusedk997757 (prim car arglist1010254)))
            (let ((arglist1010255 (prim cdr arglist1010254)))
              (let ((anf-bind997621 (prim car arglist1010255)))
                (let ((ae1001099 '1))
                  (let ((prim-ret997758
                         (prim make-vector ae1001099 anf-bind997621)))
                    (let ((ae1001101
                           (make-closure
                            clo1010924
                            $tail997474
                            $new-stack997473
                            k997737
                            $%wind-stack997470)))
                      (let ((args1010300$ae1001101$0 '()))
                        (let ((args1010300$ae1001101$1
                               (prim
                                cons
                                prim-ret997758
                                args1010300$ae1001101$0)))
                          (let ((args1010300$ae1001101$2
                                 (prim
                                  cons
                                  prim-ret997758
                                  args1010300$ae1001101$1)))
                            (clo-app
                             ae1001101
                             args1010300$ae1001101$2)))))))))))))))
 (proc
  (clo1010924 env1010925 arglist1010257)
  (let (($tail997474 (env-ref env1010925 0)))
    (let (($new-stack997473 (env-ref env1010925 1)))
      (let ((k997737 (env-ref env1010925 2)))
        (let (($%wind-stack997470 (env-ref env1010925 3)))
          (let ((unusedk997751 (prim car arglist1010257)))
            (let ((arglist1010258 (prim cdr arglist1010257)))
              (let (($loop997476 (prim car arglist1010258)))
                (let ((ae1001105 '0))
                  (let ((ae1001106
                         (make-closure
                          clo1010922
                          $tail997474
                          $loop997476
                          $%wind-stack997470)))
                    (let (($%%_997311997478
                           (prim vector-set! $loop997476 ae1001105 ae1001106)))
                      (let ((ae1001108 '0))
                        (let ((anf-bind997628
                               (prim vector-ref $loop997476 ae1001108)))
                          (let ((ae1001110 '0))
                            (let ((anf-bind997629
                                   (prim
                                    vector-ref
                                    $%wind-stack997470
                                    ae1001110)))
                              (let ((ae1001112
                                     (make-closure
                                      clo1010916
                                      $tail997474
                                      $new-stack997473
                                      k997737
                                      $%wind-stack997470)))
                                (let ((args1010299$anf-bind997628$0 '()))
                                  (let ((args1010299$anf-bind997628$1
                                         (prim
                                          cons
                                          anf-bind997629
                                          args1010299$anf-bind997628$0)))
                                    (let ((args1010299$anf-bind997628$2
                                           (prim
                                            cons
                                            ae1001112
                                            args1010299$anf-bind997628$1)))
                                      (clo-app
                                       anf-bind997628
                                       args1010299$anf-bind997628$2))))))))))))))))))))
 (proc
  (clo1010922 env1010923 arglist1010260)
  (let (($tail997474 (env-ref env1010923 0)))
    (let (($loop997476 (env-ref env1010923 1)))
      (let (($%wind-stack997470 (env-ref env1010923 2)))
        (let ((k997752 (prim car arglist1010260)))
          (let ((arglist1010261 (prim cdr arglist1010260)))
            (let (($st997479 (prim car arglist1010261)))
              (let ((anf-bind997622 (prim eq? $st997479 $tail997474)))
                (if anf-bind997622
                  (let ((prim-ret997753 (prim void)))
                    (let ((args1010263$k997752$0 '()))
                      (let ((args1010263$k997752$1
                             (prim cons prim-ret997753 args1010263$k997752$0)))
                        (let ((args1010263$k997752$2
                               (prim
                                cons
                                prim-ret997753
                                args1010263$k997752$1)))
                          (clo-app k997752 args1010263$k997752$2)))))
                  (let ((anf-bind997623 (prim cdr $st997479)))
                    (let ((ae1001410 '0))
                      (let ((prim-ret997756
                             (prim
                              vector-set!
                              $%wind-stack997470
                              ae1001410
                              anf-bind997623)))
                        (let ((ae1001412
                               (make-closure
                                clo1010920
                                $st997479
                                k997752
                                $loop997476)))
                          (let ((args1010272$ae1001412$0 '()))
                            (let ((args1010272$ae1001412$1
                                   (prim
                                    cons
                                    prim-ret997756
                                    args1010272$ae1001412$0)))
                              (let ((args1010272$ae1001412$2
                                     (prim
                                      cons
                                      prim-ret997756
                                      args1010272$ae1001412$1)))
                                (clo-app
                                 ae1001412
                                 args1010272$ae1001412$2)))))))))))))))))
 (proc
  (clo1010916 env1010917 arglist1010273)
  (let (($tail997474 (env-ref env1010917 0)))
    (let (($new-stack997473 (env-ref env1010917 1)))
      (let ((k997737 (env-ref env1010917 2)))
        (let (($%wind-stack997470 (env-ref env1010917 3)))
          (let ((unusedk997740 (prim car arglist1010273)))
            (let ((arglist1010274 (prim cdr arglist1010273)))
              (let (($%%_997310997475 (prim car arglist1010274)))
                (let ((ae1001114 (make-closure clo1010914)))
                  (let ((ae1001115
                         (make-closure
                          clo1010912
                          $tail997474
                          $new-stack997473
                          k997737
                          $%wind-stack997470)))
                    (let ((args1010298$ae1001114$0 '()))
                      (let ((args1010298$ae1001114$1
                             (prim cons ae1001115 args1010298$ae1001114$0)))
                        (clo-app ae1001114 args1010298$ae1001114$1)))))))))))))
 (proc
  (clo1010914 env1010915 k-and-args997750)
  (let ((k997749 (prim car k-and-args997750)))
    (let ((lst997483 (prim cdr k-and-args997750)))
      (let ((args1010276$k997749$0 '()))
        (let ((args1010276$k997749$1
               (prim cons lst997483 args1010276$k997749$0)))
          (let ((args1010276$k997749$2
                 (prim cons lst997483 args1010276$k997749$1)))
            (clo-app k997749 args1010276$k997749$2)))))))
 (proc
  (clo1010912 env1010913 arglist1010277)
  (let (($tail997474 (env-ref env1010913 0)))
    (let (($new-stack997473 (env-ref env1010913 1)))
      (let ((k997737 (env-ref env1010913 2)))
        (let (($%wind-stack997470 (env-ref env1010913 3)))
          (let ((unusedk997747 (prim car arglist1010277)))
            (let ((arglist1010278 (prim cdr arglist1010277)))
              (let ((anf-bind997630 (prim car arglist1010278)))
                (let ((ae1001116 '1))
                  (let ((prim-ret997748
                         (prim make-vector ae1001116 anf-bind997630)))
                    (let ((ae1001118
                           (make-closure
                            clo1010910
                            $tail997474
                            $new-stack997473
                            k997737
                            $%wind-stack997470)))
                      (let ((args1010297$ae1001118$0 '()))
                        (let ((args1010297$ae1001118$1
                               (prim
                                cons
                                prim-ret997748
                                args1010297$ae1001118$0)))
                          (let ((args1010297$ae1001118$2
                                 (prim
                                  cons
                                  prim-ret997748
                                  args1010297$ae1001118$1)))
                            (clo-app
                             ae1001118
                             args1010297$ae1001118$2)))))))))))))))
 (proc
  (clo1010910 env1010911 arglist1010280)
  (let (($tail997474 (env-ref env1010911 0)))
    (let (($new-stack997473 (env-ref env1010911 1)))
      (let ((k997737 (env-ref env1010911 2)))
        (let (($%wind-stack997470 (env-ref env1010911 3)))
          (let ((unusedk997741 (prim car arglist1010280)))
            (let ((arglist1010281 (prim cdr arglist1010280)))
              (let (($loop997482 (prim car arglist1010281)))
                (let ((ae1001122 '0))
                  (let ((ae1001123
                         (make-closure
                          clo1010908
                          $tail997474
                          $loop997482
                          $%wind-stack997470)))
                    (let (($%%_997314997484
                           (prim vector-set! $loop997482 ae1001122 ae1001123)))
                      (let ((ae1001125 '0))
                        (let ((anf-bind997636
                               (prim vector-ref $loop997482 ae1001125)))
                          (let ((args1010296$anf-bind997636$0 '()))
                            (let ((args1010296$anf-bind997636$1
                                   (prim
                                    cons
                                    $new-stack997473
                                    args1010296$anf-bind997636$0)))
                              (let ((args1010296$anf-bind997636$2
                                     (prim
                                      cons
                                      k997737
                                      args1010296$anf-bind997636$1)))
                                (clo-app
                                 anf-bind997636
                                 args1010296$anf-bind997636$2)))))))))))))))))
 (proc
  (clo1010908 env1010909 arglist1010283)
  (let (($tail997474 (env-ref env1010909 0)))
    (let (($loop997482 (env-ref env1010909 1)))
      (let (($%wind-stack997470 (env-ref env1010909 2)))
        (let ((k997742 (prim car arglist1010283)))
          (let ((arglist1010284 (prim cdr arglist1010283)))
            (let (($st997485 (prim car arglist1010284)))
              (let ((anf-bind997631 (prim eq? $st997485 $tail997474)))
                (if anf-bind997631
                  (let ((prim-ret997743 (prim void)))
                    (let ((args1010286$k997742$0 '()))
                      (let ((args1010286$k997742$1
                             (prim cons prim-ret997743 args1010286$k997742$0)))
                        (let ((args1010286$k997742$2
                               (prim
                                cons
                                prim-ret997743
                                args1010286$k997742$1)))
                          (clo-app k997742 args1010286$k997742$2)))))
                  (let ((ae1001141 '0))
                    (let ((anf-bind997632
                           (prim vector-ref $loop997482 ae1001141)))
                      (let ((anf-bind997633 (prim cdr $st997485)))
                        (let ((ae1001144
                               (make-closure
                                clo1010906
                                $st997485
                                k997742
                                $%wind-stack997470)))
                          (let ((args1010295$anf-bind997632$0 '()))
                            (let ((args1010295$anf-bind997632$1
                                   (prim
                                    cons
                                    anf-bind997633
                                    args1010295$anf-bind997632$0)))
                              (let ((args1010295$anf-bind997632$2
                                     (prim
                                      cons
                                      ae1001144
                                      args1010295$anf-bind997632$1)))
                                (clo-app
                                 anf-bind997632
                                 args1010295$anf-bind997632$2)))))))))))))))))
 (proc
  (clo1010906 env1010907 arglist1010287)
  (let (($st997485 (env-ref env1010907 0)))
    (let ((k997742 (env-ref env1010907 1)))
      (let (($%wind-stack997470 (env-ref env1010907 2)))
        (let ((unusedk997744 (prim car arglist1010287)))
          (let ((arglist1010288 (prim cdr arglist1010287)))
            (let (($%%_997315997486 (prim car arglist1010288)))
              (let ((anf-bind997634 (prim car $st997485)))
                (let ((anf-bind997635 (prim car anf-bind997634)))
                  (let ((ae1001149
                         (make-closure
                          clo1010904
                          $st997485
                          k997742
                          $%wind-stack997470)))
                    (let ((args1010294$anf-bind997635$0 '()))
                      (let ((args1010294$anf-bind997635$1
                             (prim
                              cons
                              ae1001149
                              args1010294$anf-bind997635$0)))
                        (clo-app
                         anf-bind997635
                         args1010294$anf-bind997635$1)))))))))))))
 (proc
  (clo1010904 env1010905 arglist1010290)
  (let (($st997485 (env-ref env1010905 0)))
    (let ((k997742 (env-ref env1010905 1)))
      (let (($%wind-stack997470 (env-ref env1010905 2)))
        (let ((unusedk997745 (prim car arglist1010290)))
          (let ((arglist1010291 (prim cdr arglist1010290)))
            (let (($%%_997316997487 (prim car arglist1010291)))
              (let ((ae1001151 '0))
                (let ((prim-ret997746
                       (prim
                        vector-set!
                        $%wind-stack997470
                        ae1001151
                        $st997485)))
                  (let ((args1010293$k997742$0 '()))
                    (let ((args1010293$k997742$1
                           (prim cons prim-ret997746 args1010293$k997742$0)))
                      (let ((args1010293$k997742$2
                             (prim cons prim-ret997746 args1010293$k997742$1)))
                        (clo-app k997742 args1010293$k997742$2)))))))))))))
 (proc
  (clo1010920 env1010921 arglist1010264)
  (let (($st997479 (env-ref env1010921 0)))
    (let ((k997752 (env-ref env1010921 1)))
      (let (($loop997476 (env-ref env1010921 2)))
        (let ((unusedk997754 (prim car arglist1010264)))
          (let ((arglist1010265 (prim cdr arglist1010264)))
            (let (($%%_997312997480 (prim car arglist1010265)))
              (let ((anf-bind997624 (prim car $st997479)))
                (let ((anf-bind997625 (prim cdr anf-bind997624)))
                  (let ((ae1001418
                         (make-closure
                          clo1010918
                          $st997479
                          k997752
                          $loop997476)))
                    (let ((args1010271$anf-bind997625$0 '()))
                      (let ((args1010271$anf-bind997625$1
                             (prim
                              cons
                              ae1001418
                              args1010271$anf-bind997625$0)))
                        (clo-app
                         anf-bind997625
                         args1010271$anf-bind997625$1)))))))))))))
 (proc
  (clo1010918 env1010919 arglist1010267)
  (let (($st997479 (env-ref env1010919 0)))
    (let ((k997752 (env-ref env1010919 1)))
      (let (($loop997476 (env-ref env1010919 2)))
        (let ((unusedk997755 (prim car arglist1010267)))
          (let ((arglist1010268 (prim cdr arglist1010267)))
            (let (($%%_997313997481 (prim car arglist1010268)))
              (let ((ae1001420 '0))
                (let ((anf-bind997626 (prim vector-ref $loop997476 ae1001420)))
                  (let ((anf-bind997627 (prim cdr $st997479)))
                    (let ((args1010270$anf-bind997626$0 '()))
                      (let ((args1010270$anf-bind997626$1
                             (prim
                              cons
                              anf-bind997627
                              args1010270$anf-bind997626$0)))
                        (let ((args1010270$anf-bind997626$2
                               (prim
                                cons
                                k997752
                                args1010270$anf-bind997626$1)))
                          (clo-app
                           anf-bind997626
                           args1010270$anf-bind997626$2))))))))))))))
 (proc
  (clo1010968 env1010969 arglist1010176)
  (let ((k997723 (env-ref env1010969 0)))
    (let ((%drop997425 (env-ref env1010969 1)))
      (let ((%>997407 (env-ref env1010969 2)))
        (let (($ys997462 (env-ref env1010969 3)))
          (let ((%length997353 (env-ref env1010969 4)))
            (let (($xs997461 (env-ref env1010969 5)))
              (let ((unusedk997724 (prim car arglist1010176)))
                (let ((arglist1010177 (prim cdr arglist1010176)))
                  (let (($lx997463 (prim car arglist1010177)))
                    (let ((ae1000567
                           (make-closure
                            clo1010966
                            k997723
                            $lx997463
                            %drop997425
                            %>997407
                            $ys997462
                            $xs997461)))
                      (let ((args1010237$%length997353$0 '()))
                        (let ((args1010237$%length997353$1
                               (prim
                                cons
                                $ys997462
                                args1010237$%length997353$0)))
                          (let ((args1010237$%length997353$2
                                 (prim
                                  cons
                                  ae1000567
                                  args1010237$%length997353$1)))
                            (clo-app
                             %length997353
                             args1010237$%length997353$2)))))))))))))))
 (proc
  (clo1010966 env1010967 arglist1010179)
  (let ((k997723 (env-ref env1010967 0)))
    (let (($lx997463 (env-ref env1010967 1)))
      (let ((%drop997425 (env-ref env1010967 2)))
        (let ((%>997407 (env-ref env1010967 3)))
          (let (($ys997462 (env-ref env1010967 4)))
            (let (($xs997461 (env-ref env1010967 5)))
              (let ((unusedk997725 (prim car arglist1010179)))
                (let ((arglist1010180 (prim cdr arglist1010179)))
                  (let (($ly997464 (prim car arglist1010180)))
                    (let ((ae1000569 (make-closure clo1010964)))
                      (let ((ae1000570
                             (make-closure
                              clo1010962
                              k997723
                              $ly997464
                              $lx997463
                              %drop997425
                              %>997407
                              $ys997462
                              $xs997461)))
                        (let ((args1010236$ae1000569$0 '()))
                          (let ((args1010236$ae1000569$1
                                 (prim
                                  cons
                                  ae1000570
                                  args1010236$ae1000569$0)))
                            (clo-app
                             ae1000569
                             args1010236$ae1000569$1)))))))))))))))
 (proc
  (clo1010964 env1010965 k-and-args997735)
  (let ((k997734 (prim car k-and-args997735)))
    (let ((lst997466 (prim cdr k-and-args997735)))
      (let ((args1010182$k997734$0 '()))
        (let ((args1010182$k997734$1
               (prim cons lst997466 args1010182$k997734$0)))
          (let ((args1010182$k997734$2
                 (prim cons lst997466 args1010182$k997734$1)))
            (clo-app k997734 args1010182$k997734$2)))))))
 (proc
  (clo1010962 env1010963 arglist1010183)
  (let ((k997723 (env-ref env1010963 0)))
    (let (($ly997464 (env-ref env1010963 1)))
      (let (($lx997463 (env-ref env1010963 2)))
        (let ((%drop997425 (env-ref env1010963 3)))
          (let ((%>997407 (env-ref env1010963 4)))
            (let (($ys997462 (env-ref env1010963 5)))
              (let (($xs997461 (env-ref env1010963 6)))
                (let ((unusedk997732 (prim car arglist1010183)))
                  (let ((arglist1010184 (prim cdr arglist1010183)))
                    (let ((anf-bind997605 (prim car arglist1010184)))
                      (let ((ae1000571 '1))
                        (let ((prim-ret997733
                               (prim make-vector ae1000571 anf-bind997605)))
                          (let ((ae1000573
                                 (make-closure
                                  clo1010960
                                  k997723
                                  $ly997464
                                  $lx997463
                                  %drop997425
                                  %>997407
                                  $ys997462
                                  $xs997461)))
                            (let ((args1010235$ae1000573$0 '()))
                              (let ((args1010235$ae1000573$1
                                     (prim
                                      cons
                                      prim-ret997733
                                      args1010235$ae1000573$0)))
                                (let ((args1010235$ae1000573$2
                                       (prim
                                        cons
                                        prim-ret997733
                                        args1010235$ae1000573$1)))
                                  (clo-app
                                   ae1000573
                                   args1010235$ae1000573$2))))))))))))))))))
 (proc
  (clo1010960 env1010961 arglist1010186)
  (let ((k997723 (env-ref env1010961 0)))
    (let (($ly997464 (env-ref env1010961 1)))
      (let (($lx997463 (env-ref env1010961 2)))
        (let ((%drop997425 (env-ref env1010961 3)))
          (let ((%>997407 (env-ref env1010961 4)))
            (let (($ys997462 (env-ref env1010961 5)))
              (let (($xs997461 (env-ref env1010961 6)))
                (let ((unusedk997726 (prim car arglist1010186)))
                  (let ((arglist1010187 (prim cdr arglist1010186)))
                    (let (($loop997465 (prim car arglist1010187)))
                      (let ((ae1000577 '0))
                        (let ((ae1000578
                               (make-closure clo1010958 $loop997465)))
                          (let (($%%_997309997467
                                 (prim
                                  vector-set!
                                  $loop997465
                                  ae1000577
                                  ae1000578)))
                            (let ((ae1000580 '0))
                              (let ((anf-bind997610
                                     (prim vector-ref $loop997465 ae1000580)))
                                (let ((ae1000582
                                       (make-closure
                                        clo1010956
                                        k997723
                                        $ly997464
                                        anf-bind997610
                                        $lx997463
                                        %drop997425
                                        %>997407
                                        $ys997462
                                        $xs997461)))
                                  (let ((args1010234$%>997407$0 '()))
                                    (let ((args1010234$%>997407$1
                                           (prim
                                            cons
                                            $ly997464
                                            args1010234$%>997407$0)))
                                      (let ((args1010234$%>997407$2
                                             (prim
                                              cons
                                              $lx997463
                                              args1010234$%>997407$1)))
                                        (let ((args1010234$%>997407$3
                                               (prim
                                                cons
                                                ae1000582
                                                args1010234$%>997407$2)))
                                          (clo-app
                                           %>997407
                                           args1010234$%>997407$3))))))))))))))))))))))
 (proc
  (clo1010958 env1010959 arglist1010189)
  (let (($loop997465 (env-ref env1010959 0)))
    (let ((k997727 (prim car arglist1010189)))
      (let ((arglist1010190 (prim cdr arglist1010189)))
        (let (($x997468 (prim car arglist1010190)))
          (let ((arglist1010191 (prim cdr arglist1010190)))
            (let (($y997469 (prim car arglist1010191)))
              (let ((anf-bind997606 (prim eq? $x997468 $y997469)))
                (if anf-bind997606
                  (let ((args1010193$k997727$0 '()))
                    (let ((args1010193$k997727$1
                           (prim cons $x997468 args1010193$k997727$0)))
                      (let ((args1010193$k997727$2
                             (prim cons $x997468 args1010193$k997727$1)))
                        (clo-app k997727 args1010193$k997727$2))))
                  (let ((ae1000739 '0))
                    (let ((anf-bind997607
                           (prim vector-ref $loop997465 ae1000739)))
                      (let ((anf-bind997608 (prim cdr $x997468)))
                        (let ((anf-bind997609 (prim cdr $y997469)))
                          (let ((args1010194$anf-bind997607$0 '()))
                            (let ((args1010194$anf-bind997607$1
                                   (prim
                                    cons
                                    anf-bind997609
                                    args1010194$anf-bind997607$0)))
                              (let ((args1010194$anf-bind997607$2
                                     (prim
                                      cons
                                      anf-bind997608
                                      args1010194$anf-bind997607$1)))
                                (let ((args1010194$anf-bind997607$3
                                       (prim
                                        cons
                                        k997727
                                        args1010194$anf-bind997607$2)))
                                  (clo-app
                                   anf-bind997607
                                   args1010194$anf-bind997607$3))))))))))))))))))
 (proc
  (clo1010956 env1010957 arglist1010195)
  (let ((k997723 (env-ref env1010957 0)))
    (let (($ly997464 (env-ref env1010957 1)))
      (let ((anf-bind997610 (env-ref env1010957 2)))
        (let (($lx997463 (env-ref env1010957 3)))
          (let ((%drop997425 (env-ref env1010957 4)))
            (let ((%>997407 (env-ref env1010957 5)))
              (let (($ys997462 (env-ref env1010957 6)))
                (let (($xs997461 (env-ref env1010957 7)))
                  (let ((unusedk997728 (prim car arglist1010195)))
                    (let ((arglist1010196 (prim cdr arglist1010195)))
                      (let ((anf-bind997611 (prim car arglist1010196)))
                        (if anf-bind997611
                          (let ((anf-bind997612 (prim - $lx997463 $ly997464)))
                            (let ((ae1000589
                                   (make-closure
                                    clo1010946
                                    k997723
                                    $ly997464
                                    anf-bind997610
                                    $lx997463
                                    %drop997425
                                    %>997407
                                    $ys997462)))
                              (let ((args1010215$%drop997425$0 '()))
                                (let ((args1010215$%drop997425$1
                                       (prim
                                        cons
                                        anf-bind997612
                                        args1010215$%drop997425$0)))
                                  (let ((args1010215$%drop997425$2
                                         (prim
                                          cons
                                          $xs997461
                                          args1010215$%drop997425$1)))
                                    (let ((args1010215$%drop997425$3
                                           (prim
                                            cons
                                            ae1000589
                                            args1010215$%drop997425$2)))
                                      (clo-app
                                       %drop997425
                                       args1010215$%drop997425$3)))))))
                          (let ((ae1000629
                                 (make-closure
                                  clo1010954
                                  k997723
                                  $ly997464
                                  anf-bind997610
                                  $lx997463
                                  %drop997425
                                  %>997407
                                  $ys997462)))
                            (let ((args1010233$ae1000629$0 '()))
                              (let ((args1010233$ae1000629$1
                                     (prim
                                      cons
                                      $xs997461
                                      args1010233$ae1000629$0)))
                                (let ((args1010233$ae1000629$2
                                       (prim
                                        cons
                                        $xs997461
                                        args1010233$ae1000629$1)))
                                  (clo-app
                                   ae1000629
                                   args1010233$ae1000629$2))))))))))))))))))
 (proc
  (clo1010946 env1010947 arglist1010198)
  (let ((k997723 (env-ref env1010947 0)))
    (let (($ly997464 (env-ref env1010947 1)))
      (let ((anf-bind997610 (env-ref env1010947 2)))
        (let (($lx997463 (env-ref env1010947 3)))
          (let ((%drop997425 (env-ref env1010947 4)))
            (let ((%>997407 (env-ref env1010947 5)))
              (let (($ys997462 (env-ref env1010947 6)))
                (let ((unusedk997729 (prim car arglist1010198)))
                  (let ((arglist1010199 (prim cdr arglist1010198)))
                    (let ((anf-bind997613 (prim car arglist1010199)))
                      (let ((ae1000593
                             (make-closure
                              clo1010944
                              k997723
                              $ly997464
                              anf-bind997610
                              $lx997463
                              %drop997425
                              $ys997462
                              anf-bind997613)))
                        (let ((args1010214$%>997407$0 '()))
                          (let ((args1010214$%>997407$1
                                 (prim cons $lx997463 args1010214$%>997407$0)))
                            (let ((args1010214$%>997407$2
                                   (prim
                                    cons
                                    $ly997464
                                    args1010214$%>997407$1)))
                              (let ((args1010214$%>997407$3
                                     (prim
                                      cons
                                      ae1000593
                                      args1010214$%>997407$2)))
                                (clo-app
                                 %>997407
                                 args1010214$%>997407$3)))))))))))))))))
 (proc
  (clo1010944 env1010945 arglist1010201)
  (let ((k997723 (env-ref env1010945 0)))
    (let (($ly997464 (env-ref env1010945 1)))
      (let ((anf-bind997610 (env-ref env1010945 2)))
        (let (($lx997463 (env-ref env1010945 3)))
          (let ((%drop997425 (env-ref env1010945 4)))
            (let (($ys997462 (env-ref env1010945 5)))
              (let ((anf-bind997613 (env-ref env1010945 6)))
                (let ((unusedk997730 (prim car arglist1010201)))
                  (let ((arglist1010202 (prim cdr arglist1010201)))
                    (let ((anf-bind997614 (prim car arglist1010202)))
                      (if anf-bind997614
                        (let ((anf-bind997615 (prim - $ly997464 $lx997463)))
                          (let ((ae1000600
                                 (make-closure
                                  clo1010940
                                  k997723
                                  anf-bind997610
                                  anf-bind997613)))
                            (let ((args1010208$%drop997425$0 '()))
                              (let ((args1010208$%drop997425$1
                                     (prim
                                      cons
                                      anf-bind997615
                                      args1010208$%drop997425$0)))
                                (let ((args1010208$%drop997425$2
                                       (prim
                                        cons
                                        $ys997462
                                        args1010208$%drop997425$1)))
                                  (let ((args1010208$%drop997425$3
                                         (prim
                                          cons
                                          ae1000600
                                          args1010208$%drop997425$2)))
                                    (clo-app
                                     %drop997425
                                     args1010208$%drop997425$3)))))))
                        (let ((ae1000611
                               (make-closure
                                clo1010942
                                k997723
                                anf-bind997610
                                anf-bind997613)))
                          (let ((args1010213$ae1000611$0 '()))
                            (let ((args1010213$ae1000611$1
                                   (prim
                                    cons
                                    $ys997462
                                    args1010213$ae1000611$0)))
                              (let ((args1010213$ae1000611$2
                                     (prim
                                      cons
                                      $ys997462
                                      args1010213$ae1000611$1)))
                                (clo-app
                                 ae1000611
                                 args1010213$ae1000611$2)))))))))))))))))
 (proc
  (clo1010940 env1010941 arglist1010204)
  (let ((k997723 (env-ref env1010941 0)))
    (let ((anf-bind997610 (env-ref env1010941 1)))
      (let ((anf-bind997613 (env-ref env1010941 2)))
        (let ((unusedk997731 (prim car arglist1010204)))
          (let ((arglist1010205 (prim cdr arglist1010204)))
            (let ((anf-bind997616 (prim car arglist1010205)))
              (let ((args1010207$anf-bind997610$0 '()))
                (let ((args1010207$anf-bind997610$1
                       (prim
                        cons
                        anf-bind997616
                        args1010207$anf-bind997610$0)))
                  (let ((args1010207$anf-bind997610$2
                         (prim
                          cons
                          anf-bind997613
                          args1010207$anf-bind997610$1)))
                    (let ((args1010207$anf-bind997610$3
                           (prim cons k997723 args1010207$anf-bind997610$2)))
                      (clo-app
                       anf-bind997610
                       args1010207$anf-bind997610$3))))))))))))
 (proc
  (clo1010942 env1010943 arglist1010209)
  (let ((k997723 (env-ref env1010943 0)))
    (let ((anf-bind997610 (env-ref env1010943 1)))
      (let ((anf-bind997613 (env-ref env1010943 2)))
        (let ((unusedk997731 (prim car arglist1010209)))
          (let ((arglist1010210 (prim cdr arglist1010209)))
            (let ((anf-bind997616 (prim car arglist1010210)))
              (let ((args1010212$anf-bind997610$0 '()))
                (let ((args1010212$anf-bind997610$1
                       (prim
                        cons
                        anf-bind997616
                        args1010212$anf-bind997610$0)))
                  (let ((args1010212$anf-bind997610$2
                         (prim
                          cons
                          anf-bind997613
                          args1010212$anf-bind997610$1)))
                    (let ((args1010212$anf-bind997610$3
                           (prim cons k997723 args1010212$anf-bind997610$2)))
                      (clo-app
                       anf-bind997610
                       args1010212$anf-bind997610$3))))))))))))
 (proc
  (clo1010954 env1010955 arglist1010216)
  (let ((k997723 (env-ref env1010955 0)))
    (let (($ly997464 (env-ref env1010955 1)))
      (let ((anf-bind997610 (env-ref env1010955 2)))
        (let (($lx997463 (env-ref env1010955 3)))
          (let ((%drop997425 (env-ref env1010955 4)))
            (let ((%>997407 (env-ref env1010955 5)))
              (let (($ys997462 (env-ref env1010955 6)))
                (let ((unusedk997729 (prim car arglist1010216)))
                  (let ((arglist1010217 (prim cdr arglist1010216)))
                    (let ((anf-bind997613 (prim car arglist1010217)))
                      (let ((ae1000633
                             (make-closure
                              clo1010952
                              k997723
                              $ly997464
                              anf-bind997610
                              $lx997463
                              %drop997425
                              $ys997462
                              anf-bind997613)))
                        (let ((args1010232$%>997407$0 '()))
                          (let ((args1010232$%>997407$1
                                 (prim cons $lx997463 args1010232$%>997407$0)))
                            (let ((args1010232$%>997407$2
                                   (prim
                                    cons
                                    $ly997464
                                    args1010232$%>997407$1)))
                              (let ((args1010232$%>997407$3
                                     (prim
                                      cons
                                      ae1000633
                                      args1010232$%>997407$2)))
                                (clo-app
                                 %>997407
                                 args1010232$%>997407$3)))))))))))))))))
 (proc
  (clo1010952 env1010953 arglist1010219)
  (let ((k997723 (env-ref env1010953 0)))
    (let (($ly997464 (env-ref env1010953 1)))
      (let ((anf-bind997610 (env-ref env1010953 2)))
        (let (($lx997463 (env-ref env1010953 3)))
          (let ((%drop997425 (env-ref env1010953 4)))
            (let (($ys997462 (env-ref env1010953 5)))
              (let ((anf-bind997613 (env-ref env1010953 6)))
                (let ((unusedk997730 (prim car arglist1010219)))
                  (let ((arglist1010220 (prim cdr arglist1010219)))
                    (let ((anf-bind997614 (prim car arglist1010220)))
                      (if anf-bind997614
                        (let ((anf-bind997615 (prim - $ly997464 $lx997463)))
                          (let ((ae1000640
                                 (make-closure
                                  clo1010948
                                  k997723
                                  anf-bind997610
                                  anf-bind997613)))
                            (let ((args1010226$%drop997425$0 '()))
                              (let ((args1010226$%drop997425$1
                                     (prim
                                      cons
                                      anf-bind997615
                                      args1010226$%drop997425$0)))
                                (let ((args1010226$%drop997425$2
                                       (prim
                                        cons
                                        $ys997462
                                        args1010226$%drop997425$1)))
                                  (let ((args1010226$%drop997425$3
                                         (prim
                                          cons
                                          ae1000640
                                          args1010226$%drop997425$2)))
                                    (clo-app
                                     %drop997425
                                     args1010226$%drop997425$3)))))))
                        (let ((ae1000651
                               (make-closure
                                clo1010950
                                k997723
                                anf-bind997610
                                anf-bind997613)))
                          (let ((args1010231$ae1000651$0 '()))
                            (let ((args1010231$ae1000651$1
                                   (prim
                                    cons
                                    $ys997462
                                    args1010231$ae1000651$0)))
                              (let ((args1010231$ae1000651$2
                                     (prim
                                      cons
                                      $ys997462
                                      args1010231$ae1000651$1)))
                                (clo-app
                                 ae1000651
                                 args1010231$ae1000651$2)))))))))))))))))
 (proc
  (clo1010948 env1010949 arglist1010222)
  (let ((k997723 (env-ref env1010949 0)))
    (let ((anf-bind997610 (env-ref env1010949 1)))
      (let ((anf-bind997613 (env-ref env1010949 2)))
        (let ((unusedk997731 (prim car arglist1010222)))
          (let ((arglist1010223 (prim cdr arglist1010222)))
            (let ((anf-bind997616 (prim car arglist1010223)))
              (let ((args1010225$anf-bind997610$0 '()))
                (let ((args1010225$anf-bind997610$1
                       (prim
                        cons
                        anf-bind997616
                        args1010225$anf-bind997610$0)))
                  (let ((args1010225$anf-bind997610$2
                         (prim
                          cons
                          anf-bind997613
                          args1010225$anf-bind997610$1)))
                    (let ((args1010225$anf-bind997610$3
                           (prim cons k997723 args1010225$anf-bind997610$2)))
                      (clo-app
                       anf-bind997610
                       args1010225$anf-bind997610$3))))))))))))
 (proc
  (clo1010950 env1010951 arglist1010227)
  (let ((k997723 (env-ref env1010951 0)))
    (let ((anf-bind997610 (env-ref env1010951 1)))
      (let ((anf-bind997613 (env-ref env1010951 2)))
        (let ((unusedk997731 (prim car arglist1010227)))
          (let ((arglist1010228 (prim cdr arglist1010227)))
            (let ((anf-bind997616 (prim car arglist1010228)))
              (let ((args1010230$anf-bind997610$0 '()))
                (let ((args1010230$anf-bind997610$1
                       (prim
                        cons
                        anf-bind997616
                        args1010230$anf-bind997610$0)))
                  (let ((args1010230$anf-bind997610$2
                         (prim
                          cons
                          anf-bind997613
                          args1010230$anf-bind997610$1)))
                    (let ((args1010230$anf-bind997610$3
                           (prim cons k997723 args1010230$anf-bind997610$2)))
                      (clo-app
                       anf-bind997610
                       args1010230$anf-bind997610$3))))))))))))
 (proc
  (clo1010984 env1010985 arglist1010140)
  (let ((k997709 (prim car arglist1010140)))
    (let ((arglist1010141 (prim cdr arglist1010140)))
      (let ((n997443 (prim car arglist1010141)))
        (let ((arglist1010142 (prim cdr arglist1010141)))
          (let ((v997444 (prim car arglist1010142)))
            (let ((prim-ret997710 (prim / v997444 n997443)))
              (let ((args1010144$k997709$0 '()))
                (let ((args1010144$k997709$1
                       (prim cons prim-ret997710 args1010144$k997709$0)))
                  (let ((args1010144$k997709$2
                         (prim cons prim-ret997710 args1010144$k997709$1)))
                    (clo-app k997709 args1010144$k997709$2)))))))))))
 (proc
  (clo1010996 env1010997 arglist1010113)
  (let ((k997705 (prim car arglist1010113)))
    (let ((arglist1010114 (prim cdr arglist1010113)))
      (let ((u997439 (prim car arglist1010114)))
        (let ((args1010116$u997439$0 '()))
          (let ((args1010116$u997439$1
                 (prim cons u997439 args1010116$u997439$0)))
            (let ((args1010116$u997439$2
                   (prim cons k997705 args1010116$u997439$1)))
              (clo-app u997439 args1010116$u997439$2))))))))
 (proc
  (clo1010994 env1010995 arglist1010117)
  (let ((lst997437 (env-ref env1010995 0)))
    (let ((k997700 (env-ref env1010995 1)))
      (let ((v997435 (env-ref env1010995 2)))
        (let ((unusedk997701 (prim car arglist1010117)))
          (let ((arglist1010118 (prim cdr arglist1010117)))
            (let ((cc997438 (prim car arglist1010118)))
              (let ((ae1000162 '0))
                (let ((anf-bind997582 (prim vector-ref lst997437 ae1000162)))
                  (let ((anf-bind997583 (prim null? anf-bind997582)))
                    (if anf-bind997583
                      (let ((ae1000166 '#f))
                        (let ((ae1000167 '#f))
                          (let ((args1010120$k997700$0 '()))
                            (let ((args1010120$k997700$1
                                   (prim
                                    cons
                                    ae1000167
                                    args1010120$k997700$0)))
                              (let ((args1010120$k997700$2
                                     (prim
                                      cons
                                      ae1000166
                                      args1010120$k997700$1)))
                                (clo-app k997700 args1010120$k997700$2))))))
                      (let ((ae1000175 '0))
                        (let ((anf-bind997584
                               (prim vector-ref lst997437 ae1000175)))
                          (let ((anf-bind997585 (prim car anf-bind997584)))
                            (let ((anf-bind997586
                                   (prim eqv? anf-bind997585 v997435)))
                              (if anf-bind997586
                                (let ((ae1000181 '0))
                                  (let ((prim-ret997702
                                         (prim
                                          vector-ref
                                          lst997437
                                          ae1000181)))
                                    (let ((args1010121$k997700$0 '()))
                                      (let ((args1010121$k997700$1
                                             (prim
                                              cons
                                              prim-ret997702
                                              args1010121$k997700$0)))
                                        (let ((args1010121$k997700$2
                                               (prim
                                                cons
                                                prim-ret997702
                                                args1010121$k997700$1)))
                                          (clo-app
                                           k997700
                                           args1010121$k997700$2))))))
                                (let ((ae1000191 '0))
                                  (let ((anf-bind997587
                                         (prim
                                          vector-ref
                                          lst997437
                                          ae1000191)))
                                    (let ((anf-bind997588
                                           (prim cdr anf-bind997587)))
                                      (let ((ae1000194 '0))
                                        (let ((prim-ret997704
                                               (prim
                                                vector-set!
                                                lst997437
                                                ae1000194
                                                anf-bind997588)))
                                          (let ((ae1000196
                                                 (make-closure
                                                  clo1010992
                                                  cc997438
                                                  k997700)))
                                            (let ((args1010126$ae1000196$0
                                                   '()))
                                              (let ((args1010126$ae1000196$1
                                                     (prim
                                                      cons
                                                      prim-ret997704
                                                      args1010126$ae1000196$0)))
                                                (let ((args1010126$ae1000196$2
                                                       (prim
                                                        cons
                                                        prim-ret997704
                                                        args1010126$ae1000196$1)))
                                                  (clo-app
                                                   ae1000196
                                                   args1010126$ae1000196$2))))))))))))))))))))))))))
 (proc
  (clo1010990 env1010991 arglist1010127)
  (let ((lst997437 (env-ref env1010991 0)))
    (let ((k997700 (env-ref env1010991 1)))
      (let ((v997435 (env-ref env1010991 2)))
        (let ((unusedk997701 (prim car arglist1010127)))
          (let ((arglist1010128 (prim cdr arglist1010127)))
            (let ((cc997438 (prim car arglist1010128)))
              (let ((ae1000041 '0))
                (let ((anf-bind997582 (prim vector-ref lst997437 ae1000041)))
                  (let ((anf-bind997583 (prim null? anf-bind997582)))
                    (if anf-bind997583
                      (let ((ae1000045 '#f))
                        (let ((ae1000046 '#f))
                          (let ((args1010130$k997700$0 '()))
                            (let ((args1010130$k997700$1
                                   (prim
                                    cons
                                    ae1000046
                                    args1010130$k997700$0)))
                              (let ((args1010130$k997700$2
                                     (prim
                                      cons
                                      ae1000045
                                      args1010130$k997700$1)))
                                (clo-app k997700 args1010130$k997700$2))))))
                      (let ((ae1000054 '0))
                        (let ((anf-bind997584
                               (prim vector-ref lst997437 ae1000054)))
                          (let ((anf-bind997585 (prim car anf-bind997584)))
                            (let ((anf-bind997586
                                   (prim eqv? anf-bind997585 v997435)))
                              (if anf-bind997586
                                (let ((ae1000060 '0))
                                  (let ((prim-ret997702
                                         (prim
                                          vector-ref
                                          lst997437
                                          ae1000060)))
                                    (let ((args1010131$k997700$0 '()))
                                      (let ((args1010131$k997700$1
                                             (prim
                                              cons
                                              prim-ret997702
                                              args1010131$k997700$0)))
                                        (let ((args1010131$k997700$2
                                               (prim
                                                cons
                                                prim-ret997702
                                                args1010131$k997700$1)))
                                          (clo-app
                                           k997700
                                           args1010131$k997700$2))))))
                                (let ((ae1000070 '0))
                                  (let ((anf-bind997587
                                         (prim
                                          vector-ref
                                          lst997437
                                          ae1000070)))
                                    (let ((anf-bind997588
                                           (prim cdr anf-bind997587)))
                                      (let ((ae1000073 '0))
                                        (let ((prim-ret997704
                                               (prim
                                                vector-set!
                                                lst997437
                                                ae1000073
                                                anf-bind997588)))
                                          (let ((ae1000075
                                                 (make-closure
                                                  clo1010988
                                                  cc997438
                                                  k997700)))
                                            (let ((args1010136$ae1000075$0
                                                   '()))
                                              (let ((args1010136$ae1000075$1
                                                     (prim
                                                      cons
                                                      prim-ret997704
                                                      args1010136$ae1000075$0)))
                                                (let ((args1010136$ae1000075$2
                                                       (prim
                                                        cons
                                                        prim-ret997704
                                                        args1010136$ae1000075$1)))
                                                  (clo-app
                                                   ae1000075
                                                   args1010136$ae1000075$2))))))))))))))))))))))))))
 (proc
  (clo1010988 env1010989 arglist1010132)
  (let ((cc997438 (env-ref env1010989 0)))
    (let ((k997700 (env-ref env1010989 1)))
      (let ((unusedk997703 (prim car arglist1010132)))
        (let ((arglist1010133 (prim cdr arglist1010132)))
          (let ((_0997440 (prim car arglist1010133)))
            (let ((args1010135$cc997438$0 '()))
              (let ((args1010135$cc997438$1
                     (prim cons cc997438 args1010135$cc997438$0)))
                (let ((args1010135$cc997438$2
                       (prim cons k997700 args1010135$cc997438$1)))
                  (clo-app cc997438 args1010135$cc997438$2))))))))))
 (proc
  (clo1010992 env1010993 arglist1010122)
  (let ((cc997438 (env-ref env1010993 0)))
    (let ((k997700 (env-ref env1010993 1)))
      (let ((unusedk997703 (prim car arglist1010122)))
        (let ((arglist1010123 (prim cdr arglist1010122)))
          (let ((_0997440 (prim car arglist1010123)))
            (let ((args1010125$cc997438$0 '()))
              (let ((args1010125$cc997438$1
                     (prim cons cc997438 args1010125$cc997438$0)))
                (let ((args1010125$cc997438$2
                       (prim cons k997700 args1010125$cc997438$1)))
                  (clo-app cc997438 args1010125$cc997438$2))))))))))
 (proc
  (clo1011012 env1011013 arglist1010078)
  (let ((k997699 (prim car arglist1010078)))
    (let ((arglist1010079 (prim cdr arglist1010078)))
      (let ((u997431 (prim car arglist1010079)))
        (let ((args1010081$u997431$0 '()))
          (let ((args1010081$u997431$1
                 (prim cons u997431 args1010081$u997431$0)))
            (let ((args1010081$u997431$2
                   (prim cons k997699 args1010081$u997431$1)))
              (clo-app u997431 args1010081$u997431$2))))))))
 (proc
  (clo1011010 env1011011 arglist1010082)
  (let ((n997429 (env-ref env1011011 0)))
    (let ((k997692 (env-ref env1011011 1)))
      (let ((lst997428 (env-ref env1011011 2)))
        (let ((unusedk997693 (prim car arglist1010082)))
          (let ((arglist1010083 (prim cdr arglist1010082)))
            (let ((cc997430 (prim car arglist1010083)))
              (let ((ae999606 '0))
                (let ((anf-bind997576 (prim vector-ref n997429 ae999606)))
                  (let ((ae999607 '0))
                    (let ((anf-bind997577 (prim = ae999607 anf-bind997576)))
                      (if anf-bind997577
                        (let ((ae999611 '0))
                          (let ((prim-ret997694
                                 (prim vector-ref lst997428 ae999611)))
                            (let ((args1010085$k997692$0 '()))
                              (let ((args1010085$k997692$1
                                     (prim
                                      cons
                                      prim-ret997694
                                      args1010085$k997692$0)))
                                (let ((args1010085$k997692$2
                                       (prim
                                        cons
                                        prim-ret997694
                                        args1010085$k997692$1)))
                                  (clo-app k997692 args1010085$k997692$2))))))
                        (let ((ae999621 '0))
                          (let ((anf-bind997578
                                 (prim vector-ref lst997428 ae999621)))
                            (let ((anf-bind997579 (prim cdr anf-bind997578)))
                              (let ((ae999624 '0))
                                (let ((prim-ret997698
                                       (prim
                                        vector-set!
                                        lst997428
                                        ae999624
                                        anf-bind997579)))
                                  (let ((ae999626
                                         (make-closure
                                          clo1011008
                                          cc997430
                                          n997429
                                          k997692)))
                                    (let ((args1010094$ae999626$0 '()))
                                      (let ((args1010094$ae999626$1
                                             (prim
                                              cons
                                              prim-ret997698
                                              args1010094$ae999626$0)))
                                        (let ((args1010094$ae999626$2
                                               (prim
                                                cons
                                                prim-ret997698
                                                args1010094$ae999626$1)))
                                          (clo-app
                                           ae999626
                                           args1010094$ae999626$2))))))))))))))))))))))
 (proc
  (clo1011004 env1011005 arglist1010095)
  (let ((n997429 (env-ref env1011005 0)))
    (let ((k997692 (env-ref env1011005 1)))
      (let ((lst997428 (env-ref env1011005 2)))
        (let ((unusedk997693 (prim car arglist1010095)))
          (let ((arglist1010096 (prim cdr arglist1010095)))
            (let ((cc997430 (prim car arglist1010096)))
              (let ((ae999424 '0))
                (let ((anf-bind997576 (prim vector-ref n997429 ae999424)))
                  (let ((ae999425 '0))
                    (let ((anf-bind997577 (prim = ae999425 anf-bind997576)))
                      (if anf-bind997577
                        (let ((ae999429 '0))
                          (let ((prim-ret997694
                                 (prim vector-ref lst997428 ae999429)))
                            (let ((args1010098$k997692$0 '()))
                              (let ((args1010098$k997692$1
                                     (prim
                                      cons
                                      prim-ret997694
                                      args1010098$k997692$0)))
                                (let ((args1010098$k997692$2
                                       (prim
                                        cons
                                        prim-ret997694
                                        args1010098$k997692$1)))
                                  (clo-app k997692 args1010098$k997692$2))))))
                        (let ((ae999439 '0))
                          (let ((anf-bind997578
                                 (prim vector-ref lst997428 ae999439)))
                            (let ((anf-bind997579 (prim cdr anf-bind997578)))
                              (let ((ae999442 '0))
                                (let ((prim-ret997698
                                       (prim
                                        vector-set!
                                        lst997428
                                        ae999442
                                        anf-bind997579)))
                                  (let ((ae999444
                                         (make-closure
                                          clo1011002
                                          cc997430
                                          n997429
                                          k997692)))
                                    (let ((args1010107$ae999444$0 '()))
                                      (let ((args1010107$ae999444$1
                                             (prim
                                              cons
                                              prim-ret997698
                                              args1010107$ae999444$0)))
                                        (let ((args1010107$ae999444$2
                                               (prim
                                                cons
                                                prim-ret997698
                                                args1010107$ae999444$1)))
                                          (clo-app
                                           ae999444
                                           args1010107$ae999444$2))))))))))))))))))))))
 (proc
  (clo1011002 env1011003 arglist1010099)
  (let ((cc997430 (env-ref env1011003 0)))
    (let ((n997429 (env-ref env1011003 1)))
      (let ((k997692 (env-ref env1011003 2)))
        (let ((unusedk997695 (prim car arglist1010099)))
          (let ((arglist1010100 (prim cdr arglist1010099)))
            (let ((_0997432 (prim car arglist1010100)))
              (let ((ae999448 '0))
                (let ((anf-bind997580 (prim vector-ref n997429 ae999448)))
                  (let ((ae999450 '1))
                    (let ((anf-bind997581 (prim - anf-bind997580 ae999450)))
                      (let ((ae999452 '0))
                        (let ((prim-ret997697
                               (prim
                                vector-set!
                                n997429
                                ae999452
                                anf-bind997581)))
                          (let ((ae999454
                                 (make-closure clo1011000 cc997430 k997692)))
                            (let ((args1010106$ae999454$0 '()))
                              (let ((args1010106$ae999454$1
                                     (prim
                                      cons
                                      prim-ret997697
                                      args1010106$ae999454$0)))
                                (let ((args1010106$ae999454$2
                                       (prim
                                        cons
                                        prim-ret997697
                                        args1010106$ae999454$1)))
                                  (clo-app
                                   ae999454
                                   args1010106$ae999454$2))))))))))))))))))
 (proc
  (clo1011000 env1011001 arglist1010102)
  (let ((cc997430 (env-ref env1011001 0)))
    (let ((k997692 (env-ref env1011001 1)))
      (let ((unusedk997696 (prim car arglist1010102)))
        (let ((arglist1010103 (prim cdr arglist1010102)))
          (let ((_1997433 (prim car arglist1010103)))
            (let ((args1010105$cc997430$0 '()))
              (let ((args1010105$cc997430$1
                     (prim cons cc997430 args1010105$cc997430$0)))
                (let ((args1010105$cc997430$2
                       (prim cons k997692 args1010105$cc997430$1)))
                  (clo-app cc997430 args1010105$cc997430$2))))))))))
 (proc
  (clo1011008 env1011009 arglist1010086)
  (let ((cc997430 (env-ref env1011009 0)))
    (let ((n997429 (env-ref env1011009 1)))
      (let ((k997692 (env-ref env1011009 2)))
        (let ((unusedk997695 (prim car arglist1010086)))
          (let ((arglist1010087 (prim cdr arglist1010086)))
            (let ((_0997432 (prim car arglist1010087)))
              (let ((ae999630 '0))
                (let ((anf-bind997580 (prim vector-ref n997429 ae999630)))
                  (let ((ae999632 '1))
                    (let ((anf-bind997581 (prim - anf-bind997580 ae999632)))
                      (let ((ae999634 '0))
                        (let ((prim-ret997697
                               (prim
                                vector-set!
                                n997429
                                ae999634
                                anf-bind997581)))
                          (let ((ae999636
                                 (make-closure clo1011006 cc997430 k997692)))
                            (let ((args1010093$ae999636$0 '()))
                              (let ((args1010093$ae999636$1
                                     (prim
                                      cons
                                      prim-ret997697
                                      args1010093$ae999636$0)))
                                (let ((args1010093$ae999636$2
                                       (prim
                                        cons
                                        prim-ret997697
                                        args1010093$ae999636$1)))
                                  (clo-app
                                   ae999636
                                   args1010093$ae999636$2))))))))))))))))))
 (proc
  (clo1011006 env1011007 arglist1010089)
  (let ((cc997430 (env-ref env1011007 0)))
    (let ((k997692 (env-ref env1011007 1)))
      (let ((unusedk997696 (prim car arglist1010089)))
        (let ((arglist1010090 (prim cdr arglist1010089)))
          (let ((_1997433 (prim car arglist1010090)))
            (let ((args1010092$cc997430$0 '()))
              (let ((args1010092$cc997430$1
                     (prim cons cc997430 args1010092$cc997430$0)))
                (let ((args1010092$cc997430$2
                       (prim cons k997692 args1010092$cc997430$1)))
                  (clo-app cc997430 args1010092$cc997430$2))))))))))
 (proc
  (clo1011028 env1011029 arglist1010041)
  (let ((k997691 (prim car arglist1010041)))
    (let ((arglist1010042 (prim cdr arglist1010041)))
      (let ((k997422 (prim car arglist1010042)))
        (let ((args1010044$k997691$0 '()))
          (let ((args1010044$k997691$1
                 (prim cons k997422 args1010044$k997691$0)))
            (let ((args1010044$k997691$2
                   (prim cons k997422 args1010044$k997691$1)))
              (clo-app k997691 args1010044$k997691$2))))))))
 (proc
  (clo1011026 env1011027 arglist1010045)
  (let ((a997420 (env-ref env1011027 0)))
    (let ((k997685 (env-ref env1011027 1)))
      (let ((unusedk997686 (prim car arglist1010045)))
        (let ((arglist1010046 (prim cdr arglist1010045)))
          (let ((cc997421 (prim car arglist1010046)))
            (let ((ae999094 '0))
              (let ((anf-bind997569 (prim vector-ref a997420 ae999094)))
                (let ((anf-bind997570 (prim null? anf-bind997569)))
                  (if anf-bind997570
                    (let ((ae999098 '#t))
                      (let ((ae999099 '#t))
                        (let ((args1010048$k997685$0 '()))
                          (let ((args1010048$k997685$1
                                 (prim cons ae999099 args1010048$k997685$0)))
                            (let ((args1010048$k997685$2
                                   (prim cons ae999098 args1010048$k997685$1)))
                              (clo-app k997685 args1010048$k997685$2))))))
                    (let ((ae999107 '0))
                      (let ((anf-bind997571
                             (prim vector-ref a997420 ae999107)))
                        (let ((anf-bind997572 (prim cons? anf-bind997571)))
                          (if anf-bind997572
                            (let ((ae999111 '0))
                              (let ((anf-bind997573
                                     (prim vector-ref a997420 ae999111)))
                                (let ((prim-ret997690
                                       (prim cdr anf-bind997573)))
                                  (let ((ae999113
                                         (make-closure
                                          clo1011024
                                          a997420
                                          cc997421
                                          k997685)))
                                    (let ((args1010057$ae999113$0 '()))
                                      (let ((args1010057$ae999113$1
                                             (prim
                                              cons
                                              prim-ret997690
                                              args1010057$ae999113$0)))
                                        (let ((args1010057$ae999113$2
                                               (prim
                                                cons
                                                prim-ret997690
                                                args1010057$ae999113$1)))
                                          (clo-app
                                           ae999113
                                           args1010057$ae999113$2))))))))
                            (let ((ae999174 '#f))
                              (let ((ae999175 '#f))
                                (let ((args1010058$k997685$0 '()))
                                  (let ((args1010058$k997685$1
                                         (prim
                                          cons
                                          ae999175
                                          args1010058$k997685$0)))
                                    (let ((args1010058$k997685$2
                                           (prim
                                            cons
                                            ae999174
                                            args1010058$k997685$1)))
                                      (clo-app
                                       k997685
                                       args1010058$k997685$2))))))))))))))))))))
 (proc
  (clo1011020 env1011021 arglist1010059)
  (let ((a997420 (env-ref env1011021 0)))
    (let ((k997685 (env-ref env1011021 1)))
      (let ((unusedk997686 (prim car arglist1010059)))
        (let ((arglist1010060 (prim cdr arglist1010059)))
          (let ((cc997421 (prim car arglist1010060)))
            (let ((ae998945 '0))
              (let ((anf-bind997569 (prim vector-ref a997420 ae998945)))
                (let ((anf-bind997570 (prim null? anf-bind997569)))
                  (if anf-bind997570
                    (let ((ae998949 '#t))
                      (let ((ae998950 '#t))
                        (let ((args1010062$k997685$0 '()))
                          (let ((args1010062$k997685$1
                                 (prim cons ae998950 args1010062$k997685$0)))
                            (let ((args1010062$k997685$2
                                   (prim cons ae998949 args1010062$k997685$1)))
                              (clo-app k997685 args1010062$k997685$2))))))
                    (let ((ae998958 '0))
                      (let ((anf-bind997571
                             (prim vector-ref a997420 ae998958)))
                        (let ((anf-bind997572 (prim cons? anf-bind997571)))
                          (if anf-bind997572
                            (let ((ae998962 '0))
                              (let ((anf-bind997573
                                     (prim vector-ref a997420 ae998962)))
                                (let ((prim-ret997690
                                       (prim cdr anf-bind997573)))
                                  (let ((ae998964
                                         (make-closure
                                          clo1011018
                                          a997420
                                          cc997421
                                          k997685)))
                                    (let ((args1010071$ae998964$0 '()))
                                      (let ((args1010071$ae998964$1
                                             (prim
                                              cons
                                              prim-ret997690
                                              args1010071$ae998964$0)))
                                        (let ((args1010071$ae998964$2
                                               (prim
                                                cons
                                                prim-ret997690
                                                args1010071$ae998964$1)))
                                          (clo-app
                                           ae998964
                                           args1010071$ae998964$2))))))))
                            (let ((ae999025 '#f))
                              (let ((ae999026 '#f))
                                (let ((args1010072$k997685$0 '()))
                                  (let ((args1010072$k997685$1
                                         (prim
                                          cons
                                          ae999026
                                          args1010072$k997685$0)))
                                    (let ((args1010072$k997685$2
                                           (prim
                                            cons
                                            ae999025
                                            args1010072$k997685$1)))
                                      (clo-app
                                       k997685
                                       args1010072$k997685$2))))))))))))))))))))
 (proc
  (clo1011018 env1011019 arglist1010063)
  (let ((a997420 (env-ref env1011019 0)))
    (let ((cc997421 (env-ref env1011019 1)))
      (let ((k997685 (env-ref env1011019 2)))
        (let ((unusedk997687 (prim car arglist1010063)))
          (let ((arglist1010064 (prim cdr arglist1010063)))
            (let ((b997423 (prim car arglist1010064)))
              (let ((ae998968 '0))
                (let ((anf-bind997574 (prim vector-ref a997420 ae998968)))
                  (let ((anf-bind997575 (prim cdr anf-bind997574)))
                    (let ((ae998971 '0))
                      (let ((prim-ret997689
                             (prim
                              vector-set!
                              a997420
                              ae998971
                              anf-bind997575)))
                        (let ((ae998973
                               (make-closure clo1011016 cc997421 k997685)))
                          (let ((args1010070$ae998973$0 '()))
                            (let ((args1010070$ae998973$1
                                   (prim
                                    cons
                                    prim-ret997689
                                    args1010070$ae998973$0)))
                              (let ((args1010070$ae998973$2
                                     (prim
                                      cons
                                      prim-ret997689
                                      args1010070$ae998973$1)))
                                (clo-app
                                 ae998973
                                 args1010070$ae998973$2)))))))))))))))))
 (proc
  (clo1011016 env1011017 arglist1010066)
  (let ((cc997421 (env-ref env1011017 0)))
    (let ((k997685 (env-ref env1011017 1)))
      (let ((unusedk997688 (prim car arglist1010066)))
        (let ((arglist1010067 (prim cdr arglist1010066)))
          (let ((_0997424 (prim car arglist1010067)))
            (let ((args1010069$cc997421$0 '()))
              (let ((args1010069$cc997421$1
                     (prim cons cc997421 args1010069$cc997421$0)))
                (let ((args1010069$cc997421$2
                       (prim cons k997685 args1010069$cc997421$1)))
                  (clo-app cc997421 args1010069$cc997421$2))))))))))
 (proc
  (clo1011024 env1011025 arglist1010049)
  (let ((a997420 (env-ref env1011025 0)))
    (let ((cc997421 (env-ref env1011025 1)))
      (let ((k997685 (env-ref env1011025 2)))
        (let ((unusedk997687 (prim car arglist1010049)))
          (let ((arglist1010050 (prim cdr arglist1010049)))
            (let ((b997423 (prim car arglist1010050)))
              (let ((ae999117 '0))
                (let ((anf-bind997574 (prim vector-ref a997420 ae999117)))
                  (let ((anf-bind997575 (prim cdr anf-bind997574)))
                    (let ((ae999120 '0))
                      (let ((prim-ret997689
                             (prim
                              vector-set!
                              a997420
                              ae999120
                              anf-bind997575)))
                        (let ((ae999122
                               (make-closure clo1011022 cc997421 k997685)))
                          (let ((args1010056$ae999122$0 '()))
                            (let ((args1010056$ae999122$1
                                   (prim
                                    cons
                                    prim-ret997689
                                    args1010056$ae999122$0)))
                              (let ((args1010056$ae999122$2
                                     (prim
                                      cons
                                      prim-ret997689
                                      args1010056$ae999122$1)))
                                (clo-app
                                 ae999122
                                 args1010056$ae999122$2)))))))))))))))))
 (proc
  (clo1011022 env1011023 arglist1010052)
  (let ((cc997421 (env-ref env1011023 0)))
    (let ((k997685 (env-ref env1011023 1)))
      (let ((unusedk997688 (prim car arglist1010052)))
        (let ((arglist1010053 (prim cdr arglist1010052)))
          (let ((_0997424 (prim car arglist1010053)))
            (let ((args1010055$cc997421$0 '()))
              (let ((args1010055$cc997421$1
                     (prim cons cc997421 args1010055$cc997421$0)))
                (let ((args1010055$cc997421$2
                       (prim cons k997685 args1010055$cc997421$1)))
                  (clo-app cc997421 args1010055$cc997421$2))))))))))
 (proc
  (clo1011034 env1011035 arglist1010030)
  (let ((anf-bind997565 (env-ref env1011035 0)))
    (let ((k997797 (env-ref env1011035 1)))
      (let ((unusedk997798 (prim car arglist1010030)))
        (let ((arglist1010031 (prim cdr arglist1010030)))
          (let ((anf-bind997568 (prim car arglist1010031)))
            (let ((prim-ret997799 (prim cons anf-bind997565 anf-bind997568)))
              (let ((args1010033$k997797$0 '()))
                (let ((args1010033$k997797$1
                       (prim cons prim-ret997799 args1010033$k997797$0)))
                  (let ((args1010033$k997797$2
                         (prim cons prim-ret997799 args1010033$k997797$1)))
                    (clo-app k997797 args1010033$k997797$2)))))))))))
 (proc
  (clo1011050 env1011051 k-and-args997672)
  (let ((%drop-right997365 (env-ref env1011051 0)))
    (let ((%last997361 (env-ref env1011051 1)))
      (let ((f997389 (env-ref env1011051 2)))
        (let ((k997671 (prim car k-and-args997672)))
          (let ((fargs997391 (prim cdr k-and-args997672)))
            (let ((ae998601
                   (make-closure
                    clo1011048
                    fargs997391
                    k997671
                    %last997361
                    f997389)))
              (let ((ae998603 '1))
                (let ((args1010011$%drop-right997365$0 '()))
                  (let ((args1010011$%drop-right997365$1
                         (prim cons ae998603 args1010011$%drop-right997365$0)))
                    (let ((args1010011$%drop-right997365$2
                           (prim
                            cons
                            fargs997391
                            args1010011$%drop-right997365$1)))
                      (let ((args1010011$%drop-right997365$3
                             (prim
                              cons
                              ae998601
                              args1010011$%drop-right997365$2)))
                        (clo-app
                         %drop-right997365
                         args1010011$%drop-right997365$3)))))))))))))
 (proc
  (clo1011048 env1011049 arglist1010000)
  (let ((fargs997391 (env-ref env1011049 0)))
    (let ((k997671 (env-ref env1011049 1)))
      (let ((%last997361 (env-ref env1011049 2)))
        (let ((f997389 (env-ref env1011049 3)))
          (let ((unusedk997673 (prim car arglist1010000)))
            (let ((arglist1010001 (prim cdr arglist1010000)))
              (let ((anf-bind997550 (prim car arglist1010001)))
                (let ((ae998608
                       (make-closure
                        clo1011046
                        fargs997391
                        k997671
                        %last997361)))
                  (let ((applyarg997677 (prim cons ae998608 anf-bind997550)))
                    (clo-app f997389 applyarg997677)))))))))))
 (proc
  (clo1011046 env1011047 arglist1010003)
  (let ((fargs997391 (env-ref env1011047 0)))
    (let ((k997671 (env-ref env1011047 1)))
      (let ((%last997361 (env-ref env1011047 2)))
        (let ((unusedk997674 (prim car arglist1010003)))
          (let ((arglist1010004 (prim cdr arglist1010003)))
            (let ((anf-bind997551 (prim car arglist1010004)))
              (let ((ae998613
                     (make-closure clo1011044 k997671 anf-bind997551)))
                (let ((args1010010$%last997361$0 '()))
                  (let ((args1010010$%last997361$1
                         (prim cons fargs997391 args1010010$%last997361$0)))
                    (let ((args1010010$%last997361$2
                           (prim cons ae998613 args1010010$%last997361$1)))
                      (clo-app
                       %last997361
                       args1010010$%last997361$2))))))))))))
 (proc
  (clo1011044 env1011045 arglist1010006)
  (let ((k997671 (env-ref env1011045 0)))
    (let ((anf-bind997551 (env-ref env1011045 1)))
      (let ((unusedk997675 (prim car arglist1010006)))
        (let ((arglist1010007 (prim cdr arglist1010006)))
          (let ((anf-bind997552 (prim car arglist1010007)))
            (let ((prim-ret997676 (prim cons anf-bind997551 anf-bind997552)))
              (let ((args1010009$k997671$0 '()))
                (let ((args1010009$k997671$1
                       (prim cons prim-ret997676 args1010009$k997671$0)))
                  (let ((args1010009$k997671$2
                         (prim cons prim-ret997676 args1010009$k997671$1)))
                    (clo-app k997671 args1010009$k997671$2)))))))))))
 (proc
  (clo1011056 env1011057 arglist1009990)
  (let ((f997383 (env-ref env1011057 0)))
    (let ((k997666 (prim car arglist1009990)))
      (let ((arglist1009991 (prim cdr arglist1009990)))
        (let ((v997385 (prim car arglist1009991)))
          (let ((arglist1009992 (prim cdr arglist1009991)))
            (let ((r997386 (prim car arglist1009992)))
              (let ((ae998571 (make-closure clo1011054 k997666 r997386)))
                (let ((args1009998$f997383$0 '()))
                  (let ((args1009998$f997383$1
                         (prim cons v997385 args1009998$f997383$0)))
                    (let ((args1009998$f997383$2
                           (prim cons ae998571 args1009998$f997383$1)))
                      (clo-app f997383 args1009998$f997383$2))))))))))))
 (proc
  (clo1011054 env1011055 arglist1009994)
  (let ((k997666 (env-ref env1011055 0)))
    (let ((r997386 (env-ref env1011055 1)))
      (let ((unusedk997667 (prim car arglist1009994)))
        (let ((arglist1009995 (prim cdr arglist1009994)))
          (let ((anf-bind997549 (prim car arglist1009995)))
            (let ((prim-ret997668 (prim cons anf-bind997549 r997386)))
              (let ((args1009997$k997666$0 '()))
                (let ((args1009997$k997666$1
                       (prim cons prim-ret997668 args1009997$k997666$0)))
                  (let ((args1009997$k997666$2
                         (prim cons prim-ret997668 args1009997$k997666$1)))
                    (clo-app k997666 args1009997$k997666$2)))))))))))
 (proc
  (clo1011062 env1011063 arglist1009978)
  (let ((n997367 (env-ref env1011063 0)))
    (let ((%take997349 (env-ref env1011063 1)))
      (let ((lst997366 (env-ref env1011063 2)))
        (let ((k997662 (env-ref env1011063 3)))
          (let ((unusedk997663 (prim car arglist1009978)))
            (let ((arglist1009979 (prim cdr arglist1009978)))
              (let ((anf-bind997539 (prim car arglist1009979)))
                (let ((anf-bind997540 (prim - anf-bind997539 n997367)))
                  (let ((args1009981$%take997349$0 '()))
                    (let ((args1009981$%take997349$1
                           (prim
                            cons
                            anf-bind997540
                            args1009981$%take997349$0)))
                      (let ((args1009981$%take997349$2
                             (prim cons lst997366 args1009981$%take997349$1)))
                        (let ((args1009981$%take997349$3
                               (prim cons k997662 args1009981$%take997349$2)))
                          (clo-app
                           %take997349
                           args1009981$%take997349$3))))))))))))))
 (proc
  (clo1011066 env1011067 arglist1009968)
  (let ((k997661 (prim car arglist1009968)))
    (let ((arglist1009969 (prim cdr arglist1009968)))
      (let ((x997363 (prim car arglist1009969)))
        (let ((arglist1009970 (prim cdr arglist1009969)))
          (let ((y997364 (prim car arglist1009970)))
            (let ((args1009972$k997661$0 '()))
              (let ((args1009972$k997661$1
                     (prim cons x997363 args1009972$k997661$0)))
                (let ((args1009972$k997661$2
                       (prim cons x997363 args1009972$k997661$1)))
                  (clo-app k997661 args1009972$k997661$2)))))))))))
